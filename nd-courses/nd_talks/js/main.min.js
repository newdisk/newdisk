"use strict";function _defineProperty(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}var _data,courseStructure={course:"Эффективное общение по телефону",description:"Модульный курс для дистанционного обучения",chapters:[{chapter_id:1,chapter_location:"chapter01",title:"Введение",description:"Эффективное общение по телефону",pages:[{page_id:1,title:"Эффективное общение по телефону",location:"page01",hasSound:!0,type:"simple_page",messages:[""]},{page_id:2,title:"Введение",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Как построено обучение",location:"page03",hasSound:!1,type:"simple_page",messages:[""]},{page_id:4,title:"Предварительный тест",location:"page04",hasSound:!1,type:"simple_page",messages:[""]},{page_id:5,title:"Предварительное тестирование",location:"page05",hasSound:!1,type:"test",data:{messages:[""]}}]},{chapter_id:2,chapter_location:"chapter02",title:"Глава 1",description:"Входящие звонки",pages:[{page_id:1,title:"Входящие звонки",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Умение правильно отвечать на звонки",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Телефонный этикет. Телефонный имидж компании",location:"page03",hasSound:!1,type:"simple_page",messages:[""]},{page_id:4,title:"Задание 1",location:"page04",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Поднимать трубку нужно не позднее:",taskType:"single",questionList:[{label:"1-2-х двух звонков",right:0},{label:"2-3-х звонков ",right:1},{label:"3-4-х звонков",right:0}]},{taskText:"Что нужно обязательно сделать, подняв трубку?",taskType:"multi",questionList:[{label:"поздороваться",right:1},{label:"назвать компанию ",right:1},{label:"представиться ",right:1}]},{taskText:"Как лучше всего дать понять, что вы слушаете абонента?",taskType:"single",questionList:[{label:"«Говорите»",right:0},{label:"«Слушаю вас» ",right:1},{label:"«Алло»",right:0}]}],messages:["Поздравляем! Вы отлично разбираетесь в правилах телефонного этикета.","Некоторые правила телефонного этикета нарушены. Попробуйте ответить на вопросы еще раз.","Увы, вряд ли вам удастся договориться с клиентом подобным образом. Выполните задание снова.","К сожалению, с заданием вы не справились. посмотрите правильный ответ."]}},{page_id:5,title:"Задание 2",location:"page05",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"В процессе разговора по телефону:",questionList:[{label:"никакой фоновый шум недопустим ",right:1},{label:"можно перекладывать бумаги",right:0},{label:"можно спросить что-то у коллеги, если вы не владеете всей информацией",right:0}]},{taskText:"При переадресации звонка:",questionList:[{label:"нужно обязательно кратко изложить суть вопроса тому сотруднику, которому вы переадресовываете звонок ",right:1},{label:"клиент должен сам повторно объяснить, чего он хочет, поскольку при передаче часть информации может исказиться",right:0}]}],messages:["Вы абсолютно правы! Вежливость – одно из главных правил телефонного общения. Поэтому при разговоре по телефону фоновый шум не допустим, а клиент не должен по десять раз излагать свой вопрос разным сотрудникам.","Где-то закралась ошибка. Вспомните, что вежливость – одно из главных правил общения по телефону, и ответьте на вопросы снова.","Это неверный ответ. У вас есть еще одна попытка для выполнения задания.","Знать правила общения по телефону нужно любому современному человеку. Посмотрите правильный ответ и запомните эти правила."]}},{page_id:6,title:"Задание 3",location:"page06",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Если вы разговариваете по телефону, и в это время зазвонил второй аппарат, вы должны:",questionList:[{label:"прервать разговор с первым абонентом и ответить второму",right:0},{label:"сообщить первому абоненту, что вам нужно ответить на другой звонок и ответить второму абоненту",right:0},{label:"спросить разрешения у первого абонента ответить на второй звонок, поблагодарить за согласие и очень кратко ответить второму абоненту ",right:1}]},{taskText:"Если в процессе телефонного разговора с клиентом вам нужно получить информацию от другого сотрудника, вы:",questionList:[{label:"воспользуетесь кнопкой «Hold» ",right:1},{label:"прикроете микрофон рукой",right:0},{label:"попросите клиента перезвонить вам через пару минут",right:0},{label:"прервете разговор и сами перезвоните клиенту",right:0}]}],messages:["Все верно! Прерывать разговор с клиентом недопустимо без его согласия. Если вы бросили трубку, клиент вряд ли захочет общаться с вами снова.","Не совсем так. Вспомните о том, что прерывать разговор без согласия клиента недопустимо, так же как и вести параллельные разговоры с другими сотрудниками.","Увы, снова ошибка. Представьте себя на месте клиента. Как бы вам хотелось общаться по телефону? Теперь ответьте на вопросы еще раз.","С заданием вы не справились. Посмотрите и запомните правильный ответ."]}},{page_id:7,title:"Задание 4",location:"page07",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Кто должен перезвонить при необходимости повторного разговора?",questionList:[{label:"клиент",right:0},{label:"сотрудник компании ",right:1},{label:"не имеет значения",right:0}]},{taskText:"Кто кладет трубку первым?",questionList:[{label:"позвонивший ",right:1},{label:"тот, кому позвонили",right:0},{label:"не имеет значения",right:0}]},{taskText:"Если разговор прервался, кто должен перезвонить?",questionList:[{label:"инициатор разговора  ",right:1},{label:"тот, кому позвонили",right:0},{label:"не имеет значения",right:0}]}],messages:["Верно! Есть общее правило: перезванивать при прерывании звонка и заканчивать разговор должен всегда инициатор разговора.","Не совсем верно. Есть общее правило: перезванивать при прерывании звонка и заканчивать разговор должен всегда инициатор разговора.","И снова ошибка. Наверное, вы редко звоните по телефону.","Посмотрите правильный ответ и не совершайте больше подобных ошибок."]}},{page_id:8,title:"Завершающий этап разговора",location:"page08",hasSound:!1,type:"simple_page",messages:[""]},{page_id:9,title:"Записная книжка. Задание 1",location:"page09",hasSound:!1,type:"note_page",data:{markers:[{id:0,label:"Фразы для вашего лексикона"}],questionList:[{label:"Спасибо за заказ! ",marker:-1},{label:"Я рад, что мы смогли вам помочь. ",marker:-1},{label:"Очень было приятно поговорить с вами. ",marker:-1},{label:"Спасибо за звонок!",marker:-1},{label:"Звоните нам в любое время.",marker:-1},{label:"Если у вас возникнут вопросы, пожалуйста, звоните.",marker:-1},{label:"Звоните, будем рады ответить на все ваши вопросы.",marker:-1},{label:"Спасибо, что обратились в нашу компанию!",marker:-1}]}},{page_id:10,title:"Телефонный имидж компании",location:"page10",hasSound:!1,type:"simple_page",messages:[""]},{page_id:11,title:"Каким должен быть ваш голос?",location:"page11",hasSound:!1,type:"simple_page",messages:[""]},{page_id:12,title:"Задание 5",location:"page12",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,taskText:"Прослушайте аудиофрагменты. <br/>Выберите вариант наиболее подходящего звучания голоса.",questionList:[{label:"audio/a1.mp3",right:0},{label:"audio/a2.mp3",right:0},{label:"audio/a3.mp3",right:0},{label:"audio/a4.mp3",right:0},{label:"audio/a5.mp3",right:1}],messages:["Правильный выбор! Ваша речь по телефону должна быть уверенной, внятной и в среднем темпе.","К сожалению, вы ошиблись. Вспомните о том, что речь по телефону должна быть уверенной, внятной и в среднем темпе.","Неверно! Слишком мрачный, небрежный или невнятный стиль общения – не совсем то, чего ожидает клиент при телефонном разговоре. Ответьте на вопрос снова.","Речь по телефону должна быть уверенной, внятной и в среднем темпе. Это правило обязательно пригодится вам!"]}},{page_id:13,title:"Записная книжка. Задание 2",location:"page13",hasSound:!1,type:"note_page",data:{task_fields:24,useColumns:!0,maxlength:10,titles:["Спокойный","Уверенный","С выразительными интонациями","Низкий","Не тихий и не громкий","Дружелюбный"],messages:[""]}},{page_id:14,title:"Имидж компании в телефонном разговоре",location:"page14",hasSound:!1,type:"simple_page"},{page_id:15,title:"Задание 6",location:"page15",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"У Ольги сложилось впечатление, что Константин настроен помочь.",questionList:[{label:"Да",right:0},{label:"Нет",right:1}]},{taskText:"Константин внимательно слушал Ольгу.",questionList:[{label:"Да",right:0},{label:"Нет",right:1}]},{taskText:"Константин был вежлив.",questionList:[{label:"Да",right:0},{label:"Нет",right:1}]},{taskText:"Константин давал полные и точные сведения.",questionList:[{label:"Да",right:0},{label:"Нет",right:1}]},{taskText:"Константин, в конечном счете, понял проблему Ольги. ",questionList:[{label:"Да",right:1},{label:"Нет",right:0}]},{taskText:"У Ольги сложилось впечатление, что Константин ее понял.",questionList:[{label:"Да",right:0},{label:"Нет",right:1}]},{taskText:"Ольга купит пластиковую карту в этом банке.",questionList:[{label:"Да",right:0},{label:"Нет",right:1}]}],messages:["Совершенно верно! Вряд ли Ольга купит теперь пластиковую карту в этом банке.","Вы дали неправильный ответ. Пересмотрите эпизод внимательнее и выполните задание снова.","Вы снова ошиблись. Константин допустил ряд промахов, хотя, в конечном счете, и понял Ольгу.","Посмотрите правильный ответ. Лучше учиться на чужих ошибках! Не допускайте подобных промахов в своей деятельности. "]}},{page_id:16,title:"Задание 7",location:"page16",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:8,markers:[{id:0,label:"Отрицательное"},{id:1,label:"Положительное "}],questionList:[{label:'Доброе утро, компания "NNN", Анна Кравцова, слушаю вас.',right:1},{label:"К сожалению, Инны Федоровны нет: она сегодня болеет.",right:0},{label:"Спасибо за заказ. Надеюсь, и в следующий раз вы обратитесь к нам снова. До свидания.",right:1},{label:"Я действительно не знаю, почему наш сотрудник не перезвонил вам. А вы не пробовали сами позвонить ему?",right:0},{label:"Она задерживается на встрече, у нее возникли проблемы с клиентом. Может, ей что-то передать?",right:0},{label:"Доброе утро, сервисный отдел.",right:0},{label:"Я сразу же передала ваш заказ в отдел доставки. Я не знаю, почему они вам не звонят.",right:0},{label:"Извините, я этим не занимаюсь. Вам нужно позвонить в отдел заказов.",right:0}],messages:["1","2","3","4"]}},{page_id:17,title:"Задание 8",location:"page17",hasSound:!1,type:"note_exercise",typeNote:"note_exercise",data:{task_fields:6,useColumns:!1,maxlength:100,titles:["ОТВЕТ НА ЗВОНОК КЛИЕНТА","ВАШ ВАРИАНТ"],questionList:[{label:"Извините, но, к сожалению, сегодня Инны Федоровны нет: она больна.",right:0},{label:"Я действительно не знаю, почему наш сотрудник не перезвонил вам. А вы не пробовали сами позвонить ему?",right:0},{label:"Она задерживается на встрече, у нее возникли проблемы с клиентом. Может, ей что-то передать?",right:0},{label:"Доброе утро, сервисный отдел.",right:0},{label:"Я сразу же передала ваш заказ в отдел доставки. Я не знаю, почему они вам не звонят.",right:0},{label:"Извините, я этим не занимаюсь. Вам нужно позвонить в отдел заказов.",right:0}],messages:[""]}},{page_id:18,title:"Сравнение",location:"page18",hasSound:!1,type:"simple_page",data:{task_fields:6,chapter_id:1,note_id:17,note_volume:6,note_count:0,useColumns:!0,maxlength:50,titles:["ПРЕДЛАГАЕМЫЙ ОТВЕТ","ВАШ ВАРИАНТ"],questionList:[{label:"К сожалению, Инна Федоровна сейчас не может подойти к телефону. Может быть, я смогу вам помочь?",right:0},{label:"Извините, что наш сотрудник не смог перезвонить вам. Чем я могу вам помочь?",right:0},{label:"Оставьте ваши координаты, я попрошу Елену Сергеевну с вами связаться сразу же, как только она освободится.",right:0},{label:"Доброе утро, сервисный отдел, Иван Петров, слушаю вас.",right:0},{label:"Я приношу вам извинения за задержку доставки. Я сейчас все выясню и вам перезвоню.",right:0},{label:"На ваш вопрос ответят в отделе заказов, обратитесь к диспетчеру Ивану Петрову, я сейчас вас переключу на него (или: телефон Ивана Петрова 257-75-98).",right:0}],messages:[""]}},{page_id:19,title:"Комментарии",location:"page19",hasSound:!1,type:"simple_page",messages:[""]},{page_id:20,title:"Комментарии",location:"page20",hasSound:!1,type:"simple_page",messages:[""]},{page_id:21,title:"Комментарии",location:"page21",hasSound:!1,type:"simple_page",messages:[""]},{page_id:22,title:"Записная книжка. Задание 3",location:"page22",hasSound:!1,type:"note_page",data:{task_fields:8,useColumns:!0,maxlength:60,titles:["ОТВЕТ СОТРУДНИКА КОМПАНИИ:","ВАШ ВАРИАНТ ОТВЕТА:"],messages:[""]}},{page_id:23,title:"Задание 9",location:"page23",hasSound:!1,type:"note_exercise",data:{task_fields:7,useColumns:!1,maxlength:40,titles:["БЛАНК ДЛЯ ПРИЕМА ТЕЛЕФОННОГО СООБЩЕНИЯ"],messages:[""]}},{page_id:24,title:"Комментарии",location:"page24",hasSound:!1,type:"simple_page",messages:[""]},{page_id:25,title:"Записная книжка. Задание 4",location:"page25",hasSound:!1,type:"note_page",data:{task_fields:14,useColumns:!0,maxlength:60,titles:["БЛАНК ДЛЯ ПРИЕМА ТЕЛЕФОННОГО СООБЩЕНИЯ","ДАННЫЕ"],messages:[""]}},{page_id:26,title:"Эффективные консультации по телефону",location:"page26",hasSound:!1,type:"simple_page",messages:[""]},{page_id:27,title:"Задание 10",location:"page27",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Киноэпизод ",q_id:0,video:"r40"}],variants:[{label:"Консультант не воспринял смысл сообщения",v_id:1,q_id:0},{label:"Консультант не уловил эмоции",v_id:0,q_id:-1}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Киноэпизод",q_id:0,video:"r5"}],variants:[{label:"Консультант не воспринял смысл сообщения  ",v_id:0,q_id:-1},{label:"Консультант не уловил эмоции ",v_id:1,q_id:0}]}}],defaultLabel:"Не выбран",messages:["Вы дали верный ответ! В первом случае консультант не воспринял смысл сообщения, а во втором – не уловил эмоции.","Вы перепутали, в каком случае консультант не воспринял смысл сообщения, а где – не уловил эмоции. Попробуйте еще раз.","Неверно! Посмотрите киноэпизоды внимательнее и выполните задание снова.","И снова ошибка! Посмотрите правильный ответ."]}},{page_id:28,title:"Комментарии",location:"page28",hasSound:!1,type:"simple_page",messages:[""]},{page_id:29,title:"Задание 11",location:"page29",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,taskText:"",questionList:[{label:"Эхо-пересказ",right:0},{label:"Пересказ-резюме ",right:1}],messages:["Ваш ответ абсолютно верный! Менеджер использовала технику пересказ-резюме.","Вы ошиблись. Менеджер использовала другую технику пересказа.","И снова ошибка! Будьте внимательнее.","Увы, с заданием вы не справились. В данной ситуации менеджер использовала технику пересказа-резюме."]}},{page_id:30,title:"Задание 12",location:"page30",hasSound:!1,type:"note_exercise",typeNote:"note_exercise",data:{task_fields:1,useColumns:!1,maxlength:1e3,titles:["ОСНОВНАЯ ИНФОРМАЦИЯ"],messages:[""]}},{page_id:31,title:"Открытые и закрытые вопросы",location:"page31",hasSound:!1,type:"simple_page",messages:[""]},{page_id:32,title:"Задание 13",location:"page32",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Вы узнали о компании из газетной рекламы?",right:0},{label:"Как вы узнали о нашей компании?",right:1},{label:"Какие преимущества имеет работа с внешними провайдерами?",right:1},{label:"Вы часто пользуетесь услугами внешних провайдеров?",right:0},{label:"Как вы предпочитаете путешествовать?",right:1},{label:"Вы в первый раз отправляете ребенка за рубеж?",right:0},{label:"Чем обычно занимается ваш ребенок в свободное время?",right:1},{label:"Каких сотрудников вы планируете обучать в первую очередь?",right:1}],messages:["Вы совершенно верно определили открытые вопросы. Теперь смело можете приступать к практике.","Вы перепутали открытые и зарытые вопросы. Попробуйте еще раз!","Где-то закралась ошибка. Вспомните, что открытые вопросы побуждают дать развернутый ответ.","Обратите внимание на правильный ответ."]}},{page_id:33,title:"Сравнение",location:"page33",hasSound:!1,type:"simple_page",messages:[""]},{page_id:34,title:"Задание 14",location:"page34",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Внимательно слушать клиента и запоминать информацию о его потребностях. ",right:1},{label:"Прежде чем что-то объяснять, надо уточнить потребности, собрать полную информацию, задавая вопросы. ",right:1},{label:"Говорить четко, не торопясь, рассчитывая, что ваш собеседник ведет записи. ",right:1},{label:"Проверить правильность понимания собеседником ваших объяснений.  ",right:1},{label:"Избегать специальных терминов или специально их объяснять.",right:0},{label:"Делать паузы для ответов собеседника.",right:0},{label:"Говорить только то, в чем уверен. ",right:1},{label:"Нельзя поучать, говорить «свысока», допускать фамильярности при общении с клиентом. ",right:1}],messages:[" Вы правы. Действительно, в этом эпизоде консультант нарушил множество правил…","Не совсем так. Попробуйте ответить еще раз, учитывая, что консультант в этом эпизоде нарушил множество правил.","И снова ошибка… Константин слушал клиента невнимательно, перебивал его, поучал, говорил свысока и допустил еще ряд ошибок.","С заданием вы не справились. Запомните правильный ответ."]}},{page_id:35,title:"Задание 15",location:"page35",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,taskText:"",questionList:[{label:"Отправить дочь в Грецию",right:0},{label:"Отправить дочь в Турцию",right:0},{label:"Отправить дочь на дачу к бабушке  ",right:1}],messages:["Все верно! При таком неграмотном консультировании Ольге остается только отправить дочку на дачу…","Не совсем так. Консультирование было довольно неудачным… Попробуйте еще раз.","Будьте внимательнее. После такого разговора вряд ли Ольга захочет отправить дочь за границу.","А теперь обратите внимание на правильный ответ."]}},{page_id:36,title:"Задание 16",location:"page36",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Презентация более убедительна, если строится в режиме:",questionList:[{label:"монолога",right:0},{label:"диалога с клиентом ",right:1}]},{taskText:"С чего лучше всего начать презентацию товара или услуги клиенту:",questionList:[{label:"с наиболее ярких деталей и впечатляющих фактов",right:0},{label:"с того, что больше всего волнует клиента ",right:1},{label:"с положительных отзывов других клиентов",right:0}]},{taskText:"Чем больше говорит сотрудник в процессе презентации, тем лучше.",questionList:[{label:"да ",right:0},{label:"нет",right:1}]}],messages:["Верно! Вы отлично знаете правила презентации.","Не совсем так. Повторите правила консультирования и выполните задание снова.","Где-то закралась ошибка… Вспомните, что диалог всегда более продуктивен, и важно использовать то, что больше всего волнует клиента.","Увы, с заданием вы не справились. Запомните правила презентации: они пригодятся вам в работе."]}},{page_id:37,title:"Задание 17",location:"page37",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"У вас есть дорогой, средний по цене и дешевый товар (услуга). Какому алгоритму представления товаров вы будете следовать?",taskType:"single",questionList:[{label:"Начинать с самого дорогого предложения, затем переходить к дешевому, заканчивать – средним по цене.",right:0},{label:"Начинать с предложения среднего по цене, затем переходить к более дорогому, заканчивать – самым дешевым. ",right:1},{label:"Начинать с самого дешевого предложения, затем переходить к среднему и заканчивать самым дорогим",right:0}]},{taskText:"Перед презентацией необходимо уточнить запрос клиента.",taskType:"single",questionList:[{label:"да",right:1},{label:"нет",right:0}]}],messages:["Все верно! Начинать нужно со среднего по цене предложения, а заканчивать – самым дешевым.","Ваш ответ неверный! В презентации важно опираться на запросы клиента.","И снова ошибка. Попробуйте изменить порядок представления товаров.","Обратите внимание на правильный ответ."]}},{page_id:38,title:"Правила телефонной презентации",location:"page38",hasSound:!1,type:"simple_page",messages:[""]},{page_id:39,title:"Правила телефонной презентации",location:"page39",hasSound:!1,type:"simple_page",messages:[""]},{page_id:40,title:"Задание 18",location:"page40",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Остался ли клиент доволен состоявшимся разговором?",taskType:"single",questionList:[{label:"да",right:1},{label:"нет",right:0}]},{taskText:"Был ли клиент готов к покупке?",taskType:"single",questionList:[{label:"да",right:1},{label:"нет",right:0}]},{taskText:"Почему продажа не состоялась? ",taskType:"multi",questionList:[{label:"сотрудница невнимательно слушала",right:0},{label:"сотрудница не уточнила потребности клиентки",right:0},{label:"сотрудница была не уверена в информации, которую сообщала",right:0},{label:"сотрудница не предложила записать координаты банка",right:1},{label:"сотрудница не предложила клиентке сделать следующий шаг – подъехать в банк и оформить карточки",right:1}]}],messages:["Вы правы! Продажа не состоялась лишь потому, что сотрудница банка не предложила клиентке подъехать в офис или хотя бы записать координаты банка.","Ваш ответ неверный. Продажа почти состоялась: Ольга осталась довольна консультированием. Нужно было лишь перейти от слов к делу…","Не совсем так. Будьте внимательнее и выполните задание снова.","Посмотрите правильный ответ. В данной ситуации важно было не только квалифицированно проконсультировать клиента, но и подтолкнуть его к действию."]}},{page_id:41,title:"Как сообщать неприятные новости",location:"page41",hasSound:!1,type:"simple_page",messages:[""]},{page_id:42,title:"Задание 19",location:"page42",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,taskText:"",questionList:[{label:"Дождаться, пока клиент позвонит вам, и при этом сообщить ему неприятную новость.",right:0},{label:"Самому первым позвонить клиенту. ",right:1}],messages:["Вы правы! Сообщать неприятные известия психологически тяжело, поэтому каждый из нас подсознательно оттягивает этот момент. Однако, взяв инициативу в свои руки, можно сгладить негативное впечатление клиента через особую «подачу» неприятных новостей.","Не совсем так. В любом негативном событии всегда можно найти что-то положительное… Попробуйте еще раз.","И снова ошибка. Учтите, что взяв инициативу в свои руки, можно сгладить негативное впечатление клиента через особую «подачу» неприятных новостей. Этот навык полезен не только в деловой, но и в личной жизни.","Увы, с заданием вы не справились. В данной ситуации нужно взять инициативу в свои руки и самому позвонить клиенту."]}},{page_id:43,title:"Задание 20",location:"page43",hasSound:!1,type:"note_exercise",typeNote:"note_exercise",data:{task_fields:6,useColumns:!1,maxlength:300,titles:["ВАШ ВАРИАНТ","СИТУАЦИЯ"],questionList:[{label:"Вы вынуждены тратить время в ожидании",right:0},{label:"Вы считаете себя не очень хорошим продавцом",right:0},{label:"Вы зарабатываете меньше денег, чем вам хотелось бы",right:0}],messages:[""]}},{page_id:44,title:"Сравнение-1",location:"page44",hasSound:"false",type:"simple_page",data:{task_fields:18,chapter_id:1,note_id:43,note_volume:2,note_count:0,useColumns:!0,maxlength:50,titles:["ПРЕДЛАГАЕМЫЕ ВАРИАНТЫ","ВАШ ВАРИАНТ"],questionList:[{label:"У вас появилось дополнительное время, которое можно использовать в своих целях. В зависимости от ситуации и исходя из ваших личных пристрастий, вы можете, например, еще раз продумать план предстоящей встречи, просто почитать книгу, отдохнуть, учить иностранный язык, решать головоломки и т.д.",right:0},{label:"Если вы ожидаете, например, встречи, где должен решиться какой-то важный вопрос, то увеличиваются шансы положительного решения. Как правило, многие люди чувствуют себя неудобно из-за того, что заставили кого-то долго ждать, это делает их более уступчивыми и доброжелательными.",right:0}],messages:[""]}},{page_id:45,title:"Сравнение-2",location:"page45",hasSound:"false",type:"simple_page",data:{task_fields:18,chapter_id:1,note_id:43,note_volume:2,note_count:2,useColumns:!0,maxlength:50,titles:["ПРЕДЛАГАЕМЫЕ ВАРИАНТЫ","ВАШ ВАРИАНТ"],questionList:[{label:"Считать себя недостаточно профессиональным – это хорошо. Только трезвые и самокритичные люди умеют признавать свое несовершенство и стремятся постоянно оттачивать свои навыки. В настоящий момент вы просто на полпути к вершине!",right:0},{label:"Если ваш внутренний голос постоянно говорит вам, что вы никогда не станете хорошим продавцом, возможно, вы просто зарываете в землю какой-то другой талант. Прислушайтесь к нему, и вместо того, чтобы впустую тратить время, не упустите шанс реализоваться в другой профессии.",right:0}],messages:[""]}},{page_id:46,title:"Сравнение-3",location:"page46",hasSound:"false",type:"simple_page",data:{task_fields:18,chapter_id:1,note_id:43,note_volume:2,note_count:4,useColumns:!0,maxlength:50,titles:["ПРЕДЛАГАЕМЫЕ ВАРИАНТЫ","ВАШ ВАРИАНТ"],questionList:[{label:"Возможно, это шанс научиться ограничивать свои потребности. (Счастлив не тот, у кого много денег, а тот, кому их хватает.)",right:0},{label:"Внутреннее состояние, когда вам хочется зарабатывать все больше и больше денег, несмотря на то, что ваша зарплата и так постоянно увеличивается, может свидетельствовать о вашем сильном стремлении к независимости и выраженных предпринимательских способностях. Ведь только работая на себя, можно действительно заработать ту сумму, которая вас устроит.",right:0}],messages:[""]}},{page_id:47,title:"Задание 21",location:"page47",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Там нет очередей ",right:1},{label:"Современное оборудование ",right:1},{label:"Специалисты из лучших поликлиник ",right:1},{label:"Гарантированное качество услуг ",right:1},{label:"Поликлиника находится ближе к клиенту  ",right:1},{label:"Цены ниже  ",right:1}],messages:["Все верно! Ольга нашла массу плюсов в такой непростой ситуации.","Не совсем так. Клиент был расстроен тем, что не попадает в определенную клинику, но консультант нашла массу плюсов и разрешила ситуацию.","И снова ошибка. Наверное, что-то отвлекло вас. Попробуйте снова!","В этом задании все ответы верные. Ольга нашла массу плюсов, чтобы сгладить неприятную ситуацию."]}},{page_id:48,title:"Резюме",location:"page48",hasSound:!1,type:"simple_page",messages:[""]}]},{chapter_id:3,chapter_location:"chapter03",title:"Глава 2",description:"Исходящие («холодные») звонки – поиск новых клиентов по телефону",pages:[{page_id:1,title:"Исходящие («холодные») звонки – поиск новых клиентов по телефону",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Холодные звонки",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Задание 22. Процесс подготовки к звонку",location:"page03",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Не слушают собеседника",right:0},{label:"Говорят слишком быстро",right:1},{label:"Не владеют всей необходимой информацией",right:0},{label:"Демонстрируют неуверенность",right:1},{label:"Стремятся сразу делать подробную презентацию",right:1},{label:"Направляют звонок не тому, кто, вероятно, заинтересуется их предложением",right:0},{label:"Задают «неразумные» вопросы",right:1},{label:"Не интересуются, удобно ли клиенту говорить",right:1},{label:"Бывают слишком фамильярными",right:0},{label:"Не объясняют цели звонка",right:0},{label:"Относятся к клиенту как к очередному «телефонному номеру», а не как к личности",right:1},{label:"Не проявляют интерес и уважение, несдержанны и многословны",right:0}],messages:["Все верно! Продавец был неуверен в себе, поэтому допустил много ошибок.","Ваш ответ не совсем верный. В этой ситуации неуверенность продавца повлекла много ошибок в телефонном диалоге.","И снова ошибка. Будьте внимательнее.","Обратите внимание на правильный ответ."]}},{page_id:4,title:"Основные этапы подготовки",location:"page04",hasSound:!1,type:"simple_page",messages:[""]},{page_id:5,title:"Разделение клиентов на группы",location:"page05",hasSound:!1,type:"simple_page",messages:[""]},{page_id:6,title:"Записная книжка. Задание 5",location:"page06",hasSound:!1,type:"note_page",data:{task_fields:12,useColumns:!0,maxlength:30,titles:["КЛИЕНТСКИЕ ГРУППЫ","ПРЕИМУЩЕСТВА"],messages:[""]}},{page_id:7,title:"Задание 23. Сбор информации",location:"page07",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Профиль компании",right:1},{label:"Планы развития компании",right:1},{label:"Количество людей, работающих в компании",right:1},{label:"Кто вас может порекомендовать",right:1},{label:"Место компании на рынке",right:1},{label:"Финансовое положение компании",right:0},{label:"Лицо, ответственное за принятие решения по вашему вопросу",right:1}],messages:["Это правильный ответ! На этапе сбора информации важно узнать как можно больше о клиенте. О профиле, размере, планах развития компании, а также ее месте на рынке вы узнаете из бизнес-справочников, газет, журналов и т.д. Через секретаря выясните информацию о лице, ответственном за принятие решения по вашему вопросу. Заранее продумайте, кто может вас порекомендовать.","Не совсем так. Учтите, что на этапе сбора информации важно узнать как можно больше о клиенте.","И снова ошибка. Попробуйте снова.","Посмотрите правильный ответ. Информация о профиле, размере, планах развития компании, а также ее месте на рынке берется из бизнес-справочников, газет, журналов и т.д. Через секретаря можно выяснить информацию о лице, ответственном за принятие решения по вашему вопросу. Нужно также заранее продумать, кто может вас порекомендовать."]}},{page_id:8,title:"Формулировка целей звонка",location:"page08",hasSound:!1,type:"simple_page",messages:[""]},{page_id:9,title:"Задание 24",location:"page09",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Вы первый раз звоните клиенту, основная цель – назначить встречу.",taskType:"multi",questionList:[{label:"Познакомиться, рассказать клиенту о выгодах сотрудничества с вашей компанией.",right:1},{label:"Сообщить, что вы молодая, но очень динамично развивающаяся компания. ",right:0},{label:"Убедить в необходимости приобретения ваших продуктов/услуг.",right:0}]},{taskText:"Ваша компания давно работает на рынке, активно рекламирует свою продукцию. Клиент, которому вы звоните, никогда не работал/или работал очень давно с вашей компанией. Основная цель разговора – назначить встречу.",taskType:"multi",questionList:[{label:"Узнать, почему отсутствует сотрудничество.",right:1},{label:"Убедить в необходимости приобретения ваших продуктов/услуг.",right:0},{label:"Подчеркнуть ваши конкурентные преимущества. ",right:1}]}],messages:["Все верно. Если вы звоните клиенту впервые, важно рассказать о выгодах сотрудничества.","Не совсем так. Попробуйте еще раз.","Подумайте еще раз. Сформулировать цели звонка очень важно.","Посмотрите правильный ответ. Если вы звоните клиенту, который прежде работал с вашей компанией, важно узнать, почему отсутствует сотрудничество и рассказать про конкурентные преимущества."]}},{page_id:10,title:"Записная книжка. Задание 6",location:"page10",hasSound:!1,type:"note_page",data:{task_fields:12,useColumns:!0,maxlength:30,titles:["ПОТЕНЦИАЛЬНЫЙ КЛИЕНТ","ОСНОВНАЯ:","ДОПОЛНИТЕЛЬНАЯ:"],messages:[""]}},{page_id:11,title:"Этапы разговора по телефону",
location:"page11",hasSound:!1,type:"simple_page",messages:[""]},{page_id:12,title:"Этапы холодного звонка: начало разговора",location:"page12",hasSound:!1,type:"simple_page",messages:[""]},{page_id:13,title:"Задание 25",location:"page13",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,useVideo:!1,qCount:6,videoPoster:"img/video-01.png",videoUrl:"video/r1.mp4",videoWidth:640,videoHeight:480,markers:[{id:0,label:"Нет"},{id:1,label:"Да"}],questionList:[{label:"Добрый день, вас беспокоит Иван Сидоров, компания «Свежий ветер»…",right:0},{label:"Здравствуйте, я звоню из компании «Суперобучение», мы обновляем свою базу данных. Не могли бы вы нам помочь и ответить на несколько вопросов?",right:0},{label:"Добрый день, меня зовут Ирина, компания «Новый дом». Вам удобно сейчас говорить? ",right:1},{label:"Здравствуйте, это говорит Петров из компании «Эфстайл». Извините, я не отниму у вас много времени, я только хотел узнать…",right:0}],messages:["Ваш ответ верный! Если мы называем свой звонок «беспокойством», клиент подумает то же самое. Негативная формулировка «не могли бы вы» подталкивает клиента сказать «нет». Начиная разговор с извинений, мы тем самым сигнализируем клиенту, что «холодный звонок» – это нечто предосудительное, и не стоит этого делать. «Холодный звонок» – часть работы всех, кто занимается продажами. Поэтому не стоит извиняться и демонстрировать позицию «снизу».","Не совсем верно. Учтите главное – «холодный звонок» – часть работы всех, кто занимается продажами. Поэтому не стоит извиняться и демонстрировать позицию «снизу».","И снова ошибка. Будьте внимательнее.","С заданием вы не справились. Если мы называем свой звонок «беспокойством», клиент подумает то же самое. Негативная формулировка «не могли бы вы» подталкивает клиента сказать «нет». Начиная разговор с извинений, мы тем самым сигнализируем клиенту, что «холодный звонок» – это нечто предосудительное, и не стоит этого делать. "]}},{page_id:14,title:"Как правильно согласовать время разговора",location:"page14",hasSound:!1,type:"simple_page",messages:[""]},{page_id:15,title:"Записная книжка. Задание 7",location:"page15",hasSound:!1,type:"note_page",data:{task_fields:10,useColumns:!0,maxlength:30,titles:["ПОТЕНЦИАЛЬНЫЙ КЛИЕНТ","ЦЕЛИ РАЗГОВОРА<br/> СОГЛАСОВАНИЕ ВРЕМЕНИ РАЗГОВОРА"],messages:[""]}},{page_id:16,title:"Этапы холодного звонка: ключевые фразы",location:"page16",hasSound:!1,type:"simple_page",messages:[""]},{page_id:17,title:"Задание 26",location:"page17",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"да",right:0},{label:"нет",right:1}],messages:["Ваш ответ верный. Продавец обидел потенциального клиента, намекнув на его проблемы.","Не совсем так. Вряд ли потенциальному клиенту понравились намеки Федора.","Где-то закралась ошибка. Будьте внимательнее, и у вас обязательно получится ответить на вопрос!","Конечно же, продавец выбрал неверную фразу для привлечения клиента."]}},{page_id:18,title:"Записная книжка. Задание 8",location:"page18",hasSound:!1,type:"note_page",data:{task_fields:10,useColumns:!0,maxlength:30,titles:["ПОТЕНЦИАЛЬНЫЙ КЛИЕНТ","КЛЮЧЕВАЯ ФРАЗА"],messages:[""]}},{page_id:19,title:"Этапы холодного звонка: определение потребности",location:"page19",hasSound:!1,type:"simple_page",messages:[""]},{page_id:20,title:"Этапы холодного звонка: преимущества",location:"page20",hasSound:!1,type:"simple_page",messages:[""]},{page_id:21,title:"Задание 27",location:"page21",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",questionList:[{label:"Определить, в чем может заключаться основная потребность потенциального клиента.",order:0},{label:"Сформулировать преимущество вашего товара/услуги, которое отвечает потребности потенциального клиента.",order:1},{label:"Сформулировать закрытый вопрос(-ы), помогающий клиенту осознать его потребность, а вам – подготовить почву для формулирования преимущества вашего товара/услуги.",order:2},{label:"Сформулировать закрытый вопрос, который поможет получить позитивный ответ от клиента в ответ на ваше предложение.",order:3}]}],messages:["Вы расставили шаги подготовки к разговору с клиентом в правильном порядке!","Не совсем так. Какие-то шаги не на своем месте. Попробуйте еще раз.","Это неверный порядок шагов для подготовки к разговору с клиентом. Будьте внимательнее!","Посмотрите правильный порядок шагов для подготовки разговора с клиентом."]}},{page_id:22,title:"Записная книжка. Задание 9",location:"page22",hasSound:!1,type:"note_page",data:{task_fields:12,useColumns:!0,maxlength:30,titles:["ПОТЕНЦИАЛЬНЫЙ КЛИЕНТ","ВОПРОСЫ","ВЫГОДЫ"],messages:[""]}},{page_id:23,title:"Завершение подготовки к холодному звонку",location:"page23",hasSound:!1,type:"simple_page",messages:[""]},{page_id:24,title:"Разговор с секретарем",location:"page24",hasSound:!1,type:"simple_page",messages:[""]},{page_id:25,title:"Задание 28",location:"page25",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Не слушал собеседника",right:0},{label:"Говорил слишком быстро",right:0},{label:"Не владел всей необходимой информацией",right:0},{label:"Демонстрировал неуверенность",right:0},{label:"Пытался сразу делать подробную презентацию",right:0},{label:"Проявил фамильярность",right:0},{label:"Неправильно определил цель звонка",right:1},{label:"Разговаривал не с тем, кому адресовалось предложение",right:1},{label:"Отнесся к клиенту как к очередному телефонному номеру, а не как к личности",right:0},{label:"Не проявил интерес и уважение, был несдержанным и многословным",right:0}],messages:["Все верно! В этой ситуации продавец неверно определил цель звонка и разговаривал с человеком, который не принимает решений по данному вопросу.","Неверно! Попробуйте еще раз.","Вы ошиблись. Посмотрите киноэпизод еще раз и попробуйте проанализировать ситуацию.","Продавец неверно определил цель звонка и разговаривал с человеком, который не принимает решений по данному вопросу."]}},{page_id:26,title:"Задание 29",location:"page26",hasSound:!1,type:"simple_page",messages:[""]},{page_id:27,title:"Записная книжка. Задание 10",location:"page27",hasSound:!1,type:"note_page",data:{markers:[{id:0,label:"Ваши приемы"}],questionList:[{label:"Изложите суть вопроса секретарю и попросите доложить о разговоре шефу.",marker:-1},{label:"Договоритесь о времени, когда вы узнаете результат",marker:-1},{label:"Продиктуйте для руководителя краткое сообщение (типа телефонограммы)",marker:-1},{label:"Попробуйте позвонить в обеденное время: есть шанс, что секретарь ушла обедать, а начальник переключил все звонки на себя",marker:-1},{label:"Можно попробовать звонить каждые полчаса и взять секретаря измором",marker:-1},{label:"Можно послать факс с вашим предложением и просьбой связаться с ним",marker:-1},{label:"Организуйте разговор с руководителем рангом ниже, чтобы через него затем выйти на лицо, принимающее решение",marker:-1}]}},{page_id:28,title:"Задание 29 ",location:"page28",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Какую из тактик использовала героиня? ",taskType:"single",questionList:[{label:"Тактика 1. «Максимум уверенности – минимум информации».",right:0},{label:"Тактика 2. «Взять секретаря в союзники».",right:0},{label:"Не использовала ни одну из тактик ",right:1}]},{taskText:"Почему сотруднице не удалось добиться разговора с ответственным лицом? ",taskType:"multi",questionList:[{label:"Сотрудница не представилась",right:1},{label:"Не назвала компанию, которую она представляет",right:0},{label:"Не выяснила, кто занимается вопросами рекламы в компании клиента",right:1},{label:"Не узнала, как зовут секретаря",right:1},{label:"Не спросила, когда лучше перезвонить лицу, ответственному за рекламу",right:1},{label:"Не поблагодарила за информацию",right:0}]}],messages:["Верно! В этой ситуации продавец не использовала ни одну из тактик общения с секретарем, поэтому и не добилась своей цели.","Не совсем так. Сотрудница страховой компании не добилась разговора с ответственным лицом по другим причинам.","И снова ошибка. ","Посмотрите правильный ответ. В этой ситуации продавец не использовала ни одну из тактик общения с секретарем, поэтому и не добилась своей цели. Кроме того, сотрудница неправильно выстроила диалог с секретарем"]}},{page_id:29,title:"Записная книжка. Задание 11",location:"page29",hasSound:!1,type:"note_page",data:{task_fields:2,useColumns:!0,maxlength:30,titles:["«Максимум уверенности – минимум информации»","«Взять секретаря в союзники»"],messages:[""]}},{page_id:30,title:"Как вызвать доверие. средства воздействия при разговоре",location:"page30",hasSound:!1,type:"simple_page",messages:[""]},{page_id:31,title:"Задание 30",location:"page31",hasSound:!1,type:"exercise",data:(_data={attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:""},_defineProperty(_data,"taskText","Продавец вела себя"),_defineProperty(_data,"taskType","multi"),_defineProperty(_data,"questionList",[{label:"Нервно и неуверенно",right:0},{label:"Агрессивно и напористо",right:1},{label:"Безразлично",right:0},{label:"Фамильярно",right:0},{label:"Снисходительно, пренебрежительно",right:0},{label:"Показала, что она дилетант в вопросе страхования",right:0},{label:"Спорила, не соглашалась",right:1},{label:"Морализировала",right:1},{label:"Советовала",right:0},{label:"Говорила долго, в режиме монолога",right:1},{label:"Использовала жаргонные слова, профессионализмы",right:0},{label:"Задавала вопросы, как на допросе ",right:0},{label:"Не отвечала на вопросы",right:0},{label:"Не слушала",right:1}]),_defineProperty(_data,"messages",["Вы правы! Своей агрессивностью, нежеланием слушать, неумением вести диалог Ольга совершенно отпугнула потенциального клиента.","Не совсем так. Учтите, что Ольга вела себя напористо и не выстроила диалога с клиентом.","Вы снова ошиблись. Наверное, что-то отвлекло вас.","Обратите внимание на правильный ответ. Не стоит допускать подобных ошибок при общении с клиентами."]),_data)},{page_id:32,title:"Задание 31",location:"page32",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,useVideo:!1,qCount:16,markers:[{id:0,label:"Если вы хотите разрушить доверие…"},{id:1,label:"Если вы хотите вызвать доверие…"}],questionList:[{label:"агрессивно и напористо",right:0},{label:"нервно и неуверенно",right:0},{label:"бесцеремонно (главное, что вам сейчас говорить удобно)",right:0},{label:"советуйте",right:0},{label:"спорьте, не соглашайтесь",right:0},{label:"не слушайте, перебивайте",right:0},{label:"говорите долго, желательно без остановок и в режиме монолога",right:0},{label:"критикуйте, высказывайте отрицательные оценки",right:0},{label:"спокойно и уверенно",right:1},{label:"дружелюбно и настойчиво",right:1},{label:"тактично (удобно ли клиенту сейчас разговаривать)",right:1},{label:"хвалите (искренне)",right:1},{label:"согласитесь, что точка зрения имеет право на существование",right:1},{label:"слушайте и не перебивайте",right:1},{label:"говорите кратко, делайте паузы, вовлекайте в диалог",right:1},{label:"высказывайте мнение, приводите факты",right:1}],messages:["Вы правы! Чтобы вызвать доверие клиента, ваши фразы, действия и манера разговора должны пробудить интерес, симпатию, приятие, ощущение безопасности. Избегайте внутреннего напряжения, неприятия и дискомфорта – это разрушает доверие клиента.","Неверно. Вы перепутали фразы, которые разрушают и вызывают доверие клиента. Может быть, повезет в другой раз?","Не совсем так. Избегайте внутреннего напряжения, неприятия и дискомфорта – это разрушает доверие клиента.","Помните: если вы хотите вызвать доверие клиента, ваши фразы, действия и манера разговора должны пробудить у клиента интерес, симпатию, приятие, ощущение безопасности."]}},{page_id:33,title:"Средства воздействия при общении по телефону",location:"page33",hasSound:!1,type:"simple_page",messages:[""]},{page_id:34,title:"Задание 32",location:"page34",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",questionList:[{label:["Тихо","Быстро","Уверенно","Невнятно"],order:0},{label:["Нормально","Быстро","Уверенно","Невнятно"],order:1},{label:["Тихо","Нормально","Неуверенно","Невнятно"],order:2},{label:["Нормально","Нормально","Уверенно","Внятно"],order:3}]}],messages:["Все верно! Вы отлично разбираетесь в речевых интонациях.","Не совсем так. Попробуйте еще раз","Вы неверно распределили речевые характеристики. Будьте внимательнее.","Посмотрите правильный ответ."]}},{page_id:35,title:"Прямое воздействие – содержание разговора",location:"page35",hasSound:!1,type:"simple_page",messages:[""]},{page_id:36,title:"Задание 33",location:"page36",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",questionList:[{phrase:"Приветствие и представление",label:"Иван Сергеевич, добрый день.  Меня зовут Ольга Каштанова. Я представляю страховую компанию «Зевс».",order:0},{phrase:"Формулировка цели звонка",label:"Мы предлагаем для вас выгодные условия медицинского страхования сотрудников. ",order:1},{phrase:"Ключевая фраза для удержания интереса",label:"Все затраты можно будет отнести на себестоимость продукции. Таким образом, вы будете заботиться о здоровье ваших сотрудников и одновременно экономить. ",order:2},{phrase:"Формулирование выгод",label:"Для руководящего персонала мы предлагаем лучшие медицинские учреждения нашего города. Нашими клиентами уже являются…",order:3},{phrase:"Ответы на возражение",label:"Уже застрахованы? Жаль. Наши условия наверняка выгоднее. ",order:4}]}],messages:['Ваш ответ верный. Обратите внимание, что в этом примере продавец пропустил некоторые важные этапы разговора. Полная последовательность этапов должна выглядеть так: <div class="answer-comment"><p class="text-accent">Этап разговора</p> <ol> <li>Приветствие<br/>Представление<br/>Формулировка цели звонка<br/>Согласование времени разговора</li> <li>Ключевая фраза для удержания интереса</li> <li>Определение потребности в товаре/услуге<br/>Формулирование выгод</li>  <li>Ответы на возражение</li> <li>Завершающие действия</li>   </ol> </div>',"Вы не совсем верно распределили этапы разговора. Попробуйте еще раз.","Вы ошиблись. Может быть, стоит посмотреть киноэпизод еще раз?",'Посмотрите правильный ответ. Обратите внимание, что в этом примере продавец пропустил некоторые важные этапы разговора. Полная последовательность этапов должна выглядеть так: <div class="answer-comment"><p class="text-accent">Этап разговора</p> <ol> <li>Приветствие<br/>Представление<br/>Формулировка цели звонка<br/>Согласование времени разговора</li> <li>Ключевая фраза для удержания интереса</li> <li>Определение потребности в товаре/услуге<br/>Формулирование выгод</li>  <li>Ответы на возражение</li> <li>Завершающие действия</li>   </ol> </div>']}},{page_id:37,title:"Задание 34",location:"page37",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,useVideo:!1,qCount:16,markers:[{id:0,label:"Негативная"},{id:1,label:"Позитивная"}],stageTalk:[{label:"Приветствие и представление"},{label:"Формулировка цели звонка"},{label:"Ключевая фраза для удержания интереса"},{label:"Формулирование выгод"},{label:"Ответы на возражение"}],questionList:[{label:"Иван Сергеевич, добрый день. Меня зовут Ольга Каштанова. Я представляю страховую компанию «Зевс».",right:1},{label:"Мы предлагаем для вас выгодные условия медицинского страхования сотрудников. ",right:1},{label:"Все затраты можно будет отнести на себестоимость продукции. Таким образом, вы будете заботиться о здоровье ваших сотрудников и одновременно экономить. ",right:1},{label:"Для руководящего персонала мы предлагаем лучшие медицинские учреждения нашего города. Нашими клиентами уже являются…",right:0},{label:"Уже застрахованы? Жаль. Наши условия наверняка выгоднее.",right:0}],messages:["Все верно! У Ольги плохая обратная связь с собеседником, поэтому в конце разговора клиент был настроен крайне отрицательно.","Ваш ответ неверный. Учтите, что в начале разговора клиент был настроен позитивно.","И снова ошибка. Вы где-то перепутали позитивную и негативную реакцию клиента.","А теперь обратите внимание на правильный ответ."]}},{page_id:38,title:"Комментарии",location:"page38",hasSound:!1,type:"simple_page",messages:[""]},{page_id:39,title:"Задание 35",location:"page39",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Как формулировалась цель разговора для клиента?",q_id:0}],variants:[{label:"Познакомиться, рассказать клиенту о выгодах сотрудничества с компанией продавца. ",v_id:0,q_id:0},{label:"Убедить клиента в необходимости для него продуктов/услуг продавца.",v_id:1,q_id:-1},{label:"Ответить на вопросы продавца.",v_id:2,q_id:-1},{label:"Цель не была озвучена клиенту.",v_id:3,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Как формулировалась цель разговора для клиента?",q_id:0}],variants:[{label:"Познакомиться, рассказать клиенту о выгодах сотрудничества с компанией продавца. ",v_id:0,q_id:-1},{label:"Убедить клиента в необходимости для него продуктов/услуг продавца.",v_id:1,q_id:-1},{label:"Ответить на вопросы продавца.",v_id:2,q_id:0},{label:"Цель не была озвучена клиенту.",v_id:3,q_id:-1}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Было ли согласовано время разговора?",q_id:0}],variants:[{label:"Время разговора было согласовано.",v_id:0,q_id:-1},{label:"Не было согласовано.",v_id:1,q_id:0}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Было ли согласовано время разговора?",q_id:0}],variants:[{label:"Время разговора было согласовано.",v_id:0,q_id:0},{label:"Не было согласовано.",v_id:1,q_id:-1}]}}],defaultLabel:"Не выбран",messages:["Ваш ответ верный! В первом эпизоде продавец правильно определила цели разговора: познакомить клиента с компанией и ответить на его вопросы. Во втором фрагменте время согласовано не было, поэтому во время разговора потенциальный клиент отвлекался и слушал невнимательно.","Увы, это неверный ответ. Попробуйте выполнить задание снова.","И снова ошибка. Возможно, вам стоит более точно определить цели разговора.","Посмотрите правильный ответ. "]}},{page_id:40,title:"Задание 36",location:"page40",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Что использовалось для удержания интереса клиента?",q_id:0}],variants:[{label:"Факт, связанный с бизнесом клиента.",v_id:0,q_id:-1},{label:"Новый продукт/услуга, который предлагает компания продавца.",v_id:1,q_id:0},{label:"Какие-то важные для бизнеса клиента изменения (например, в законодательной базе и пр.).",v_id:0,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Что использовалось для удержания интереса клиента?",q_id:0}],variants:[{label:"Факт, связанный с бизнесом клиента.",v_id:0,q_id:-1},{label:"Новый продукт/услуга, который предлагает компания продавца.",v_id:0,q_id:-1},{label:"Какие-то важные для бизнеса клиента изменения (например, в законодательной базе и пр.).",v_id:1,q_id:0}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Что было сформулировано клиенту в качестве выгод и преимуществ?",q_id:0}],variants:[{label:"Расширенный пакет услуг.",v_id:0,q_id:-1},{label:"Сокращение расходов.",v_id:0,q_id:-1},{label:"Высокое качество.",v_id:0,q_id:-1},{label:"Уникальность продукта/услуги.",v_id:1,q_id:0}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Что было сформулировано клиенту в качестве выгод и преимуществ?",q_id:0}],variants:[{label:"Расширенный пакет услуг.",v_id:0,q_id:-1},{label:"Сокращение расходов.",v_id:1,q_id:0},{label:"Высокое качество.",v_id:0,q_id:-1},{label:"Уникальность продукта/услуги.",v_id:0,q_id:-1}]}}],defaultLabel:"Не выбран",messages:["Отлично! Вы верно определили факты, использованные для удержания интереса клиента, сформулированные выгоды и преимущества.","Не совсем так. Вы перепутали факты, использованные для удержания интереса клиента, либо сформулированные выгоды и преимущества.","Это неверный ответ. Выполните задание снова.","К сожалению, с заданием вы не справились. Посмотрите правильный ответ."]}},{page_id:41,title:"Вопросы как инструмент выявления потребностей и работы с возражениями",location:"page41",hasSound:!1,type:"simple_page",messages:[""]},{page_id:42,title:"Уточняющие вопросы",location:"page42",hasSound:!1,type:"simple_page",messages:[""]},{page_id:43,title:"Задание 37",location:"page43",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",questionList:[{phrase:"Эти условия мне не подходят.",label:"Чем именно?",order:0},{phrase:"Ваши условия менее выгодны.",label:"По сравнению с чем?",order:1},{phrase:"Все, что вы мне предлагаете, меня не устраивает.",label:"Что конкретно вас не устраивает?",order:2},{phrase:"Мне нужен другой аналог.",label:"Какой именно?",order:3},{phrase:"Меня не устраивают условия поставки.",label:"В чем именно они вас не устраивают?",order:4},{phrase:"У вас очень высокие цены.",label:"С чем вы сравниваете?",order:5}]}],messages:["Вы отлично справились с заданием! Все уточняющие вопросы составлены верно.","Неверно. Будьте внимательнее, и у вас обязательно получится составить уточняющие вопросы.","Где-то закралась ошибка. Попробуйте еще раз.","Обратите внимание на правильный ответ. Вам наверняка пригодится умение задавать уточняющие вопросы."]}},{page_id:44,title:"Как правильно задавать уточняющие вопросы",location:"page44",hasSound:!1,type:"simple_page",messages:[""]},{page_id:45,title:"Задание 39",location:"page45",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"audio/a11.mp3",questionList:[{label:"audio/a12.mp3",right:0},{label:"audio/a13.mp3",right:0},{label:"audio/a14.mp3",right:1}]},{taskText:"audio/a15.mp3",questionList:[{label:"audio/a16.mp3",right:0},{label:"audio/a17.mp3",right:1},{label:"audio/a18.mp3",right:0}]},{taskText:"audio/a19.mp3",questionList:[{label:"audio/a20.mp3",right:0},{label:"audio/a21.mp3",right:1},{label:"audio/a22.mp3",right:0}]}],messages:["Поздравляем! Вы верно определили все уточняющие вопросы к фразам клиента.","Не совсем так. Выберите другие варианты вопросов.","Будьте внимательнее. Это не лучшие варианты уточняющих вопросов. Так клиента не переубедишь.","Вам не удалось выбрать верные уточняющие вопросы. Посмотрите правильный ответ."]}},{page_id:46,title:"Развивающие вопросы",location:"page46",hasSound:!1,type:"simple_page",messages:[""]},{page_id:47,title:"Задание 39",location:"page47",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Мы работаем с другим поставщиком. ",q_id:0}],variants:[{label:"И вам никогда не хотелось попробовать поработать с кем-то другим?",v_id:0,q_id:-1},{label:"То есть вы не хотите сотрудничать с нашей компанией? ",v_id:1,q_id:-1},{label:"Вы хотите сказать, что вам нужны веские аргументы, чтобы вы стали с нами работать?",v_id:2,q_id:0}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Чтобы освоить вашу программу, нам придется переучивать людей, а времени и так не хватает.",q_id:0}],variants:[{label:"Вы боитесь, что ваши сотрудники не справятся с новой программой?",v_id:0,q_id:-1},{label:"Вы хотите сказать, что были бы заинтересованы свести к минимуму временные затраты сотрудников при освоении новой программы?",v_id:1,q_id:0},{label:"Вы хотите сказать, что программа не поможет в вашей работе?",v_id:2,q_id:-1}]}},{taskText:" ",sameQ:!0,questionList:{questions:[{label:"Ваши цены слишком высоки.",q_id:0}],variants:[{label:"Вы боитесь получить слишком много преимуществ?",v_id:0,q_id:-1},{label:"Если я обосную цену, это облегчит вам принятие решения?",v_id:1,q_id:0},{label:"Вы обвиняете нас в завышении цен?",v_id:2,q_id:-1}]}}],defaultLabel:"Не выбран",messages:["Поздравляем! Вы выбрали наилучшие варианты развивающих вопросов.","Не совсем так. Это не лучшие варианты развивающих вопросов.","Неверно. Попробуйте еще раз выбрать варианты развивающих вопросов.","Посмотрите правильный ответ."]}},{page_id:48,title:"Задание 40",location:"page48",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"audio/a23.mp3",questionList:[{label:"audio/a24.mp3",right:0},{label:"audio/a25.mp3",right:1},{label:"audio/a26.mp3",right:0}]},{taskText:"audio/a27.mp3",questionList:[{label:"audio/a28.mp3",right:0},{label:"audio/a29.mp3",right:0},{label:"audio/a30.mp3",right:1}]}],messages:["Ваш ответ верный! Умение задавать правильные вопросы значительно улучшит взаимоотношения с клиентами.","Это неверный ответ. Возможно, вы отвлеклись и выбрали не лучшие варианты развивающих вопросов.","Подумайте еще раз. Наверняка вам удастся найти наилучший вариант!","Увы, задание выполнено неудовлетворительно. А теперь посмотрите правильный ответ."]}},{page_id:49,title:"Задание 41. Преодоление возражений и назначение встречи",location:"page49",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Как продавец преодолевал возражения?",questionList:[{label:"Сразу приводил контраргументы.",right:0},{label:"Задавал вопросы, потом приводил аргументы.",right:0},{label:"Принимал возражение (соглашался с клиентом), затем приводил аргументы.",right:1}]},{taskText:"Какие приемы использовал продавец для завершения разговора назначением встречи?",questionList:[{label:"Создал впечатление у клиента, что ему выгоднее купить товар именно сейчас, без долгих раздумий.",right:1},{label:"Формулировал предложение о встрече в альтернативной форме.",right:1},{label:"Согласовал дальнейшие действия. Наметил дату и время.",right:1}]}],messages:["Все верно! Федор прекрасно провел переговоры, которые заложили основы нового сотрудничества.","Не совсем так. Учтите, что Федор весьма успешно провел переговоры.","И снова ошибка. Попробуйте ответить снова.","К сожалению, вам не удалось справиться с заданием. Посмотрите правильный ответ."]}},{page_id:50,title:"Комментарии",location:"page50",hasSound:!1,type:"simple_page",messages:[""]},{page_id:51,title:"Ответы на возражения и завершающие действия. Записная книжка. Задание 12",location:"page51",hasSound:!1,type:"note_page",data:{task_fields:4,useColumns:!1,maxlength:80,titles:[""],messages:[""]}},{page_id:52,title:"Задание 42",location:"page52",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"audio/a31.mp3",questionList:[{label:"audio/a32.mp3",right:1},{label:"audio/a33.mp3",right:0},{label:"audio/a34.mp3",right:0}]},{taskText:"audio/a35.mp3",questionList:[{label:"audio/a36.mp3",right:0},{label:"audio/a37.mp3",right:0},{label:"audio/a38.mp3",right:1}]}],messages:["Все верно! Вы отлично поработали с возражениями клиента.","Ваши ответы вряд ли снимут возражения клиента. Попробуйте выбрать другие варианты.","Где-то закралась ошибка. Выбранные ответы не самые лучшие.","Обратите внимание на правильный ответ и запомните лучшие варианты работы с возражениями."]}},{page_id:53,title:"Записная книжка. Задание 13",location:"page53",hasSound:!1,type:"note_page",data:{task_fields:6,useColumns:!0,maxlength:200,titles:["ВОЗРАЖЕНИЯ КЛИЕНТОВ","ОТВЕТ"],messages:[""]}},{page_id:54,title:"Резюме",location:"page54",hasSound:!1,type:"simple_page",messages:[""]},{page_id:55,title:"Резюме",location:"page55",hasSound:!1,type:"simple_page",messages:[""]}]},{chapter_id:4,chapter_location:"chapter04",title:"Глава 3",description:"Итоговый тест",pages:[{page_id:1,title:"Итоговый тест",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Итоговое тестирование ",location:"page02",hasSound:!1,type:"test",messages:[""]},{page_id:3,title:"Заключение",location:"page03",hasSound:!1,type:"simple_page",messages:[""]}]}]},testStructure={tests:[{testId:0,caption:"final_test",type:"section",groups:[{id:5,caption:"group1",qUse:"all",questions:[{question:"Как вы дадите понять, что слушаете абонента?",score:-1,status:"notanswered",type:"single",answers:[{label:"«Говорите»",right:!1},{label:"«Слушаю вас» ",right:!0},{label:"«Алло»",right:!1}]},{question:"Если разговор прервался, кто должен перезвонить?",score:-1,status:"notanswered",type:"single",answers:[{label:"инициатор разговора ",right:!0},{label:"тот, кому позвонили",right:!1},{label:"не имеет значения",right:!1}]},{question:"Закончите предложение.<br/><i>Умение принимать входящие звонки…</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"влияет на общее положение дел в компании ",right:!0},{label:"сказывается только на отношениях с клиентами",right:!1},{label:"формирует личный имидж принимающего звонки",right:!1}]},{question:"К телефону попросили сотрудника, которого нет на месте. Вы от его имени пообещали, что он перезвонит. Правильно ли вы поступили?",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!0},{label:"нет",right:!1}]},{question:"Как лучше всего показать клиенту, что мы его услышали?",score:-1,status:"notanswered",type:"single",answers:[{label:"сказать «я вас понял(-а)»",right:!1},{label:"сказать «спасибо, я вас понял(-а)»",right:!1},{label:"повторить слова клиента ",right:!0}]},{question:"Какой вопрос позволяет получить больше информации?",score:-1,status:"notanswered",type:"single",answers:[{label:"Вы хотите отправить отдыхать ребенка к морю?",right:!1},{label:"Куда вы хотите отправить ребенка отдыхать? ",right:!0}]},{question:"Продолжите утверждение:<br/><i>Консультируя клиента по телефону, надо стремиться…</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"дать как можно больше информации",right:!1},{label:"уточнить его потребности и дать лишь необходимую информацию ",right:!0}]},{question:"С чего лучше всего начать телефонную презентацию товара или услуги клиенту?",score:-1,status:"notanswered",type:"single",answers:[{label:"с наиболее ярких деталей и впечатляющих фактов",right:!1},{label:"с того, что больше всего волнует клиента ",right:!0},{label:"с положительных отзывов других клиентов",right:!1}]},{question:"Верно ли следующее утверждение?<br/><i>Чем больше говорит сотрудник в процессе презентации по телефону, тем лучше.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да ",right:!1},{label:"нет ",right:!0}]},{question:"«Холодный звонок» имеет такое название, потому что:",score:-1,status:"notanswered",type:"single",answers:[{label:"вам «холодно» отвечают",right:!1},{label:"вы звоните незнакомому клиенту ",right:!0},{label:"во время звонка у вас на лбу выступает холодный пот",right:!1}]},{question:"Перед «холодным» телефонным звонком необходимо собрать информацию о:",score:-1,status:"notanswered",type:"multi",answers:[{label:"профиле деятельности компании ",right:!0},{label:"корпоративной культуре",right:!1},{label:"количестве людей, работающих в компании ",right:!0},{label:"о стиле одежды, принятой в компании",right:!1},{label:"месте компании на рынке ",right:!0},{label:"финансовом положении компании",right:!1},{label:"лице, ответственном за принятие решения по вашему вопросу ",right:!0}]},{question:"Выберите дополнительные цели разговора с клиентом, если вы первый раз звоните клиенту и основная цель звонка – назначить встречу. Учтите, что ваша компания – молодая, но уже громко заявившая о себе на рынке.",score:-1,status:"notanswered",type:"multi",answers:[{label:"Познакомиться, рассказать клиенту о выгодах сотрудничества с вашей компанией. ",right:!0},{label:"Сообщить, что вы молодая, но очень динамично развивающаяся компания.",right:!1},{label:"Убедить в необходимости приобретения для нее ваших продуктов/услуг.",right:!1}]},{question:"Верно ли следующее утверждение?<br/><i>При разговоре с секретарем необходимо проявлять максимум уверенности и давать ему минимум информации.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!0},{label:"нет",right:!1}]},{
question:"Верно ли следующее утверждение?<br/><i>При разговоре с секретарем необходимо быть предельно вежливым, доброжелательным, сделать его своим союзником.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!1},{label:"нет",right:!0}]},{question:"В процессе общения с клиентом необходимо умение налаживать и поддерживать отношение доверия. Завершите предложение.<br/><i>Доверие – это…</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"быть на короткой ноге с клиентом",right:!1},{label:"отсутствие коммерческих секретов",right:!1},{label:"открытость в общении ",right:!0}]},{question:"В начале телефонного разговора с клиентом обязательно:",score:-1,status:"notanswered",type:"multi",answers:[{label:"поприветствовать клиента и представиться ",right:!0},{label:"сформулировать цель звонка ",right:!0},{label:"получить согласие на продолжение разговора ",right:!0}]},{question:"Клиент в разговоре с продавцом произнес: <i>«Вы знаете, мы готовы к повторному заказу, но я не знаю, сколько мне заказывать». </i><br/>Какой из приведенных ниже вопросов, на ваш взгляд, развивает контакт, помогает продвигаться к получению заказа?",score:-1,status:"notanswered",type:"single",answers:[{label:"Вы хотели бы расширить ассортимент? ",right:!0},{label:"Когда вы последний раз заказывали товар?",right:!1},{label:"Когда товар закончился?",right:!1}]},{question:"Определите тип вопроса, который задает клиенту продавец.<br/><strong>Клиент:</strong> «Я считаю, что ваши цены не соответствуют качеству вашей продукции».<br/><strong>Продавец:</strong> <i>«То есть, вы считаете, что цена несколько завышена?».</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"альтернативный ",right:!1},{label:"развивающий ",right:!0}]},{question:"Верно ли утверждение:<br/><i>При совершении «холодного звонка» нужно подробно и тщательно рассказать о всех преимуществах или выгодах продукта/услуги. </i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да ",right:!1},{label:"нет ",right:!0}]},{question:"Правильно ли продавец преодолевает возражение клиента:<br/><strong>Клиент:</strong> <i>«Я слышал, у вас цены выше, чем у других».</i><br/><strong>Продавец:</strong> <i>«Вы, видимо, плохо информированы, у нас цены гораздо ниже, чем у конкурентов».</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да ",right:!1},{label:"нет ",right:!0}]},{question:"Прочитайте возражение клиента и выберите наиболее подходящий ответ.<br/><strong>Клиент:</strong> <i>«К сожалению, я не смогу встретиться с вами в ближайшие две недели».</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"«Я понимаю, вы очень занятый человек. Давайте договоримся, я перезвоню через две недели, 14 апреля, и мы назначим время встречи, хорошо?» ",right:!0},{label:"«Вы зря отказываетесь от встречи в ближайшее время. Через месяц наше выгодное предложение перестанет действовать».",right:!1}]}]}]},{testId:1,caption:"final_test",type:"section",groups:[{id:55,caption:"group2",qUse:"all",questions:[{question:"Ниже приводятся фразы, которые клиенты услышали в ходе телефонного общения с представителями компании. Отметьте варианты, которые не рекомендуется использовать, беседуя с клиентом.",score:-1,status:"notanswered",type:"multi",answers:[{label:"«Его сегодня не будет. Может, ему что-то передать?» ",right:!0},{label:"«Доброе утро, я вас слушаю»",right:!0},{label:"«Извините, я этим не занимаюсь. Вам нужно позвонить в отдел заказов»",right:!0}]},{question:"Кто кладет трубку первым?",score:-1,status:"notanswered",type:"single",answers:[{label:"позвонивший",right:!0},{label:"тот, кому позвонили",right:!1},{label:"не имеет значения",right:!1}]},{question:"Если вы разговариваете по телефону, и в это время зазвонил второй аппарат, вы должны:",score:-1,status:"notanswered",type:"single",answers:[{label:"прервать разговор с первым абонентом и ответить второму",right:!1},{label:"сообщить первому абоненту, что вам нужно ответить на другой звонок и ответить второму абоненту",right:!1},{label:"спросить разрешения у первого абонента ответить на второй звонок, поблагодарить за согласие и очень кратко ответить второму абоненту",right:!0}]},{question:"При приеме телефонного сообщения в бланке не нужно указывать: ",score:-1,status:"notanswered",type:"single",answers:[{label:"дополнительную информацию",right:!1},{label:"длительность разговора",right:!0},{label:"время и дату звонка",right:!1},{label:"кто принял сообщение",right:!1}]},{question:"Чтобы убедиться, что вы правильно поняли клиента, надо по ходу разговора…",score:-1,status:"notanswered",type:"single",answers:[{label:"записывать его слова",right:!1},{label:"повторять то, что он сказал, своими словами",right:!0},{label:"говорить: «Я вас понимаю»",right:!1}]},{question:"Отметьте, какие из этих вопросов являются закрытыми.",score:-1,status:"notanswered",type:"multi",answers:[{label:"Пользуетесь ли вы сами пластиковой картой? ",right:!0},{label:"Что вас не устраивает? ",right:!1},{label:"А важно для вас, чтобы были какие-либо ограничения по снятию денежных сумм, например, в день?",right:!0}]},{question:"Верно ли утверждение:<br/> <i>Прежде чем давать консультацию, надо уточнить потребности, задавая вопросы.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!0},{label:"нет",right:!1}]},{question:"Верно ли утверждение:<br/><i>Презентацию следует начинать с самых ярких деталей и убедительных фактов.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!1},{label:"нет",right:!0}]},{question:"Верно ли утверждение:<br/><i>Презентация более эффективна, если строится в режиме монолога.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!1},{label:"нет",right:!0}]},{question:"Отметьте правильные ответы:<br/><i>При подготовке к «холодному звонку» необходимо…</i>",score:-1,status:"notanswered",type:"multi",answers:[{label:"разбить потенциальных клиентов на группы ",right:!0},{label:"собрать информацию о потенциальном клиенте",right:!0},{label:"сформулировать для себя цели звонка",right:!0},{label:"составить план предстоящего разговора",right:!0}]},{question:"Рекламное агентство работает на рынке уже 5 лет. Менеджеру по работе с клиентами этого агентства поставлена задача расширения круга клиентов. Он собирается сделать «холодный звонок» в компанию потенциального заказчика, который хорошо знаком с рынком рекламных услуг. Отметьте цели, которые будут для менеджера дополнительными.",score:-1,status:"notanswered",type:"multi",answers:[{label:"Назначить встречу.",right:!1},{label:"Узнать, чем вызвано отсутствие сотрудничества.",right:!0},{label:"Получить заказ.",right:!0},{label:"Подчеркнуть конкурентные преимущества агентства.",right:!0},{label:"Познакомиться, рассказать потенциальному клиенту о выгодах сотрудничества с компанией.",right:!0},{label:"Заинтересовать в сотрудничестве. ",right:!0}]},{question:"При использовании тактики «Взять секретаря в союзники» необходимо…",score:-1,status:"notanswered",type:"single",answers:[{label:"постараться предварительно узнать, как зовут человека, ответственного за принятие решения",right:!1},{label:"сформулировать свой вопрос так, чтобы секретарь не смогла сама по нему принять решение",right:!1},{label:"обратившись к секретарю по имени, узнать, когда вам лучше позвонить ответственному лицу, чтобы застать его на месте (если вас сразу не соединяют)",right:!0}]},{question:"Отметьте верные утверждения.",score:-1,status:"notanswered",type:"multi",answers:[{label:"Когда клиент испытывает доверие, он делится всей имеющейся у него информацией с продавцом.",right:!1},{label:"Когда клиент испытывает доверие, он открыт к восприятию и принятию информации, идущей от продавца. ",right:!0}]},{question:"Верно ли утверждение?<br/><i>Когда мы делаем «холодный звонок», необходимо поинтересоваться, удобно ли клиенту сейчас говорить.</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!0},{label:"нет",right:!1}]},{question:"Выберите вариант информации, которая не может быть использована для удержания интереса клиента:",score:-1,status:"notanswered",type:"single",answers:[{label:"отзыв кого-то из другой компании, кого клиент знает",right:!1},{label:"изменения, произошедшие в вашем бизнесе с момента последнего разговора с покупателем",right:!1},{label:"ссылка на неудачный опыт клиента при общении с вашими конкурентами",right:!0},{label:"содержание письма, которое вы недавно написали клиенту",right:!1}]},{question:"Прочитайте фразу клиента и выберите лучший вариант уточняющего вопроса.<br/><strong>Клиент:</strong><i> «Я считаю, что ваши цены не соответствуют качеству вашей продукции».</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"«Не соответствует качеству? А какой должна быть цена, по вашему мнению?»",right:!1},{label:"«Не соответствует качеству? Поясните, пожалуйста, на основании чего вы пришли к такому выводу?»",right:!0},{label:"«Я понял. Это главное, что вас не устраивает?»",right:!1}]},{question:"Клиент в разговоре со страховым агентом произнес: «Я вообще не верю страховщикам». Агент может задать клиенту уточняющие и развивающие вопросы. Какие из приведенных ниже вопросов являются уточняющими?",score:-1,status:"notanswered",type:"multi",answers:[{label:"Вообще не верите? По какой причине?",right:!0},{label:"Вы хотите сказать, что вам пришлось столкнуться с недобросовестными страховщиками?",right:!1},{label:"А что произошло, после чего вы перестали им верить?",right:!0}]},{question:"Закончите предложение. <br/><i>При общении по телефону у нас нет возможности долго расписывать преимущества или выгоды товара/услуги клиенту. Лучше всего использовать цепочку: </i>",score:-1,status:"notanswered",type:"single",answers:[{label:"«вопрос – выгода – вопрос»",right:!0},{label:"«выгода – вопрос – выгода»",right:!1},{label:"«выгода – выгода – вопрос»",right:!1}]},{question:"Преодолевая возражения по телефону, продавцу лучше всего…",score:-1,status:"notanswered",type:"single",answers:[{label:"сразу приводить контраргументы",right:!1},{label:"оправдываться, а потом приводить аргументы",right:!1},{label:"принимать возражение (присоединяться к возражению), затем приводить аргументы",right:!0}]},{question:"Прочитайте возражение клиента и выберите наиболее подходящий ответ.<br/><strong>Клиент: </strong><i>«Поговорите с моим подчиненным».</i>",score:-1,status:"notanswered",type:"single",answers:[{label:"«Нет, давайте лучше обсудим предложение лично с вами. Когда вам удобнее, в четверг или в пятницу?»",right:!1},{label:"«Как показывает опыт, подчиненные не принимают решений о сотрудничестве. Наша встреча у вас займет не более 15 минут. Давайте встретимся, например, во вторник после обеда, или вам удобнее в среду утром?»",right:!1},{label:"«Я обязательно это сделаю. И все же некоторые соображения по поводу новой услуги может оценить только руководитель предприятия. К тому же во время личной встречи мы будем застрахованы от эффекта «испорченного телефона». Мы могли бы встретиться в среду или в четверг на этой неделе. Вам когда удобнее?»",right:!0}]}]}]}]},manifest=["img/01-01.png","img/01-02.png","img/01-03.png","img/01-04.png","img/01_45.jpg","img/01_52.jpg","img/02-01-mob.png","img/02-01.png","img/03-01-mob.png","img/03-01.png","img/04-01.png","img/101.png","img/106.jpg","img/107.png","img/109.png","img/128_3.jpg","img/128_3_blur.png","img/13.jpg","img/15.jpg","img/16.jpg","img/19.jpg","img/22.jpg","img/23.jpg","img/24.jpg","img/25.jpg","img/26.jpg","img/30-01-01.jpg","img/31.jpg","img/32-01-01.jpg","img/32-01-02.jpg","img/33.jpg","img/37_01.png","img/37_02.png","img/38_01.jpg","img/42_01.jpg","img/44_01.jpg","img/45_01.jpg","img/49.jpg","img/54-480.png","img/54.png","img/56.jpg","img/57.jpg","img/59.jpg","img/60.jpg","img/61-01-01.jpg","img/61.jpg","img/63_1.png","img/64-3.png","img/64_1.png","img/64_1fot.png","img/66.png","img/66_480.png","img/68-480.png","img/68.png","img/7.jpg","img/71-480.png","img/71.png","img/72-480.png","img/72.png","img/75.jpg","img/76.jpg","img/8.jpg","img/82.jpg","img/85.jpg","img/87.jpg","img/89.jpg","img/92.jpg","img/93.jpg","img/95.jpg","img/97.jpg","img/arrow.png","img/bg-arrow.png","img/bg-device.png","img/custom-video-sprite.png","img/icon-sound-m-orange.png","img/icon-sound-m.png","img/icon-sound-s-orange.png","img/icon-sound-s.png","img/icon-sound.png","img/modal_false.jpg","img/modal_true.jpg","img/nd.png","img/png_icons.png","img/sound-big.png","img/sound-medium.png","img/sound-small.png","img/task-bg.jpg","img/taskNote.jpg","img/tm.jpg","img/interface_buttons/about.png","img/interface_buttons/btn_continue.png","img/interface_buttons/btn_nav-back.png","img/interface_buttons/btn_nav-forward.png","img/interface_buttons/cross.png","img/interface_buttons/glossary.png","img/interface_buttons/menu.png","img/interface_buttons/stat.png","img/interface_buttons/vopros.png","img/tasks/marker-blue.png","img/tasks/marker-green.png","img/tasks/marker-orange.png","img/tasks/marker-red.png","img/tasks/marker-yellow.png","video/posters/01-01.png","video/posters/01.jpg","video/posters/02-01.png","video/posters/02.jpg","video/posters/03-01.png","video/posters/03.jpg","video/posters/05-01.png","video/posters/05.jpg","video/posters/06-01.png","video/posters/06.jpg","video/posters/07-01.png","video/posters/07.jpg","video/posters/10-01.png","video/posters/10.jpg","video/posters/11-01.png","video/posters/11.jpg","video/posters/12-01.png","video/posters/12.jpg","video/posters/13-01.png","video/posters/13.jpg","video/posters/14-01.png","video/posters/14.jpg","video/posters/15-01.png","video/posters/15.jpg","video/posters/16-01.png","video/posters/16.jpg","video/posters/17-01.png","video/posters/17.jpg","video/posters/18-01.png","video/posters/18.jpg","video/posters/19-01.png","video/posters/19.jpg","video/posters/20-01.png","video/posters/20.jpg","video/posters/21-01.png","video/posters/21.jpg","video/posters/22-01.png","video/posters/22.jpg","video/posters/23-01.png","video/posters/23.jpg","video/posters/24-01.png","video/posters/24.jpg","video/posters/25-01.png","video/posters/25.jpg","video/posters/26-01-m.png","video/posters/26-01.png","video/posters/26.jpg","video/posters/27-01.png","video/posters/27.jpg","video/posters/29-01.png","video/posters/29.jpg","video/posters/30-01.png","video/posters/30.jpg","video/posters/31-01.png","video/posters/31.jpg","video/posters/32-01.png","video/posters/32.jpg","video/posters/33-01.png","video/posters/33.jpg","video/posters/34-01.png","video/posters/34.jpg","video/posters/35-01.png","video/posters/35.jpg","video/posters/36-01-01.png","video/posters/36-01.png","video/posters/36.jpg","video/posters/37-01-01.png","video/posters/37-01.png","video/posters/37-11.png","video/posters/37-22.png","video/posters/37.jpg","video/posters/38-01-01.png","video/posters/38-01.png","video/posters/38.jpg","video/posters/39-01.png","video/posters/39.jpg","video/posters/40-01.png","video/posters/40.jpg","video/posters/41-01.png","video/posters/41.jpg","video/posters/43-01.png","video/posters/43-02.png","video/posters/43-03.png","video/posters/43-04.png","video/posters/green-01-01.png","video/posters/red-01-01.png","video/posters/yellow-01-01.png"];!function(){function t(t,e,s){t.state("page",{url:"/chapter/:chapter/page/:page",views:{header:{templateUrl:"js/components/header/headerTmpl.html",controller:"HeaderCtrl",controllerAs:"$ctrl"},content:{templateUrl:function(t){return"pages/"+s.chapters[t.chapter-1].chapter_location+"/"+s.chapters[t.chapter-1].pages[t.page-1].location+"/index.html"},controller:"PageCtrl",controllerAs:"$ctrl"},footer:{templateUrl:"js/components/footer/footerTmpl.html",controller:"FooterCtrl",controllerAs:"$ctrl"}}})}function e(t,e,s,a,i,o,r,n){var l=function(){l=new createjs.LoadQueue(!1),l.on("fileload",u,this),l.on("progress",c,this),l.on("complete",g,this),l.on("error",p,this),l.loadManifest(manifest)},u=function(){},c=function(){},g=function(){t.go("page",{chapter:r.bookmark.chapter,page:r.bookmark.chapterPage})},p=function(t){console.error("can`t load image!",t.data.src)};if(l(),o.setAPIVersion("1.2"),o.doLMSInitialize(),o.LMSIsInitialized()){console.info("<:: Load from LMS ::>");var h=o.doLMSGetValue("cmi.completion_status");console.info("Course completion status » "+h),"not attempted"===h&&o.doLMSSetValue("cmi.suspend_data","");var d=o.doLMSGetValue("cmi.suspend_data").replace(/\*\#/g,"[").replace(/\#\*/g,"]"),m=o.doLMSGetValue("cmi.core.score.raw");if(console.log("%c LMS score -> ","color:#C0FFEE;",m),r.testScore=m,console.log("%c courseInfo testScore -> ","color:#BADA55;",r.testScore),d.length>0)try{r=JSON.parse(d),window.bookmark=r.bookmark,window.bookmark.loaded=!1,window.exercises=r.exercises,window.exercises.loaded=!1,i.loadExs(r.exercises),i.loadNotes(r.notes)}catch(t){console.error("Что-то пошло не так... \n",t)}console.info("main:: courseInfo",r)}e.$on("$stateChangeStart",function(t,e,s,o){a.stopAudio(!0),a.setAudioTime(0),a.setBookmark(Number(s.page),Number(s.chapter)),i.sendToLMS()}),e.$on("$stateChangeSuccess",function(t,e,i,o,r,n){s(function(){a.stopAudio(!1)},100)})}t.$inject=["$stateProvider","$urlRouterProvider","courseDataObj"],e.$inject=["$state","$rootScope","$timeout","staticService","userService","scormWrapper","courseInfo","courseDataObj"],angular.module("courseApp",["ui.router","ngAnimate","ngSanitize","vjs.video"]).constant("courseDataObj",courseStructure).constant("testDataObj",testStructure).constant("courseInfo",{bookmark:{page:1,chapterPage:1,chapter:1},exercises:[],notes:[],testScore:0}).directive("compile",["$compile",function(t){return function(e,s,a){e.$watch(function(t){return t.$eval(a.compile)},function(a){s.html(a),t(s.contents())(e)})}}]).config(t).run(e)}(),function(){function t(){var t="Auto",e=!1,s=["Auto","1.2","2004"];this.setAPIVersion=function(e){e=e||"Auto",console.log("set SCORM ver:",e);var a=s.indexOf(e.toString());return a>-1?t=s[a]:console.log("Not found, default to Auto"),t},this.getAPIVersion=function(){return t},this.isAvailable=function(){return!0},this.doLMSInitialize=function(){return this.cmiBooleanToJs(this.getAPICall("LMSInitialize","Initialize")(""))},this.doLMSFinish=function(){return this.cmiBooleanToJs(this.getAPICall("LMSFinish","Terminate")(""))},this.doLMSGetValue=function(t){return this.getAPICall("LMSGetValue","GetValue")(t)},this.doLMSSetValue=function(t,e){return this.cmiBooleanToJs(this.getAPICall("LMSSetValue","SetValue")(t,e))},this.doLMSCommit=function(){return this.cmiBooleanToJs(this.getAPICall("LMSCommit","Commit")(""))},this.doLMSGetLastError=function(){return this.getAPICall("LMSGetLastError","GetLastError")()},this.doLMSGetErrorString=function(t){return this.getAPICall("LMSGetErrorString","GetErrorString")(t.toString())},this.doLMSGetDiagnostic=function(t){return this.getAPICall("LMSGetDiagnostic","GetDiagnostic")(t.toString())},this.LMSIsInitialized=function(){return e},this.ErrorHandler=function(){return this.getAPICall("LMSGetLastError","GetLastError")()},this.cmiBooleanToJs=function(t){return"1"===t||1===t||"true"===t||!0===t},this.getAPIHandle=function(){var t=window;t.parent&&t.parent!=t&&this.findAPI(t.parent),!e&&t.top.opener?this.findAPI(t.top.opener):e||console.log("Unable to find API adapter")},this.findAPI=function(s){var a=0;for(a;a<500;a++){if(s.API&&("1.2"===t||"Auto"===t)){e=s.API,t="1.2";break}if(s.API_1484_11&&("2004"===t||"Auto"===t)){e=s.API_1484_11,t="2004";break}s.parent&&s.parent!=s&&(a++,s=s.parent)}},this.getAPICall=function(s,a){if(!e&&(this.getAPIHandle(),!e))return function(){console.log("No API found, can't execute: "+s+" or "+a)};switch(t){case"2004":return function(){return e[a].apply(e,arguments)};case"1.2":return function(){return e[s].apply(e,arguments)}}}}angular.module("courseApp").service("scormWrapper",t)}(),function(){function t(t,e){var s=this,a=arguments,i={menu:{state:!1},stats:{state:!1},about:{state:!1},notes:{state:!1},help:{state:!1},exercise:{state:!1},video:{state:!1},cloak:{state:!1},addInfo:{state:!1}};this.getModalState=function(t){return i[t].state},this.showModal=function(t,e,a,o,r){i[t].state?i[t].state=!1:(s.closeModals(),"exercise"==t&&(document.getElementsByClassName("modal_head")[0].innerHTML=e,document.getElementsByClassName("modal_body")[0].innerHTML=a,"final"!=r&&(document.getElementById("pie-chart").style.display="none"),i.exercise.content=a,i.exercise.answer=o,i.exercise.heading=e),i[t].state=!0,i.cloak.state=!0)},this.closeModals=function(t){for(var e in i){if("video"==e&&1==i[e].state){var s=document.querySelector(".my-home-video");videojs(s).dispose()}i[e].state=!1}},this.getCourseName=function(){return{course:t.course,description:t.description}},this.getChapterObj=function(e){return t.chapters[e]},this.getChaptersTotal=function(){return t.chapters},this.getPageTotal=function(){for(var e=0,s=0;s<t.chapters.length;s++)e+=t.chapters[s].pages.length;return e},this.getBookmark=function(){return e.bookmark},this.setBookmark=function(s,a){if(console.warn("staticService:: try to setBookmark:",s,a),e.bookmark.chapterPage=s,e.bookmark.chapter=a,1==a)e.bookmark.page=s;else{for(var i=0,o=0;o<a-1;o++)i+=t.chapters[o].pages.length;e.bookmark.page=i+s}console.log("staticService:: setBookmark ChP: %d, Ch: %d, Page: %d",s,a,e.bookmark.page)},this.getData=function(e,s){return"data"==s?t.chapters[e.chapter-1].pages[e.page-1].data:t.chapters[e.chapter-1].pages[e.page-1].data[s]},this.getTitle=function(e){return t.chapters[e.chapter-1].pages[e.page-1].title},this.getMessage=function(e,s){return t.chapters[e.chapter-1].pages[e.page-1].messages[s]},this.setMarkerNote=function(e,s,a){return t.chapters[e.chapter-1].pages[e.page-1].data.questionList[s].marker=a};var o=0,r=!1;this.setAudioTime=function(t){o=t},this.getAudioTime=function(){return o},this.stopAudio=function(t){r=t},this.getStopAudio=function(){return r};var n=!1;this.startAudio=function(t){if(0===a.length)return n;n=t},this.addInfo=function(t,e,s){i.addInfo.content=t,i.addInfo.state=e,i.addInfo.heading=s},this.getAddInfo=function(){return i.addInfo},this.getExercise=function(){return i.exercise}}t.$inject=["courseDataObj","courseInfo"],angular.module("courseApp").service("staticService",t)}(),function(){function t(t,e,s,a,i){var o=this;t.chapters.map(function(t){return{id:t.id,visited:1,completed:!1,pages:t.pages.map(function(t,e){return{id:t.id,type:t.type,title:t.title,visited:0===e,completed:""}})}});this.exs=[],this.notes=[],this.notes1=[],this.start_date||(this.start_date=new Date),t.chapters.forEach(function(t,e){t.pages.map(function(t,s){if("exercise"==t.type&&o.exs.push({id:t.page_id,chapter_id:e,page_id:s,score:0,status:-1,title:t.title}),"note_page"==t.type){for(var a=[],i=0;i<t.data.task_fields;i++)a.push({id:i,text:""});o.notes.push({id:t.page_id,chapter_id:e,page_id:s,note_type:t.typeNote,title:t.title,fields_num:t.data.task_fields,fields:a})}if("note_exercise"==t.type){o.exs.push({id:t.page_id,chapter_id:e,page_id:s,score:0,status:-1,title:t.title});for(var r=[],n=0;n<t.data.task_fields;n++)r.push({id:n,text:""});o.notes1.push({id:t.page_id,chapter_id:e,page_id:s,note_type:t.typeNote,title:t.title,fields_num:t.data.task_fields,fields:r})}})}),this.ConvertMilliSecondsIntoSCORM2004Time=function(t){var e,s,a,i,o,r,n,l="";return e=Math.floor(t/10),n=Math.floor(e/315576e4),e-=315576e4*n,r=Math.floor(e/26298e4),e-=26298e4*r,o=Math.floor(e/864e4),e-=864e4*o,i=Math.floor(e/36e4),e-=36e4*i,a=Math.floor(e/6e3),e-=6e3*a,s=Math.floor(e/100),e-=100*s,n>0&&(l+=n+"Y"),r>0&&(l+=r+"M"),o>0&&(l+=o+"D"),e+s+a+i>0&&(l+="T",i>0&&(l+=i+"H"),a>0&&(l+=a+"M"),e+s>0&&(l+=s,e>0&&(l+="."+e),l+="S")),""==l&&(l="0S"),l="P"+l},this.loadExs=function(t){console.log("load exs!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:",t),0!=t.length&&(o.exs=t),i.exercises=JSON.parse(JSON.stringify(o.exs))},this.loadNotes=function(t){console.log("load saved notes!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:",t),0!=t.length&&(o.notes=t),i.notes=JSON.parse(JSON.stringify(o.notes))},this.loadNotes1=function(t){console.log("load saved notes!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:",t),0!=t.length&&(o.notes=t),i.notes1=JSON.parse(JSON.stringify(o.notes))},this.currentTestQuestion={},this.setCurrentTestQuestion=function(t,e){o.currentTestQuestion.question=t,o.currentTestQuestion.answers=e},this.getExs=function(){return o.exs},this.getPageVisit=function(){},this.setPageVisit=function(t,e){},this.setUserProgress=function(t,e,s,a){o.exs.forEach(function(i){console.log("=>",i,s,a),i.chapter_id==s&&i.page_id==a&&(i.score=t,i.status=e,console.log("userService:: setUserProgress----------------------------------------------:",i.score,i.status,s,a))}),i.exercises=JSON.parse(JSON.stringify(o.exs)),o.sendToLMS()},this.getUserNotes=function(){return o.notes},this.getUserNotes1=function(){return o.notes1},this.setUserNotes=function(t,e,s){console.log("userService:: setNotes-------------------------------------------------------:",t,e,s),o.notes.forEach(function(a){a.chapter_id==e&&a.page_id==s&&(a=t)}),console.log("this.notes-------------------------------------------------------:",o.notes),i.notes=JSON.parse(JSON.stringify(o.notes)),console.warn("courseInfo.notes",i.notes),o.sendToLMS()},this.sendToLMS=function(){var t;t=new Date-o.start_date,t=o.ConvertMilliSecondsIntoSCORM2004Time(t),o.dataCourse=i,o.dataCourse.exercises.forEach(function(t){delete t.title}),o.dataCourse.notes.forEach(function(t){delete t.title});var e=JSON.stringify(o.dataCourse,function(t,e){if("$$hashKey"!==t)return e}).replace(/\[/g,"*#").replace(/\]/g,"#*");console.info("sendToLMS suspendData: ",e),console.info("sendToLMS suspendData.length: ",e.length),console.warn("Put => session_time: "+t),a.doLMSSetValue("cmi.suspend_data",e),a.doLMSSetValue("cmi.session_time",t),a.doLMSSetValue("cmi.core.session_time",t),a.doLMSSetValue("cmi.core.score.raw",i.testScore),i.testScore>=60?a.doLMSSetValue("cmi.core.lesson_status","completed"):a.doLMSSetValue("cmi.core.lesson_status","incomplete"),a.doLMSCommit()},window.onbeforeunload=function(t){a.doLMSSetValue("cmi.exit","suspend");var t=t||window.event;a.doLMSFinish()},this.closeCourse=function(){a.doLMSSetValue("cmi.exit","suspend"),o.sendToLMS(),a.doLMSFinish(),confirm("Вы уверены, что хотите закончить прохождение курса?")&&(document.getElementsByClassName("course-wrapper")[0].innerHTML='<p class="close-msg">Работа с модулем курса завершена.</p>')}}t.$inject=["courseDataObj","testDataObj","$document","scormWrapper","courseInfo"],angular.module("courseApp").service("userService",t)}(),function(){function t(t,e,s,a,i){}t.$inject=["$http","$sce","$stateParams","staticService","userService"],angular.module("courseApp").controller("CourseCtrl",t)}(),function(){function t(t,e,s,a){this.tabNum=1,s.getModalState=function(t){return e.getModalState(t)},s.closeModals=function(){return e.closeModals()},this.time=function(){return e.getAudioTime()}}t.$inject=["$document","staticService","$scope","courseInfo"],angular.module("courseApp").controller("PageCtrl",t)}(),function(){function t(t,e,s){var a=this,i=[];a.addPanel=function(t){return console.warn("arguments.length: ",arguments.length),0===arguments.length?(console.warn("panels(if (arguments.length === 0)): ",i),{index:i.length-1,firstOpen:s.firstOpen}):(i.push(t),console.warn("panels(panels.push(panel);): ",arguments.length),"true"!==s.firstOpen||t!==i[0])},a.selectPanel=function(t,e){for(var s in i)t===i[s]&&e?i[s].turnOn():i[s].turnOff()}}function e(t,e,s,a){var i=this;t.isCollapsed=!0,i.hintShow=0!==$(s).index()&&1!==$(s).index()&&"visited",e(function(){i.hintShow=!1===i.hintShow||i.hintShow},1e4),i.$onInit=function(){var e={};t.isCollapsed=i.parent.addPanel(i),e=i.parent.addPanel(),"true"===e.firstOpen&&1===e.index?i.hintShow=!1:"false"===e.firstOpen&&0===e.index?i.hintShow=!1:i.hintShow="visited"},i.turnOn=function(){t.isCollapsed=!1},i.turnOff=function(){t.isCollapsed=!0},t.toggle=function(){i.hintShow="visited",i.parent.selectPanel(i,t.isCollapsed)}}function s(t,e,s,a){function i(){var t=o();r.style.height="auto";var e=o();return r.style.height=t,o(),e}function o(){return r.offsetHeight}var r=s[0],n=0;e.$watch(a.collapse,function(t){var e=t?0:1;if(1===e){if(0!==n)return r.style.height=i()+"px";n=1,function(t){setTimeout(function(){return r.style.height=i()+"px"},460)}()}return r.style.height=e+"px"})}t.$inject=["$scope","$element","$attrs"],e.$inject=["$scope","$timeout","$element","$attrs"],s.$inject=["$document","$scope","$element","$attrs"],angular.module("courseApp").component("accordion",{transclude:!0,template:'<div class="accordion" ng-transclude></div>',controller:"AccordionCtrl",controllerAs:"$ctrl"}).controller("AccordionCtrl",t).component("accordionPanel",{require:{parent:"^accordion"},bindings:{heading:"@"},transclude:!0,templateUrl:"js/components/accordion/accordionPanelTmpl.html",controller:"AccordionPanelCtrl",controllerAs:"$ctrl"}).controller("AccordionPanelCtrl",e).controller("AccordionContentCtrl",s)}(),function(){function t(t,e,s){this.getAddInfo=function(){s.addInfo(t.find("ng-transclude").prop("innerHTML"),!0,e.heading)}}t.$inject=["$element","$attrs","staticService"],angular.module("courseApp").component("addInfo",{bindings:{heading:"@"},transclude:!0,templateUrl:"./js/components/add-info/addInfoTmpl.html",controller:"AddInfoCtrl",controllerAs:"$ctrl"}).controller("AddInfoCtrl",t)}(),function(){function t(t,e,s){var a=this;this.play="#play",this.mute="#unmute",this.volume=1,this.seekPos=0,this.$onInit=function(){"false"!=a.hassound&&i()};var i=function(){console.warn("customAudio:: init"),a.audio=t[0].createElement("audio"),a.audio.src="pages/"+a.chapter+"/"+a.page+"/audio/page-"+a.chapter+"-"+a.page+".mp3",a.audio.oncanplaythrough=function(){a.changePlayPause=function(){a.audio.paused?(a.audio.play(),a.play="#pause"):(a.audio.pause(),a.play="#play")},a.updateSeekSlider=function(){var t=a.audio.currentTime*(100/a.audio.duration),e=Math.floor(a.audio.currentTime/60),s=Math.floor(a.audio.currentTime-60*e),i=Math.floor(a.audio.duration/60),o=Math.floor(a.audio.duration-60*i);a.seekPos=Math.floor(t),e<10&&(e="0"+e),s<10&&(s="0"+s),i<10&&(i="0"+i),o<10&&(o="0"+o),a.curTime=e+":"+s,a.durTime=i+":"+o,a.audio.currentTime===a.audio.duration&&(a.play="#play")},a.changeSeekPos=function(){a.audio.currentTime=a.audio.duration*(a.seekPos/100)},e(function(){if(a.audio)return a.updateSeekSlider(),s.setAudioTime(a.audio.currentTime),s.getStopAudio()?(a.audio.pause(),void(a.audio=null)):void 0},100),a.changeMuteState=function(){a.mute="#unmute",a.audio.muted?(a.audio.muted=!1,a.mute="#unmute"):(a.audio.muted=!0,a.mute="#mute")},a.changeVolume=function(){a.audio.volume=a.volume},a.restart=function(){a.audio.currentTime=0,a.audio.play(),a.play="#pause"}}}}t.$inject=["$document","$interval","staticService"],angular.module("courseApp").component("customAudio",{bindings:{chapter:"@",page:"@",hassound:"@"},templateUrl:"js/components/custom-audio/customAudioTmpl.html",controller:"CustomAudioCtrl",controllerAs:"$ctrl"}).controller("CustomAudioCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.play="#play",this.mute="#unmute",this.volume=1,this.seekPos=0,this.$onInit=function(){"false"!=i.hasSound&&o()};var o=function(){console.warn("customAudio:: init"),i.audio=e[0].createElement("audio"),i.audio.src=i.src,console.log("SRC ",i.audio.src),i.audio.autoplay=!1,i.audio.oncanplaythrough=function(){i.changePlayPause=function(){i.audio.paused?(i.audio.play(),i.play="#pause"):(i.audio.pause(),i.play="#play")},s(function(){if(i.audio)return a.setAudioTime(i.audio.currentTime),a.getStopAudio()?(i.audio.pause(),void(i.audio=null)):void 0},100)}}}t.$inject=["$attrs","$document","$interval","staticService"],angular.module("courseApp").component("customMiniAudio",{bindings:{chapter:"@",page:"@",hasSound:"@",src:"@"},templateUrl:"js/components/custom-mini-audio/customMiniAudioTmpl.html",controller:"CustomMiniAudioCtrl",controllerAs:"$ctrl"}).controller("CustomMiniAudioCtrl",t)}(),function(){function t(t,e,s){var a=this;a.play="play",
a.mute="unmute",a.volume=1,a.seekPos=0,a.$onInit=function(){var s=$(t).find(".custom-video__video")[0];s.oncanplaythrough=function(){function t(){var t=s.currentTime*(100/s.duration),i=(Math.floor(s.currentTime/3600),Math.floor(s.currentTime/60)),o=Math.floor(s.currentTime-60*i),r=(Math.floor(s.duration/3600),Math.floor(s.duration/60)),n=Math.floor(s.duration-60*r);a.seekPos=Math.floor(t),s.currentTime===s.duration&&(a.play="play"),i<10&&(i="0"+i||"00"),o<10&&(o="0"+o||"00"),r<10&&(r="0"+r||"00"),n<10&&(n="0"+n||"00"),e(function(){a.curtimetext=i+":"+o,a.durtimetext=r+":"+n})}console.log("here"),$(s).on("timeupdate",t),t(),a.changePlayPause=function(){s.paused?(s.play(),a.play="pause"):(s.pause(),a.play="play")},a.changeSeekPos=function(){s.currentTime=s.duration*(a.seekPos/100)},a.changeMuteState=function(){s.muted?(s.muted=!1,a.mute="unmute"):(s.muted=!0,a.mute="mute")},a.changeVolume=function(){s.volume=a.volume}}}}t.$inject=["$document","$timeout","staticService"],angular.module("courseApp").component("customVideo",{bindings:{src:"@"},templateUrl:"js/components/custom-video/customVideoTmpl.html",controller:"CustomVideoCtrl",controllerAs:"$ctrl"}).controller("CustomVideoCtrl",t)}(),function(){function t(t,e,s,a,i,o,r,n){var l=this,u=-1;1==a.chapter?u=0:4==a.chapter&&(u=1),this.questionList=_.shuffle(JSON.parse(JSON.stringify(i.tests[u].groups[0].questions))),this.currentQuest=0,this.state=0,t.$on("myTestState",function(t,e){l.state=e}),this.testScore=0,this.testRight=0,this.testTask=document.getElementsByClassName("test-task")[0],this.buildQuestion=function(){l.questionList[l.currentQuest].answers=_.shuffle(l.questionList[l.currentQuest].answers),r.setCurrentTestQuestion(l.questionList[l.currentQuest].question,l.questionList[l.currentQuest].answers);var e="";switch(l.questionList[l.currentQuest].type){case"single":e='<task-single-choice test="true"></task-single-choice>';break;case"multi":e='<task-multi-choice test="true"></task-multi-choice>'}l.testTask.appendChild(s(e)(t)[0])},this.nextQuestion=function(t){t.target.classList.contains("btn_disabled")||(l.checkAnswer(),l.currentQuest++,l.currentQuest<l.questionList.length?(l.state=0,l.testTask.innerHTML="",l.buildQuestion()):(l.state=2,l.currentQuest--,n.testScore=Math.round(l.testScore/l.questionList.length),n.testRight=l.testRight,r.sendToLMS(),n.testScore<75?l.chartTitle="Тест не пройден.":l.chartTitle="Тест пройден!",console.log("this.chartTitle",l.chartTitle),Chart.defaults.global.defaultFontSize=22,Chart.defaults.global.defaultFontColor="#000",o.showModal("exercise",o.getTitle(a),l.chartTitle,"","final"),new Chart(document.getElementById("pie-chart"),{type:"pie",data:{labels:["Правильных ответов","Неправильных ответов"],datasets:[{label:"",backgroundColor:["#c5edff","#fe9f39"],data:[n.testRight,l.questionList.length-n.testRight]}]},options:{plugins:{fillter:{propagate:!1}},title:{display:!0,text:"Ваш результат - "+n.testScore+" %"}}})))},this.checkAnswer=function(){for(var t=document.getElementsByClassName("task-question"),e=0;e<t.length;e++){if(l.questionList[l.currentQuest].answers[e].right!==t[e].classList.contains("radio-selected"))return}l.testScore+=100,l.testRight+=1},this.removeRestart=function(){l.state=0,l.testScore=0,l.testRight=0,l.currentQuest=0,l.questionList=_.shuffle(JSON.parse(JSON.stringify(i.tests[u].groups[0].questions))),l.testTask.innerHTML="",l.buildQuestion()},angular.element(document).ready(function(){l.buildQuestion()})}t.$inject=["$scope","$state","$compile","$stateParams","testDataObj","staticService","userService","courseInfo"],angular.module("courseApp").component("finalTest",{templateUrl:"js/components/final-test/finalTestTmpl.html",controller:"TestCtrl",controllerAs:"$ctrl"}).controller("TestCtrl",t)}(),function(){function t(t,e,s,a,i,o){var r=this;window.bookmark&&!window.bookmark.loaded?(window.bookmark.loaded=!0,document.getElementsByClassName("paginator")[0].innerHTML=window.bookmark.page+" / "+s.getPageTotal(),s.setBookmark(window.bookmark.chapterPage,window.bookmark.chapter)):document.getElementsByClassName("paginator")[0].innerHTML=i.bookmark.page+" / "+s.getPageTotal(),this.bookmark=s.getBookmark(),this.coursePage=document.querySelector(".page-wrapper"),this.curChapterNum=Number(e.chapter),this.curPageNum=Number(e.page),this.pageAmountTotal=""+s.getPageTotal(),this.pageAmountChapter=s.getChapterObj(this.curChapterNum-1).pages.length;var n=o.chapters[this.curChapterNum-1];this.chapterLocation=n.chapter_location,this.pageLocation=n.pages[this.curPageNum-1].location,this.pageHasSound=n.pages[this.curPageNum-1].hasSound,console.warn("FooterCtrl:: locs: %s, %s, sound: %s",this.chapterLocation,this.pageLocation,this.pageHasSound),this.toBack=function(){1==r.curChapterNum&&1==r.curPageNum||(1==r.curPageNum?(r.curPageNum=s.getChapterObj(r.curChapterNum-2).pages.length,r.curChapterNum--):r.curPageNum--,s.setBookmark(r.curPageNum,r.curChapterNum),r.coursePage.classList.add("backward"),t.go("page",{chapter:r.curChapterNum,page:r.curPageNum}))},this.toForward=function(){r.curChapterNum==s.getChaptersTotal().length&&r.curPageNum==r.pageAmountChapter||(r.curPageNum==r.pageAmountChapter?(r.curChapterNum++,r.curPageNum=1):r.curPageNum++,s.setBookmark(r.curPageNum,r.curChapterNum),a.setPageVisit(r.curChapterNum-1,r.curPageNum),r.coursePage.classList.remove("backward"),t.go("page",{chapter:r.curChapterNum,page:r.curPageNum}))},this.toggleAbout=function(){},this.toggleHelp=function(){}}t.$inject=["$state","$stateParams","staticService","userService","courseInfo","courseDataObj"],angular.module("courseApp").controller("FooterCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.chapters=s.getChaptersTotal(),this.exercises=a.exs,this.getExs=function(){return a.getExs()},this.getNotes=function(){return a.getUserNotes()},this.countExs=function(){return a.getExs().length},this.countDoneExs=function(){var t=a.getExs(),e=0;return t.forEach(function(t,s,a){1==t.status&&e++}),e},this.addInfo=function(){return s.getAddInfo()},this.exerciseData=function(){return s.getExercise()},this.title={course:s.getCourseName().course,chapter:s.getChapterObj(Number(e.chapter)-1).title,exercise:this.chapters[Number(e.chapter)-1].pages[Number(e.page)-1].title},this.getModalState=function(t){return s.getModalState(t)},this.menuPagesCounter=1,this.countPages=function(){return i.menuPagesCounter++},this.coursePage=document.querySelector(".page-wrapper"),this.goFromMenu=function(a,o){console.log("HeaderCtrl:: goFromMenu, page: %d, chapter: %d, SP: %s, SC: %s",a.page_id,o.chapter_id,e.page,e.chapter),o.chapter_id>Number(e.chapter)?i.coursePage.classList.remove("backward"):o.chapter_id==Number(e.chapter)&&a.page_id>Number(e.page)?i.coursePage.classList.remove("backward"):i.coursePage.classList.add("backward"),t.go("page",{chapter:o.chapter_id,page:a.page_id}),s.closeModals()},this.getCurrent=function(){return s.getBookmark().page},this.toggleMenu=function(){s.showModal("menu"),scrollMenu()},this.scrollMenu=function(){i.curChapterNum=Number(e.chapter),i.curPageNum=Number(e.page);var t=document.querySelector("#page_"+i.curChapterNum+"_"+i.curPageNum),s=document.querySelector(".modal_nav-menu");setTimeout(function(){s.scrollTop=t.offsetTop-300},30)},this.toggleStat=function(){s.showModal("stats")},this.toggleModal=function(t){s.showModal(t)},this.closeModals=function(){s.closeModals()},this.closeCourse=function(){a.closeCourse()},this.curChapterNum=Number(e.chapter),this.curPageNum=Number(e.page),this.coursePage=document.querySelector(".page-wrapper"),this.pageAmountChapter=s.getChapterObj(this.curChapterNum-1).pages.length,this.toForward=function(e){e&&(i.curChapterNum==s.getChaptersTotal().length&&i.curPageNum==i.pageAmountChapter||(i.curPageNum==i.pageAmountChapter?(i.curChapterNum++,i.curPageNum=1):i.curPageNum++,s.setBookmark(i.curPageNum,i.curChapterNum),a.setPageVisit(i.curChapterNum-1,i.curPageNum),i.coursePage.classList.remove("backward"),t.go("page",{chapter:i.curChapterNum,page:i.curPageNum})))}}t.$inject=["$state","$stateParams","staticService","userService"],angular.module("courseApp").controller("HeaderCtrl",t)}(),function(){function t(t){var e=this;this.openVideo=function(){var s=document.querySelector(".modal_video__body"),a='<video class="video-js vjs-default-skin video-element my-home-video" controls preload="auto"\n                               width="'+e.videowidth+'" height="'+e.videoheight+'" poster="'+e.videoposter+'" vjs-video>\n                            <source src="'+e.videourl+'" type="video/mp4">\n                            <track enabled kind="captions" src="'+e.suburl+'" srclang="ru" label="Russian Subtitles" default />\n                        </video>';t.showModal("video"),s.innerHTML=a}}t.$inject=["staticService"],angular.module("courseApp").component("pageVideo",{bindings:{videourl:"@",videoposter:"@",suburl:"@",videowidth:"@",videoheight:"@"},templateUrl:"js/components/page-video/pageVideoTmpl.html",controller:"pageVideoCtrl",controllerAs:"$ctrl"}).controller("pageVideoCtrl",t)}(),function(){function t(t,e,s){}t.$inject=["$element","$attrs","userService"],angular.module("courseApp").component("makeLine",{bindigs:{lineTo:"@"},controller:"LeaderLineCtrl"}).controller("LeaderLineCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.state=0,this.test?(this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle&&this.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),o.active[e]=t.questionList.map(function(t,e){return{selected:0}})})),this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(e,s){if(2!=o.state){switch(o.taskExs[e].taskType){case"multi":!function(t){t.selected=!t.selected}(o.active[e][s]);break;case"single":!function(t){t.forEach(function(t){t.selected=!1}),t[s].selected=!0}(o.active[e])}for(var a=0,i=!1,r=0;r<o.active.length;r++){for(var n=0;n<o.active[r].length;n++)o.active[r][n].selected&&(i=!0);i&&(a++,i=!1)}a==o.active.length?(o.test&&t.$emit("myTestState",1),o.state=1):(o.test&&t.$emit("myTestState",0),o.state=0)}},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var r=0;r<o.taskExs.length;r++)for(var n=o.taskExs[r].questionList,l=0;l<n.length;l++)if(n[l].right!=o.active[r][l].selected)return o.userAttempt==o.attemptNum&&o.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){o.state=0,o.taskOptions.shuffle&&o.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),o.active[e]=t.questionList.map(function(t,e){return{selected:0}})})};var s=function(){for(var t=0;t<o.taskExs.length;t++)for(var e=0;e<o.taskExs[t].questionList.length;e++)o.active[t][e].selected=o.taskExs[t].questionList[e].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskComboChoice",{templateUrl:"js/components/task-combo-choice/taskComboChoiceTmpl.html",controller:"ComboChoiceCtrl",controllerAs:"$ctrl"}).controller("ComboChoiceCtrl",t)}(),function(){function t(t,e,s,a,i){angular.element(document).ready(function(){})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskDrag",{templateUrl:"js/components/task-drag/taskDragTmpl.html",controller:"taskragCtrl",controllerAs:"$ctrl"}).controller("taskragCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.state=0,this.test?(this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle&&this.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),o.active[e]=t.questionList.map(function(t,e){return{selected:0}})})),this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(e,s){if(2!=o.state){o.active[e][s].selected=!o.active[e][s].selected;for(var a=0,i=!1,r=0;r<o.active.length;r++){for(var n=0;n<o.active[r].length;n++)o.active[r][n].selected&&(i=!0);i&&(a++,i=!1)}a==o.active.length?(o.test&&t.$emit("myTestState",1),o.state=1):(o.test&&t.$emit("myTestState",0),o.state=0)}},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var r=0;r<o.taskExs.length;r++)for(var n=o.taskExs[r].questionList,l=0;l<n.length;l++)if(n[l].right!=o.active[r][l].selected)return o.userAttempt==o.attemptNum&&o.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){o.state=0,o.taskOptions.shuffle&&o.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),o.active[e]=t.questionList.map(function(t,e){return{selected:0}})})};var s=function(){for(var t=0;t<o.taskExs.length;t++)for(var e=0;e<o.taskExs[t].questionList.length;e++)o.active[t][e].selected=o.taskExs[t].questionList[e].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskManyMultiChoice",{templateUrl:"js/components/task-many-multi-choice/taskManyMultiChoiceTmpl.html",controller:"ManyMultiChoiceCtrl",controllerAs:"$ctrl"}).controller("ManyMultiChoiceCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.state=0,this.test?(this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle?this.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),o.active[e]=t.questionList.map(function(){return{selected:0}})}):this.taskExs.forEach(function(t,e){o.active[e]=t.questionList.map(function(){return{selected:0}})})),this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(e,s){if(2!=o.state){if(1==o.active[e][s].selected)return a--,void(o.active[e][s].selected=!1);o.active[e].forEach(function(t){t.selected=!1}),o.active[e][s].selected=!0;for(var a=0,i=!1,r=0;r<o.active.length;r++){for(var n=0;n<o.active[r].length;n++)o.active[r][n].selected&&(i=!0);i&&(a++,i=!1)}a==o.active.length?(o.test&&t.$emit("myTestState",1),o.state=1):(o.test&&t.$emit("myTestState",0),o.state=0)}},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var r=0;r<o.taskExs.length;r++)for(var n=o.taskExs[r].questionList,l=0;l<n.length;l++)if(n[l].right!=o.active[r][l].selected)return o.userAttempt==o.attemptNum&&o.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){o.state=0,o.taskOptions.shuffle?o.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),o.active[e]=t.questionList.map(function(t,e){return{selected:0}})}):o.taskExs.forEach(function(t,e){o.active[e]=t.questionList.map(function(t,e){return{selected:0}})})};var s=function(){for(var t=0;t<o.taskExs.length;t++)for(var e=0;e<o.taskExs[t].questionList.length;e++)o.active[t][e].selected=o.taskExs[t].questionList[e].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskManySingleChoice",{templateUrl:"js/components/task-many-single-choice/taskManySingleChoiceTmpl.html",controller:"ManySingleChoiceCtrl",controllerAs:"$ctrl"}).controller("ManySingleChoiceCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;if(this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,console.log(JSON.parse(angular.toJson(this.taskData.exs))),this.exampleList=[],this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.rightArray=[],this.state=0,this.test)this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers;else if(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle){this.rightArray=this.taskExs[0].questionList.filter(function(t){return t.right>0});var r=_.shuffle(this.taskExs[0].questionList).filter(function(t){return 0===t.right});this.rightArray=_.shuffle(this.rightArray.concat(r[0],r[1]));for(var n=0;n<2;n++)this.active[n]=[],this.active[n]=this.rightArray.map(function(){return{selected:0}})}this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(e,s){if(2!=o.state){o.active[e].forEach(function(t){t.selected=!1}),o.active[e][s].selected=!0;for(var a=0,i=!1,r=0;r<o.active.length;r++){for(var n=0;n<o.active[r].length;n++)o.active[r][n].selected&&(i=!0);i&&(a++,i=!1)}a==o.active.length?(o.test&&t.$emit("myTestState",1),o.state=1):(o.test&&t.$emit("myTestState",0),o.state=0)}},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var r=0;r<o.active.length;r++)for(var n=0;n<o.active[r].length;n++)if(o.active[r][n].selected>0&&0==o.rightArray[n].right)return o.userAttempt==o.attemptNum&&o.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){if(o.state=0,o.taskOptions.shuffle)for(var t=0;t<2;t++)o.active[t]=[],o.active[t]=o.rightArray.map(function(){return{selected:0}})};var s=function(){for(var t=0;t<o.active.length;t++)for(var e=0;e<o.active[t].length;e++)o.rightArray[e].right==t+1?o.active[t][e].selected=o.rightArray[e].right:o.active[t][e].selected=0}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskManySingleChoice42",{templateUrl:"js/components/task-many-single-choice-exc42/taskManySingleChoiceTmpl.html",controller:"ManySingleChoice42Ctrl",controllerAs:"$ctrl"}).controller("ManySingleChoice42Ctrl",t)}(),function(){function t(t,e,s,a){var i=this;this.taskData=s.getData(e,"data"),this.taskText=this.taskData.taskText,this.markers=this.taskData.markers;var o=this.taskData.qCount;if(this.taskData.qCount>this.taskData.questionList.length){this.taskData.questionList.length}if(this.taskData.shuffle){var r=angular.fromJson(angular.toJson(_.shuffle(this.taskData.questionList))),n=[];this.questionList=[];for(var l=0;l<this.markers.length;l++)for(var u=0;u<r.length;u++)if(this.markers[l].id==r[u].right){this.questionList.push(r[u]),n.push(u);break}for(var c=0;c<r.length;c++){for(var g=!1,p=0;p<n.length;p++)if(c==n[p]){g=!0;break}if(!g&&(this.questionList.push(r[c]),this.questionList.length>=o))break}this.questionList=_.shuffle(this.questionList)}else this.questionList=this.taskData.questionList;this.useVideo=s.getData(e,"useVideo"),this.videoPoster=s.getData(e,"videoPoster"),this.active=[],this.state=0,this.marker=-1,this.attemptNum=s.getData(e,"attempts"),this.userAttempt=0;for(var h=0;h<this.questionList.length;h++)this.active[h]={},this.active[h].selected=0,this.active[h].marker=-1;angular.element(document).ready(function(){i.useVideo&&(document.getElementsByClassName("btn_task-video")[0].style.background="url("+i.videoPoster+")"),i.selectMarker=function(t){i.marker=t},i.selectAnswer=function(t,e){-1!=i.marker&&2!=i.state&&(i.active[t].selected=1,i.active[t].marker=i.marker,e.currentTarget.setAttribute("data","marker"+i.marker),i.state=1)}}),this.checkAnswer=function(t){i.userAttempt===i.attemptNum&&(i.userAttempt=0),i.userAttempt++,i.state=2;for(var o=0;o<i.questionList.length;o++)if(i.questionList[o].right!=i.active[o].marker)return 3===i.userAttempt&&d(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void s.showModal("exercise","Ваш результат",i.taskData.messages[i.userAttempt],!1);a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[0],!0)},this.removeRestart=function(){for(var t=document.getElementsByClassName("task__marker-choice-item"),e=0;e<i.active.length;e++)i.active[e].selected=!1,i.active[e].marker=-1,t[e].setAttribute("data","marker");i.state=0,i.marker=-1,i.taskData.shuffle&&(i.questionList=_.shuffle(i.questionList))},this.showVideo=function(){var t=document.querySelector(".modal_video__body");i.videoUrl=s.getData(e,"videoUrl"),i.videoPoster=s.getData(e,"videoPoster"),i.videoWidth=s.getData(e,"videoWidth"),i.videoHeight=s.getData(e,"videoHeight"),s.showModal("video");var a='<video class="video-js vjs-default-skin video-element" controls preload="auto"\n                               width="'+i.videoWidth+'" height="'+i.videoHeight+'" poster="'+i.videoPoster+'" vjs-video>\n                            <source src="'+i.videoUrl+'" type="video/mp4">\n                        </video>';t.innerHTML=a};var d=function(){for(var t=document.querySelectorAll(".task__marker-choice-item"),e=0;e<t.length;e++)t[e].setAttribute("data","marker"+i.questionList[e].right)}}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskMarkerChoice",{templateUrl:"js/components/task-marker-choice/taskMarkerChoiceTmpl.html",controller:"MarkerChoiceCtrl",controllerAs:"$ctrl"}).controller("MarkerChoiceCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.taskData=s.getData(e,"data"),this.taskText=this.taskData.taskText,this.markers=this.taskData.markers,this.questionList=this.taskData.questionList,this.active=[],this.marker=-1;for(var o=0;o<this.questionList.length;o++)this.active[o]={},this.active[o].marker=this.questionList[o].marker,-1==this.active[o].marker?this.active[o].selected=0:this.active[o].selected=1;angular.element(document).ready(function(){i.selectMarker=function(t){i.marker=t},i.selectAnswer=function(t,e){1==i.active[t].selected?(i.active[t].selected=0,i.active[t].marker=-1,e.currentTarget.setAttribute("data","marker-1")):(i.active[t].selected=1,i.active[t].marker=i.marker,e.currentTarget.setAttribute("data","marker"+i.marker))},i.saveNote=function(){for(var t=0;t<i.questionList.length;t++)s.setMarkerNote(e,t,i.active[t].marker);s.showModal("exercise","Записная книжка","Записи сохранены")}})}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskMarkerNote",{controller:"MarkerNoteCtrl",controllerAs:"$ctrl"}).controller("MarkerNoteCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this,r=[[0,0,0,0,0,1,1],[0,0,0,0,0,1,1]];this.active=[[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],this.state=0,this.taskData=a.getData(e,"data"),this.attemptNum=3,this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(t,e){if(2!=o.state){o.active[e][t]=!o.active[e][t];for(var s=!1,a=0;a<o.active.length;a++)for(var i=0;i<o.active[a].length;i++)if(o.active[a][i]){s=!0;break}o.state=s?1:0}},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var s=0;s<o.active.length;s++)for(var l=0;l<o.active[s].length;l++)if(o.active[s][l]!=r[s][l])return 3===o.userAttempt&&n(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){o.active=[[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],o.state=0}});var n=function(){o.active=r}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskMultiBox",{templateUrl:"js/components/task-multi-box/taskMultiBoxTmpl.html",controller:"MultiBoxCtrl",controllerAs:"$ctrl"}).controller("MultiBoxCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data");var r=0;this.test||(r=-1==this.taskData.qCount?this.taskData.questionList.length:this.taskData.qCount),this.test?(this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.taskText=this.taskData.taskText,this.questionList=_.sample(this.taskData.questionList,r)),this.active=[],this.state=0,this.test?this.attemptNum=-1:this.attemptNum=this.taskData.attempts,this.userAttempt=0;for(var n=0;n<this.questionList.length;n++)this.active[n]={},this.active[n].selected=0;this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(e){if(2!=o.state){o.active[e].selected=!o.active[e].selected;for(var s=!1,a=0;a<o.active.length;a++)if(o.active[a].selected){s=!0;break}s?(o.test&&t.$emit("myTestState",1),o.state=1):(o.test&&t.$emit("myTestState",0),o.state=0)}},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var r=0;r<o.questionList.length;r++)if(o.questionList[r].right!=o.active[r].selected)return o.userAttempt==o.attemptNum&&o.taskData.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){for(var t=0;t<o.active.length;t++)o.active[t].selected=!1;o.state=0,o.questionList=_.sample(o.taskData.questionList,r)};var s=function(){for(var t=0;t<o.questionList.length;t++)o.active[t].selected=o.questionList[t].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskMultiChoice",{templateUrl:"js/components/task-multi-choice/taskMultiChoiceTmpl.html",controller:"MultiChoiceCtrl",controllerAs:"$ctrl"}).controller("MultiChoiceCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.items=[];var r=Number(e.chapter)-1,n=Number(e.page)-1;this.taskData=a.getData(e,"data"),this.useColumns=this.taskData.useColumns;this.range=function(t){var e=[],s=0,a=o.items.fields.length/2;t||(s=o.items.fields.length/2,a=o.items.fields.length);for(var i=s;i<a;i++)e.push(o.items.fields[i]);return e},function(){i.getUserNotes().forEach(function(t){t.chapter_id==r&&t.page_id==n&&(o.items=t)})}(),this.saveNote=function(){for(var t=document.getElementsByClassName("task-note_item_input"),e=0;e<t.length;e++)o.items.fields[e].text=t[e].value;i.setUserNotes(o.items,r,n),a.showModal("exercise","Записная книжка","Записи сохранены")}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNote",{templateUrl:"js/components/task-note/taskNoteTmpl.html",controller:"NoteCtrl",controllerAs:"$ctrl"}).controller("NoteCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.items=[];var r=Number(e.chapter)-1,n=Number(e.page)-1;this.taskData=a.getData(e,"data"),this.useColumns=this.taskData.useColumns;this.range=function(t){var e=[],s=0,a=o.items.fields.length/2;t||(s=o.items.fields.length/2,a=o.items.fields.length);for(var i=s;i<a;i++)e.push(o.items.fields[i]);return e},function(){i.getUserNotes1().forEach(function(t){t.chapter_id==r&&t.page_id==n&&(o.items=t)})}(),this.saveNote=function(){for(var t=document.getElementsByClassName("task-note_item_input"),e=0;e<t.length;e++)console.log(t[e].value),o.items.fields[e].text=t[e].value;i.setUserNotes(o.items,r,n),console.log("this.items - ",o.items),console.log("chapter - ",r),console.log("page - ",n),console.log("this.items - ",o.items.fields.text),a.showModal("exercise","Записная книжка","Записи сохранены")}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNoteColumn",{templateUrl:"js/components/task-note-column/taskNoteColumnTmpl.html",controller:"NoteColumnCtrl",controllerAs:"$ctrl"}).controller("NoteColumnCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;self.currentImg=0;var r=[],n=[],l=[],u=[];this.items=[];var c=Number(e.chapter)-1,g=Number(e.page)-1;this.taskData=a.getData(e,"data");var p=this.taskData.note_id,h=this.taskData.chapter_id,d=this.taskData.questionList.length,m=this.taskData.questionList;!function(){for(var t=0;t<d;t++)r[t]=m[t].label;n=i.getUserNotes1(),console.log("items3********",n),n.forEach(function(t){t.id==p&&t.chapter_id==h&&(l=t.fields)});for(var e=0;e<d;e++)u[e]=l[e].text}(),this.indicators=r,this.indicators2=u,this.useColumns=this.taskData.useColumns;this.range=function(t){var e=[],s=0,a=o.items.fields.length/2;t||(s=o.items.fields.length/2,a=o.items.fields.length);for(var i=s;i<a;i++)e.push(o.items.fields[i]);return e},function(){i.getUserNotes().forEach(function(t){t.chapter_id==c&&t.page_id==g&&(o.items=t)})}(),this.saveNote=function(){for(var t=document.getElementsByClassName("task-note_item_input"),e=0;e<t.length;e++)console.log(t[e].value),o.items.fields[e].text=t[e].value;i.setUserNotes(o.items,c,g),console.log("this.items - ",o.items),console.log("chapter - ",c),console.log("page - ",g),console.log("this.items - ",o.items.fields.text),a.showModal("exercise","Записная книжка","Записи сохранены")}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNoteColumnRead",{templateUrl:"js/components/task-note-column-read/taskNoteColumnReadTmpl.html",controller:"NoteColumnReadCtrl",controllerAs:"$ctrl"}).controller("NoteColumnReadCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;self.currentImg=0;var r=[],n=[],l=[],u=[];this.items=[];var c=Number(e.chapter)-1,g=Number(e.page)-1;this.taskData=a.getData(e,"data");var p=this.taskData.note_id,h=this.taskData.chapter_id,d=this.taskData.questionList.length,m=this.taskData.note_count,f=this.taskData.note_volume;console.log("note_count********----------**********",m),console.log("note_volume********----------**********",f);var b=this.taskData.questionList;!function(){for(var t=0;t<d;t++)r[t]=b[t].label;n=i.getUserNotes1(),console.log("items3********",n),n.forEach(function(t){t.id==p&&t.chapter_id==h&&(l=t.fields)});for(var e=0;e<d;e++)u[e]=l[e+m].text}(),this.indicators=r,this.indicators2=u,this.useColumns=this.taskData.useColumns;this.range=function(t){var e=[],s=0,a=o.items.fields.length/2;t||(s=o.items.fields.length/2,a=o.items.fields.length)
;for(var i=s;i<a;i++)e.push(o.items.fields[i]);return e},function(){i.getUserNotes().forEach(function(t){t.chapter_id==c&&t.page_id==g&&(o.items=t)})}(),this.saveNote=function(){for(var t=document.getElementsByClassName("task-note_item_input"),e=0;e<t.length;e++)console.log(t[e].value),o.items.fields[e].text=t[e].value;i.setUserNotes(o.items,c,g),console.log("this.items - ",o.items),console.log("chapter - ",c),console.log("page - ",g),console.log("this.items - ",o.items.fields.text),a.showModal("exercise","Записная книжка","Записи сохранены")}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNoteColumnRead2",{templateUrl:"js/components/task-note-column-read2/taskNoteColumnRead2Tmpl.html",controller:"NoteColumnRead2Ctrl",controllerAs:"$ctrl"}).controller("NoteColumnRead2Ctrl",t)}(),function(){function t(t,e,s,a,i){self.currentImg=0;var o=[];Number(e.chapter),Number(e.page);this.taskData3=a.getData(e,"data");var r=this.taskData3.questionList.length;console.log("lei t********----------**********",r);var n=this.taskData3.questionList;!function(){for(var t=0;t<r;t++)o[t]=n[t].label}(),this.indicatorss=o,this.useColumnss=this.taskData3.useColumns}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNoteColumnRead3",{templateUrl:"js/components/task-note-column-read3/taskNoteColumnRead3Tmpl.html",controller:"NoteColumnRead3Ctrl",controllerAs:"$ctrl"}).controller("NoteColumnRead3Ctrl",t)}(),function(){function t(t,e,s,a,i){var o=this,r=[];this.items=[];var n=Number(e.chapter)-1,l=Number(e.page)-1;this.taskData=a.getData(e,"data"),this.useColumns=this.taskData.useColumns;var u=this.taskData.questionList.length,c=this.taskData.questionList;!function(){for(var t=0;t<u;t++)r[t]=c[t].label}(),this.indicators=r,console.log("this.indicators**----------**********",this.indicators);this.range=function(t){var e=[],s=0,a=o.items.fields.length/2;t||(s=o.items.fields.length/2,a=o.items.fields.length);for(var i=s;i<a;i++)e.push(o.items.fields[i]);return e},function(){i.getUserNotes1().forEach(function(t){t.chapter_id==n&&t.page_id==l&&(o.items=t)})}(),this.saveNote=function(){console.log("this.saveNote----------**********",inputs)}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNoteColumn2",{templateUrl:"js/components/task-note-column2/taskNoteColumn2Tmpl.html",controller:"NoteColumn2Ctrl",controllerAs:"$ctrlL"}).controller("NoteColumn2Ctrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs));for(var r=0;r<this.taskExs.length;r++)this.taskExs[r].questionList.questions=this.taskExs[r].questionList.questions.map(function(t){return t.default=o.taskData.defaultLabel,t.v_id=-1,t.open=0,t}),this.taskExs[r].questionList.variants=this.taskExs[r].questionList.variants.map(function(t){return t.selected=-1,t.connectedTo=-1,t});if(this.state=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle)for(var n=0;n<this.taskExs.length;n++)this.taskExs[n].questionList.variants=_.shuffle(this.taskExs[n].questionList.variants);this.showComment=!1,this.selectChange=function(t,e,s,a){if(-1!=e&&2!=o.state){if(-1!=o.taskExs[a].questionList.questions[s].v_id)for(var i=o.taskExs[a].questionList.questions[s].v_id,r=0;r<o.taskExs[a].questionList.variants.length;r++){o.taskExs[a].questionList.variants[r].v_id==i&&(o.taskExs[a].questionList.variants[r].selected=-1);break}o.taskExs[a].questionList.questions[s].v_id=e;for(var n=0;n<o.taskExs[a].questionList.variants.length;n++)o.taskExs[a].questionList.variants[n].v_id==e&&(o.taskExs[a].questionList.variants[n].selected=1,o.taskExs[a].questionList.questions[s].default=o.taskExs[a].questionList.variants[n].label);for(var l=!0,u=0;u<o.taskExs.length;u++)for(var c=0;c<o.taskExs[u].questionList.questions.length;c++)if(-1==o.taskExs[u].questionList.questions[c].v_id){l=!1;break}l&&(o.state=1),o.taskExs[a].sameQ||(o.filteredList=o.getNotSelected(a)),o.toggleSelect(t,s,a),t.stopPropagation()}},this.checkAnswer=function(){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var t=0;t<o.taskExs.length;t++)for(var s=0;s<o.taskExs[t].questionList.questions.length;s++){var r=o.taskExs[t].questionList.questions[s];if(o.taskData.exs[t].questionList.variants[r.v_id].q_id!=r.q_id)return o.userAttempt==o.attemptNum&&o.taskOptions.showAnswer&&l(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1)}i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)},this.removeRestart=function(){if(o.state=0,o.taskOptions.shuffle)for(var t=0;t<o.taskExs.length;t++)o.taskExs[t].questionList.variants=_.shuffle(o.taskExs[t].questionList.variants);for(var e=0;e<o.taskExs.length;e++){for(var s=0;s<o.taskExs[e].questionList.questions.length;s++)o.taskExs[e].questionList.questions[s].default=o.taskData.defaultLabel,o.taskExs[e].questionList.questions[s].open=0,o.taskExs[e].questionList.questions[s].v_id=-1;for(var a=0;a<o.taskExs[e].questionList.variants.length;a++)o.taskExs[e].questionList.variants[a].selected=-1}o.filteredList=o.getNotSelected(-1)};var l=function(){console.log("SelectCtrl:: showAnswer:");for(var t=0;t<o.taskExs.length;t++)for(var e=0;e<o.taskExs[t].questionList.questions.length;e++)for(var s=0;s<o.taskExs[t].questionList.variants.length;s++)if(o.taskExs[t].questionList.questions[e].q_id==o.taskExs[t].questionList.variants[s].q_id){o.taskExs[t].questionList.questions[e].default=o.taskExs[t].questionList.variants[s].label;break}};this.toggleSelect=function(t,e,s){o.taskExs[s].questionList.questions[e].open=!o.taskExs[s].questionList.questions[e].open,t.stopPropagation()},this.getNotSelected=function(t){for(var e=[],s=0;s<o.taskExs.length;s++)if(e[s]=[],s==t)for(var a=0;a<o.taskExs[s].questionList.variants.length;a++)o.taskExs[s].questionList.variants[a].selected<0&&e[s].push(o.taskExs[s].questionList.variants[a]);else e[s]=angular.fromJson(angular.toJson(o.taskExs[s].questionList.variants));return e},this.filteredList=this.getNotSelected(-1)}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskSelect",{templateUrl:"js/components/task-select/taskSelectTmpl.html",controller:"SelectCtrl",controllerAs:"$ctrl"}).controller("SelectCtrl",t)}(),function(){function t(t,e,s,a,i){function o(t,e,s){var a=_.shuffle(e.filter(function(t,e){return e!==s})),i=_.random(0,n);return a.splice(i,0,e[s]),a.length=n+1,r.userAnswer.forEach(function(e){e[t+"Num"]=i}),a}var r=this,n=3,l=0;r.taskData=a.getData(t,"exs"),r.showVariant=!1,r.show=!1,r.end=!1,r.btnDisabledState={restart:!0,answer:!0},r.userAnswer=[],r.userAnswer.length=n+1;for(var u=0;u<r.userAnswer.length;u++)r.userAnswer[u]={},r.userAnswer[u].character="",r.userAnswer[u].characterNum="",r.userAnswer[u].question="",r.userAnswer[u].questionNum="";r.getVariantList=function(t,e){return e<=l},r.orderByQuest=function(t,e){return e===l},r.getAnswer=function(t,e){"character"===t?(r.userAnswer.forEach(function(t){return t.character=""}),r.userAnswer[e].character=e===r.userAnswer[e].characterNum):(r.userAnswer.forEach(function(t){return t.question=""}),r.userAnswer[e].question=e===r.userAnswer[e].questionNum),r.userAnswer.filter(function(t){return""!==t.character}).length&&r.userAnswer.filter(function(t){return""!==t.question}).length&&(r.btnDisabledState.answer=!1)},r.checkAnswer=function(){return r.userAnswer.filter(function(t){return!0===t.character}).length&&r.userAnswer.filter(function(t){return!0===t.question}).length?!1===r.show&&l+1!==r.taskData.variant.length?(r.show=!0,a.showModal("exercise","Результат","Верно! Следующая цель: "+r.taskData.variant[l+1].final+' Закройте окно и нажмите кнопку "Далее".',!0)):(r.show=!1,l+1===r.taskData.variant.length?(r.btnDisabledState.answer=!0,r.show=!0,r.end=!0,i.setUserProgress(100,1,Number(t.chapter)-1,Number(t.page)-1),a.showModal("exercise","Ваш результат","Верный ответ!",!0)):(l++,r.userAnswer.forEach(function(t){return t.character=""}),r.userAnswer.forEach(function(t){return t.question=""}),r.characterList=o("character",r.taskData.characterList,r.taskData.variant[l].characterNum),r.questionList=o("question",r.taskData.questionList,r.taskData.variant[l].questionNum),r.btnDisabledState.answer=!0,void 0)):(r.show=!0,r.btnDisabledState.answer=!0,r.btnDisabledState.restart=!1,a.showModal("exercise","Ваш результат","Неверно! Начните заново.",!1))},r.removeRestart=function(){r.show=!1,r.btnDisabledState.answer=!0,r.btnDisabledState.restart=!0,r.userAnswer.forEach(function(t){return t.character=""}),r.userAnswer.forEach(function(t){return t.question=""}),r.characterList=o("character",r.taskData.characterList,r.taskData.variant[l].characterNum),r.questionList=o("question",r.taskData.questionList,r.taskData.variant[l].questionNum)},r.removeRestart()}t.$inject=["$stateParams","$document","$element","staticService","userService"],angular.module("courseApp").controller("TaskSequenceQuestCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.test?(this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers,console.log("SingleCCtrl:: Answers:",this.questionList)):(this.taskText=a.getData(e,"taskText"),this.questionList=_.shuffle(a.getData(e,"questionList"))),this.active=[],this.state=0,this.test?this.attemptNum=-1:this.attemptNum=this.taskData.attempts,this.userAttempt=0;for(var r=0;r<this.questionList.length;r++)this.active[r]={},this.active[r].selected=0;this.showComment=!1,angular.element(document).ready(function(){o.selectAnswer=function(e){2!=o.state&&(o.active.forEach(function(t){t.selected=0}),o.active[e].selected=1,o.test&&t.$emit("myTestState",1),o.state=1)},o.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var r=0;r<o.questionList.length;r++)if(o.questionList[r].right!==o.active[r].selected)return o.userAttempt==o.attemptNum&&o.taskData.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},o.removeRestart=function(){for(var t=0;t<o.active.length;t++)o.active[t].selected=!1;o.state=0,o.questionList=_.shuffle(o.questionList)};var s=function(){for(var t=0;t<o.questionList.length;t++)o.active[t].selected=o.questionList[t].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskSingleChoice",{templateUrl:"js/components/task-single-choice/taskSingleChoiceTmpl.html",controller:"SingleChoiceCtrl",controllerAs:"$ctrl"}).controller("SingleChoiceCtrl",t)}(),function(){function t(t,e,s,a){var i=this;i.taskData=JSON.parse(angular.toJson(s.getData(e,"data")));var o=i.taskData.options.attempts,r=0;i.taskText=i.taskData.exs.taskText,i.end=!1,i.btnDisabledState={restart:!0,answer:!1},angular.element(document).ready(function(){var n=$(t).find(".sortable-box__item"),l=$(t).find(".sortable-box");$(t).find(".sortable-box__item").draggable({containment:".sortable-container",refreshPositions:!0,revert:!0}),$(t).find(".sortable-box").droppable({drop:function(t,e){var s=$(t.target).find(".sortable-box__item"),a=s.html(),i=e.draggable.attr("data-number");s.attr("data-number"),$(l[i]).position().top,s.position().top,$(l[i]).position().left,s.position().left;s.html(e.draggable.html()).css({"z-index":1e4}),e.draggable.html(a)}}),i.checkAnswer=function(){var n=$(t).find(".sortable-box__item");i.btnDisabledState.restart=!1,i.btnDisabledState.answer=!0,r===o?r=0:r++;for(var l=0;l<n.length;l++)$.trim($(n[l]).html().replace(/'/g,'"'))!==$.trim(i.taskData.exs.variant[l].content.replace(/'/g,'"'))?i.taskData.exs.variant[l].answer=!1:i.taskData.exs.variant[l].answer=!0;return console.log("=>",r),i.taskData.exs.variant.filter(function(t){return!0===t.answer}).length===i.taskData.exs.variant.length?(a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[0],!0)):(r===o&&u(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[r],!1))},i.removeRestart=function(){i.btnDisabledState.restart=!0,i.btnDisabledState.answer=!1;for(var t=_.shuffle(_.range(l.length)),e=0;e<n.length;e++)$(n[e]).html(i.taskData.exs.variant[t[e]].content);i.taskData.exs.variant.forEach(function(t){return t.answer=""})},i.removeRestart();var u=function(){for(var t=0;t<n.length;t++)$(n[t]).html(i.taskData.exs.variant[t].content),i.taskData.exs.variant[t].answer=!0}})}t.$inject=["$element","$stateParams","staticService","userService"],angular.module("courseApp").controller("TaskStrictSortableCtrl",t)}(),function(){function t(t,e,s,a){var i=this;if(this.taskData=s.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=angular.fromJson(angular.toJson(this.taskData.exs)),this.state=1,this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle)for(var o=0;o<this.taskExs.length;o++)this.taskExs[o].questionList=_.shuffle(this.taskExs[o].questionList);this.checkAnswer=function(){i.userAttempt===i.attemptNum&&(i.userAttempt=0),i.userAttempt++,i.state=2,$(".task-swap-list_item").draggable("disable");for(var t=document.querySelectorAll(".task-swap-list"),o=0;o<i.taskData.exs.length;o++)for(var n=t[o].querySelectorAll(".task-swap-list_item"),l=0;l<i.taskData.exs[o].questionList.length;l++)if(n[l].getAttribute("data-order")!=i.taskData.exs[o].questionList[l].order)return i.userAttempt==i.attemptNum&&i.taskOptions.showAnswer&&r(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void s.showModal("exercise","Ваш результат",i.taskData.messages[i.userAttempt],!1);a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[0],!0)},this.removeRestart=function(){if(i.state=1,i.showRight=0,$(".task-swap-list_item").draggable("enable"),i.taskOptions.shuffle)for(var t=0;t<i.taskExs.length;t++)i.taskExs[t].questionList=_.shuffle(i.taskExs[t].questionList)};var r=function(){i.showRight=1};angular.element(document).ready(function(){function t(t,e){if(!t.classList.contains("task-swap-list_item__fixed")){var s=t.parentNode,a=t.nextSibling===e?t:t.nextSibling;e.parentNode.insertBefore(t,e),s.insertBefore(e,a),e.style.left="0px",e.style.top="0px"}}$(function(){$(".task-swap-list_item").draggable({zIndex:2,start:function(t,e){},stop:function(t,e){e.helper[0].style.top="0px",e.helper[0].style.left="0px"}}).droppable({drop:function(e,s){if(2==this.state)return!1;t($(this).get(0),$(s.draggable).get(0))}})})})}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskSwapList",{templateUrl:"js/components/task-swap-list/taskSwapListTmpl.html",controller:"SwapListCtrl",controllerAs:"$ctrl"}).controller("SwapListCtrl",t)}(),function(){function t(t,e,s,a,i){var o=this;this.state=1,this.taskData=a.getData(e,"data"),this.taskExs=JSON.parse(angular.toJson(this.taskData.exs))[0],this.userAttempt=0,this.attemptNum=this.taskData.options.attempts,this.checkAnswer=function(){if(2!=o.state){o.userAttempt===o.attemptNum&&(o.userAttempt=0),o.userAttempt++,o.state=2;for(var t=document.getElementsByClassName("task-input"),s=0;s<o.taskExs.questionList.length;s++)if(t[s].value!=o.taskExs.questionList[s].label)return o.userAttempt==o.attemptNum&&r(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",o.taskData.messages[o.userAttempt],!1);o.userAttempt=0,i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",o.taskData.messages[0],!0)}},this.removeRestart=function(){o.state=1;for(var t=document.getElementsByClassName("task-input"),e=0;e<t.length;e++)t[e].value=""};var r=function(){for(var t=document.getElementsByClassName("task-input"),e=0;e<o.taskExs.questionList.length;e++)t[e].value=o.taskExs.questionList[e].label}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskTextInput1",{templateUrl:"js/components/task-text-input/task-text-input-1/taskTextInput1Tmpl.html",controller:"taskTextInput1Ctrl",controllerAs:"$ctrl"}).controller("taskTextInput1Ctrl",t)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
