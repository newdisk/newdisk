"use strict";function _defineProperty(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}var _ref,courseStructure={course:"Коммерческие переговоры",description:"Модульный курс для дистанционного обучения",chapters:[{chapter_id:1,chapter_location:"chapter01",title:"Введение",description:"Введение",pages:[{page_id:1,title:"Коммерческие переговоры",location:"page01",hasSound:!0,type:"simple_page",messages:[""]},{page_id:2,title:"Введение. На пути к мастерству",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Каково содержание курса?",location:"page03",hasSound:!1,type:"simple_page",messages:[""]},{page_id:4,title:"Как построено обучение",location:"page04",hasSound:!1,type:"simple_page",messages:[""]},{page_id:5,title:"Введение. Предварительный тест",location:"page05",hasSound:!1,type:"simple_page",messages:[""]},{page_id:6,title:"Предварительный тест",location:"page06",hasSound:!1,type:"test",data:{messages:[""]}}]},{chapter_id:2,chapter_location:"chapter02",title:"Глава 1",description:"Глава 1. Отличие переговоров от процесса продажи",pages:[{page_id:1,title:"Отличие переговоров от процесса продажи",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Что такое переговоры?",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Задание 1",location:"page03",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"9_1",q_id:0}],variants:[{label:"процесс продажи",v_id:0,q_id:-1},{label:"процесс переговоров",v_id:1,q_id:0}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"9_2",q_id:0}],variants:[{label:"процесс продажи",v_id:0,q_id:0},{label:"процесс переговоров",v_id:1,q_id:-1}]}}],defaultLabel:"Не выбран",messages:["Абсолютно правильно! <br/><p>При продаже продавец убеждает покупателя принять его предложение в неизменном, первоначальном виде (не меняет никаких условий, не идет ни на какие уступки). Таким образом, продажа – это процесс убеждения покупателя в том, что предлагаемый продукт или услуга полностью соответствуют его потребностям. <br/>Переговоры – это процесс обсуждения условий сделки с возможностью менять условия договора (цену, сроки поставки, условия оплаты и т.д.). Чтобы вести переговоры, продавец должен иметь полномочия и быть готовым при необходимости поступиться частью интересов компании или своих интересов ради заключения контракта.<p>","Вы где-то ошиблись. <br/><p>Попробуйте дать ответ снова.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>","Закройте это окно и посмотрите правильный ответ. <br/><p>При продаже продавец убеждает покупателя принять его предложение в неизменном, первоначальном виде (не меняет никаких условий, не идет ни на какие уступки). Таким образом, продажа – это процесс убеждения покупателя в том, что предлагаемый продукт или услуга полностью соответствуют его потребностям. <br>Переговоры – это процесс обсуждения условий сделки с возможностью менять условия договора (цену, сроки поставки, условия оплаты и т.д.). Чтобы вести переговоры, продавец должен иметь полномочия и быть готовым при необходимости поступиться частью интересов компании или своих интересов ради заключения контракта.</p>"]}},{page_id:4,title:"Задание 2",location:"page04",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,markers:[{id:0,label:"Продажи"},{id:1,label:"Переговоры"}],questionList:[{label:"У сторон имеются расхождения по некоторым условиям договора, и они встретились, чтобы их обсудить.",right:1},{label:"Одна из сторон должна убедить другую начать сотрудничество со своей компанией и принять предложение в неизменном, первоначальном виде. ",right:0},{label:"Ни одна из сторон не может изменить условия сделки (снизить цену и т. д.).",right:0},{label:"Стороны  могут менять условия сделки, согласуясь с требованиями партнера и со своими интересами.",right:1}],messages:["Вы ответили совершенно верно! <br/><p>Переговоры имеют место при наличии нескольких условий:</p> <ol><li><p>Важно, чтобы в предмете обсуждения были заинтересованы обе стороны: например, продавец желает продать товар, а покупатель хочет его приобрести (этапы выявления потребностей, презентации и ответов на возражения уже пройдены).</p></li><li><p>У сторон имеются расхождения по некоторым условиям договора: или ценам, или  срокам поставки, или условиям оплаты и т.д.</p></li><li><p>Стороны должны иметь право менять эти условия, согласуясь с требованиями партнера по переговорам и согласуясь со своими интересами. Если «торг не уместен», то места для переговоров нет.</p></li></ol>","В ответе есть неточности. <br/><p>Попробуйте выполнить задание снова – у вас обязательно получится.</p>","Подумайте еще. <br/><p>Вспомните реальные ситуации продаж и переговоров, в которых вы принимали участие.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ. Не забывайте, переговоры имеют место при наличии нескольких условий:</p> <br/><ol><li><p>Важно, чтобы в предмете обсуждения были заинтересованы обе стороны.</p></li><li><p>У сторон имеются расхождения по некоторым условиям договора: ценам, срокам поставки, условиям оплаты и т.д.</p></li><li><p>Стороны должны иметь право менять эти условия, согласуясь с требованиями партнера по переговорам и со своими интересами. Если «торг не уместен», то места для переговоров нет.</p></li></ol>"]}},{page_id:5,title:"Задание 3",location:"page05",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Предлагая «скидочку», продавец...",questionList:[{label:"использует скидку как аргумент продажи (убеждает начать сотрудничество)",right:1},{label:"предлагает скидку как аргумент переговоров (согласует условия сделки)",right:0}]},{taskText:"Выгодно ли Компании использовать скидки как аргумент продажи?",questionList:[{label:"да ",right:0},{label:"нет",right:1}]},{taskText:"Выгодно ли Компании использовать скидки как аргумент переговоров?",questionList:[{label:"да ",right:0},{label:"нет",right:0},{label:"выгодно при определенных условиях",right:1}]}],messages:["Это правильный ответ. <br/><p>Ваша оценка ситуации абсолютно справедлива. Диалог продавца с покупателем вполне можно назвать презентацией, и в данном случае выбранная форма общения вполне соответствует целям продажи.</p>","Ответ неверный. <br/><p>Попробуйте выполнить задание снова.</p>","Вы вновь ошиблись. <br/><p>Подумайте еще.</p>","Закройте это окно и посмотрите правильный ответ. <br/><p>Диалог продавца с покупателем вполне можно назвать презентацией, и в данном случае выбранная форма общения вполне соответствует целям продажи.</p>"]}},{page_id:6,title:"Задание 4",location:"page06",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,taskText:" Какой процент от прибыли теряет ваша компания, если вы продаете товар с такой скидкой?",questionList:[{label:"5%",right:0},{label:"25%",right:0},{label:"50%",right:1}],messages:["Абсолютно правильно! <br/><p>Посчитать потенциальный размер потерянной прибыли – это важный навык для коммерческих переговоров.</p>","Ваш ответ неверный. <br/><p>Скорректируйте расчет.</p>","Подумайте еще. <br/><p>Рассчитайте сначала общую сумму прибыли.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:7,title:"Задание 5",location:"page07",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,taskText:"Задавая этот вопрос, вы...",questionList:[{label:"продолжаете продавать",right:1},{label:"вступаете в процесс переговоров",right:0}],messages:["Совершенно верно! <br/><p>Фиксированная цена – важное отличие продаж от переговоров.</p>","Вы ошиблись. <br/><p>Подумайте еще.</p>","Ваш ответ неверный.","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:8,title:"Записная книжка. Задание 1",location:"page08",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}},{page_id:9,title:"«Золотое правило» переговоров",location:"page09",hasSound:!1,type:"simple_page",messages:[""]}]},{chapter_id:3,chapter_location:"chapter03",title:"Глава 2",description:"Глава 2. Стратегии переговоров",pages:[{page_id:1,title:"Стратегии переговоров",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Выбор стратегии переговоров",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Жесткая стратегия",location:"page03",hasSound:!1,type:"simple_page",messages:[""]},{page_id:4,title:"Жесткая стратегия: признаки",location:"page04",hasSound:!1,type:"simple_page",messages:[""]},{page_id:5,title:"Жесткая стратегия: результаты",location:"page05",hasSound:!1,type:"simple_page",messages:[""]},{page_id:6,title:"Задание 6",location:"page06",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Выиграл – проиграл",right:0},{label:"Проиграл – выиграл",right:0},{label:"Проиграл – проиграл",right:1},{label:"Выиграл – выиграл",right:0}],messages:["Это правильный ответ! <br/><p>Владимир на этапе подписания договора в последний момент меняет некоторые условия в пользу своей компании и отказывается эти изменения обсуждать с партнером. Поставщик посуды не поддался давлению и отказался от сотрудничества. Такой результат является проигрышем и для поставщика одноразовой посуды (он потерял заказ), и для Владимира, который вынужден срочно искать новых поставщиков.</p>","Вы ошиблись. <br/><p>Результат был несколько иным.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ. <br>Владимир на этапе подписания договора в последний момент меняет некоторые условия в пользу своей компании и отказывается эти изменения обсуждать с партнером. Поставщик посуды не поддался давлению и отказался от сотрудничества. Такой результат является проигрышем и для поставщика одноразовой посуды (он потерял заказ), и для Владимира, который вынужден срочно искать новых поставщиков.</p>"]}},{page_id:7,title:"Жесткая стратегия: правила использования",location:"page07",hasSound:!1,type:"simple_page",messages:[""]},{page_id:8,title:"Мягкая стратегия",location:"page08",hasSound:!1,type:"simple_page",messages:[""]},{page_id:9,title:"Задание 7",location:"page09",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Выиграл – проиграл",right:0},{label:"Проиграл – выиграл",right:1},{label:"Проиграл – проиграл",right:0},{label:"Выиграл – выиграл",right:0}],messages:["Совершенно верно! <br/><p>Вы правильно оценили позицию покупателя.</p>","Это неверный ответ. <br/><p>Сравните предполагаемые потери и приобретения каждой из сторон в результате сложившейся ситуации.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизоды.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:10,title:"Задание 8",location:"page10",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Какую позицию в переговорах с женой традиционно занимал Владимир?",questionList:[{label:"Выиграл – проиграл",right:1},{label:"Проиграл – выиграл",right:0},{label:"Проиграл – проиграл",right:0},{label:"Выиграл – выиграл",right:0}]},{taskText:"В какой ситуации он оказался в данном случае?",questionList:[{label:"Выиграл – проиграл",right:0},{label:"Проиграл – выиграл",right:1},{label:"Проиграл – проиграл",right:0},{label:"Выиграл – выиграл",right:0}]}],messages:["Совершенно верно! <br/><p>В данном случае Владимир оказался в роли проигравшего, в отличие от своей жены.</p>","Это неверный ответ. <br/><p>Обратите внимание, как изменились позиции обеих сторон.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:11,title:"Стратегия сотрудничества",location:"page11",hasSound:!1,type:"simple_page",messages:[""]},{page_id:12,title:"Стратегия сотрудничества: с чего начать",location:"page12",hasSound:!1,type:"simple_page",messages:[""]},{page_id:13,title:"Задание 9",location:"page13",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,markers:[{id:0,label:"Принципы соперничества"},{id:1,label:"Принципы сотрудничества"}],questionList:[{label:"Трактовка фактов (оценка, обвинение)",right:0},{label:"Доминирование (установка на нападение)",right:0},{label:"Ориентация на заявленную позицию (стремление влиять, переубеждать, контролировать, использовать угрозы)",right:0},{label:"Жесткое следование выбранной тактике (состязание, маневрирование)",right:0},{label:"Равнодушие (апатия, пассивность, игнорирование чувств участников переговоров)",right:0},{label:"Изложение фактов (честный поиск информации)",right:1},{label:"Равноправие (установка на взаимодействие)",right:1},{label:"Ориентация на интересы, поиск решения (общие задачи, поиск общего знаменателя, предложение кооперации)",right:1},{label:"Спонтанность (гибкость, прямота, свободное взаимодействие, творчество)",right:1},{label:"Сопереживание (разделение чувств, понимание, признание)",right:1}],messages:["Это правильный ответ! <br/><p>Вы знаете, чем отличаются принципы сотрудничества от принципов соперничества.</p>","Вы ошиблись. <br/><p>Какие-то принципы относятся к другой стратегии.</p>","Подумайте еще. <br/><p>Вспомните, чем переговорные стратегии отличаются друг от друга.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:14,title:"Задание 10",location:"page14",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,taskText:"",questionList:[{label:"Установка на взаимодействие.",right:1},{label:"Изложение фактов (честный поиск информации).",right:0},{label:"Равноправие.",right:1},{label:"Ориентация на интересы, поиск решения (общие задачи, поиск общего знаменателя, предложение кооперации).",right:1},{label:"Спонтанность (гибкость, прямота, свободное взаимодействие).",right:0},{label:"Сопереживание (разделение чувств, понимание, признание).",right:0},{label:"Взаимное уважение, доверие.",right:1},{label:"Предвидение (готовность экспериментировать, проводить исследования, творчество, новаторство).",right:1}],messages:["Именно так! <br/><p>Вы совершенно верно отметили принципы, которыми посоветовала руководствоваться мать Светланы.</p>","Вы ошиблись. <br/><p>В данном случае обсуждался другой набор принципов.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:15,title:"Компромисс, или путь взаимных уступок",location:"page15",hasSound:!1,type:"simple_page",messages:[""]},{page_id:16,title:"Сильные и слабые стороны компромисса",location:"page16",hasSound:!1,type:"simple_page",messages:[""]},{page_id:17,title:"Компромисс: правила использования",location:"page17",hasSound:!1,type:"simple_page",messages:[""]},{page_id:18,title:"Задание 11",location:"page18",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Елена",questionList:[{label:"Выиграл-проиграл ",right:1},{label:"Выиграл-выиграл",right:0},{label:"Компромисс",right:0}]},{taskText:"Виктор",questionList:[{label:"Выиграл-проиграл ",right:0},{label:"Выиграл-выиграл",right:1},{label:"Компромисс",right:0}]}],messages:["Именно так! <br/><p>Вы знаете, чем отличаются друг от друга разные позиции в переговорах.</p>","Ответ неверный. <br/><p>В данном случае намерения персонажей были несколько иными.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.<br/> Помните, чем отличаются друг от друга разные позиции в переговорах «Выиграл-проиграл»: ориентация на краткосрочное взаимодействие; «Выиграл-выиграл»: стремление к взаимовыгодному сотрудничеству, налаживание долгосрочных отношений с клиентом; «Компромисс» – пополам: ни тебе-ни мне.</p>"]}},{page_id:19,title:"Задание 12",location:"page19",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,markers:[{id:1,label:"Целесообразно"},{id:0,label:"Нецелесообразно"}],questionList:[{label:"Вы и ваш партнер по переговорам способны изложить суть интересов и выслушать друг друга.",right:1},{label:"У Вас сильная позиция и влияние, и исход переговоров очень важен для Вас. ",right:1},{label:"У вас тесные и взаимозависимые отношения.",right:1},{label:"Для Вас важно достижение краткосрочного результата, а отсроченные последствия не столь важны.",right:0},{label:"Вы на равных ищете решение проблемы. ",right:1},{label:"Вы ведете обсуждение всего одного, не очень важного для вас компонента соглашения.",right:0},{label:"Вы делаете ставку на долгосрочные отношения с партнером. ",right:1}],messages:["Абсолютно правильно! <br/><p>Вы знаете, в каких случаях целесообразно использовать стратегию сотрудничества, а в каких – нет.</p>","Вы ошиблись. <br/><p>Стратегию сотрудничества целесообразнее использовать при ином наборе условий.</p>","Подумайте еще. <br/><p>Вспомните основные характеристики стратегии сотрудничества.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:20,title:"Резюме",location:"page20",hasSound:!1,type:"simple_page",messages:[""]},{page_id:21,title:"Записная книжка. Задание 2",location:"page21",hasSound:!1,type:"note_page",data:{task_fields:6,showTitle:!1,maxlength:120,titles:[""],messages:[""]}},{page_id:22,title:"Записная книжка. Задание 3",location:"page22",hasSound:!1,type:"note_page",data:{task_fields:3,showTitle:!1,maxlength:120,titles:[""],messages:[""]}}]},{chapter_id:4,chapter_location:"chapter04",title:"Глава 3",description:"Глава 3. Этапы переговорного процесса",pages:[{page_id:1,title:"Этапы переговорного процесса",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Этапы переговорного процесса: краткая характеристика",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Шаг 1. Формулирование целей, анализ интересов",location:"page03",hasSound:!1,type:"simple_page",messages:[""]},{page_id:4,title:"Формулирование целей",location:"page04",hasSound:!1,type:"simple_page",messages:[""]},{page_id:5,title:"Интересы и позиции",location:"page05",hasSound:!1,type:"simple_page",messages:[""]},{page_id:6,title:"Записная книжка. Задание 4",location:"page06",hasSound:!1,type:"note_page",data:{task_fields:12,showTitle:!1,maxlength:120,titles:["Моя компания","Компания партнера"],messages:[""]}},{page_id:7,title:"Шаг 2. Сбор информации",location:"page07",hasSound:!1,type:"simple_page",messages:[""]},{page_id:8,title:"Записная книжка. Задание 5",location:"page08",hasSound:!1,type:"note_page",data:{task_fields:1,showTitle:!1,maxlength:120,titles:[""],messages:[""]}},{page_id:9,title:"Комментарии",location:"page09",hasSound:!1,type:"simple_page",messages:[""]},{page_id:10,title:"Записная книжка. Задание 6",location:"page10",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:120,titles:[""],messages:[""]}},{page_id:11,title:"Шаг 3. Выделение вопросов для обсуждения на переговорах",location:"page11",hasSound:!1,type:"simple_page",messages:[""]},{page_id:12,title:"Шаг 4. Определение области торга",location:"page12",hasSound:!1,type:"simple_page"},{page_id:13,title:"Задание 13",location:"page13",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Целевая точка",q_id:0}],variants:[{label:"9",v_id:0,q_id:0},{label:"10,5",v_id:1,q_id:-1},{label:"12",v_id:2,q_id:-1},{label:"13,5",v_id:3,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Точка сопротивления",q_id:0}],variants:[{label:"9",v_id:0,q_id:-1},{label:"10,5",v_id:1,q_id:-1},{label:"12",v_id:2,q_id:-1},{label:"13,5",v_id:3,q_id:0}]}}],defaultLabel:"Выберите ответ",messages:["Совершенно верно! <br/><p>Вы правильно рассчитали значения для данной ситуации.</p>","Ответ неверный. <br/><p>Ваш расчет требует корректировки.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:14,title:"Записная книжка. Задание 7",location:"page14",hasSound:!1,type:"note_page",data:{task_fields:15,showTitle:!0,maxlength:120,titles:["Параметры торга","Целевая точка","Точка сопротивления"],messages:[""]}},(_ref={page_id:15,title:"Определение области торга: область обсуждения",location:"page15",hasSound:!1},_defineProperty(_ref,"hasSound",!1),_defineProperty(_ref,"type","simple_page"),_defineProperty(_ref,"messages",[""]),_ref),{page_id:16,title:"Положительная область обсуждения",location:"page16",hasSound:!1,type:"simple_page",messages:[""]},{page_id:17,title:"Отрицательная область обсуждения",location:"page17",hasSound:!1,type:"simple_page",messages:[""]},{page_id:18,title:"Отсутствие области торга",location:"page18",hasSound:!1,type:"simple_page",messages:[""]},{page_id:19,title:"Задание 14",location:"page19",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[],messages:["Это правильный ответ! <br/><p>Каждая сторона обычно стремится скрыть свою точку сопротивления любой ценой и пытается убедить другую сторону в том, что ее точка сопротивления близка, если не совпадает, с целевой точкой. Стороны часто сознательно создают видимость того, что у них расстояние от целевой точки до точки сопротивления очень мало. Это главный парадокс, объясняющий ход большинства переговоров. Если обе стороны успешно убедят друг друга в том, что их точка сопротивления близка к целевой точке, может сложиться впечатление образования отрицательной зоны обсуждения, хотя в реальности она не возникала вовсе.</p>","Вы ошиблись. <br/><p>Попробуйте определить область обсуждения заново.</p>","Подумайте еще. <br/><p>Подумайте еще. Вспомните, от чего зависят пределы на арене переговоров.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.  Каждая сторона обычно стремится скрыть свою точку сопротивления любой ценой и пытается убедить другую сторону в том, что ее точка сопротивления близка, если не совпадает, с целевой точкой. Стороны часто сознательно создают видимость того, что у них расстояние от целевой точки до точки сопротивления очень мало. Это главный парадокс, объясняющий ход большинства переговоров. Если обе стороны успешно убедят друг друга в том, что их точка сопротивления близка к целевой точке, может сложиться впечатление образования отрицательной зоны обсуждения, хотя в реальности она не возникала вовсе.</p>"]}},{page_id:20,title:"Определение области торга: диапазон целей",location:"page20",hasSound:!1,type:"simple_page",messages:[""]},{page_id:21,title:"Задание 15",location:"page21",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Область торга",taskType:"single",questionList:[{label:"10 руб. – 16 руб.",right:0},{label:"10 руб. – 16 руб.",right:0},{label:"12 руб. – 14 руб.",right:1}]},{taskText:"Диапазон целей покупателя",taskType:"single",questionList:[{label:"11 руб. – 14 руб.",right:1},{label:"10,5 руб. – 13,5 руб.",right:0},{label:"9 руб. – 15 руб.",right:0}]},{taskText:"Диапазон целей продавца",taskType:"single",questionList:[{label:"12 руб. – 15 руб.",right:1},{label:"10 руб. – 16 руб.",right:0},{label:"9,5 руб. – 14,5 руб.",right:0}]}],messages:["Это правильный ответ! <br/><p>Вы верно рассчитали область торга и диапазоны целей продавца и покупателя.</p>","Вы ошиблись. <br/><p>Какие-то диапазоны значений необходимо скорректировать.</p>","Подумайте еще. <br/><p>Прочитайте внимательно исходные условия.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:22,title:"Записная книжка. Задание 8",location:"page22",hasSound:!1,type:"note_page",data:{task_fields:30,showTitle:!0,maxlength:120,titles:["Параметры торга","Целевая точка","Промежуточные шаги","","","Точка сопротивления"],messages:[""]}},{page_id:23,title:"Шаг 5. Взаимосвязь интересов сторон. Определение цены и ценности уступки",location:"page23",hasSound:!1,type:"simple_page",messages:[""]},{page_id:24,title:"Задание 16",location:"page24",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Сроки поставки",q_id:0}],variants:[{label:"A - 60 дней",v_id:0,q_id:0},{label:"Б - 55 дней",v_id:1,q_id:-1},{label:"В - 50 дней",v_id:2,q_id:-1},{label:"Г - 45 дней",v_id:3,q_id:-1},{label:"Д - 40 дней",v_id:4,q_id:-1},{label:"Е - 35 дней",v_id:5,q_id:-1},{label:"Ж - 30 дней",v_id:6,q_id:-1},{label:"З - 25 дней",v_id:7,q_id:-1},{label:"И - 20 дней",v_id:8,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Размер скидки",q_id:0}],variants:[{label:"A - 0%",v_id:0,q_id:-1},{label:"Б - 1%",v_id:1,q_id:-1},{label:"В - 2%",v_id:2,q_id:-1},{label:"Г - 3%",v_id:3,q_id:-1},{label:"Д - 4%",v_id:4,q_id:0},{label:"Е - 5%",v_id:5,q_id:-1},{label:"Ж - 6%",v_id:6,q_id:-1},{label:"З - 7%",v_id:7,q_id:-1},{label:"И - 8%",v_id:8,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Условия оплаты",q_id:0}],variants:[{label:"A - 1 платеж",v_id:0,q_id:-1},{label:"Б - 2 платежа",v_id:1,q_id:-1},{label:"В - 3 платежа",v_id:2,q_id:-1},{label:"Г - 4 платежа",v_id:3,q_id:-1},{label:"Д - 5 платежей",v_id:4,q_id:-1},{label:"Е - 6 платежей",v_id:5,q_id:-1},{label:"Ж - 7 платежей",v_id:6,q_id:-1},{label:"З - 8 платежей",v_id:7,q_id:-1},{label:"И - 9 платежей",v_id:8,q_id:0}]}}],defaultLabel:"Выберите ответ",messages:["Абсолютно правильно! <br/><p>Вам удалось найти наиболее выгодный вариант для обеих сторон.</p>","Вы ошиблись. <br/><p>Соглашение на подобных условиях вряд ли можно назвать взаимовыгодным.</p>","Подумайте еще. <br/><p>Посчитайте внимательнее выгоды каждой из сторон.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:25,title:"Взаимосвязь интересов сторон: противоположные интересы",location:"page25",hasSound:!1,type:"simple_page",messages:[""]},{page_id:26,title:"Взаимосвязь интересов сторон: неравноценные интересы",location:"page26",hasSound:!1,type:"simple_page",messages:[""]},{page_id:27,title:"Неравноценные интересы по параметру оплаты",location:"page27",hasSound:!1,type:"simple_page",messages:[""]},{page_id:28,title:"Неравноценные интересы: взаимовыгодное решение",location:"page28",hasSound:!1,type:"simple_page",messages:[""]},{page_id:29,title:"Задание 17",location:"page29",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Сроки поставки",q_id:0}],variants:[{label:"A - 60 дней",v_id:-1,q_id:0},{label:"Б - 55 дней",v_id:1,q_id:-1},{label:"В - 50 дней",v_id:2,q_id:-1},{label:"Г - 45 дней",v_id:3,q_id:-1},{label:"Д - 40 дней",v_id:4,q_id:-1},{label:"Е - 35 дней",v_id:5,q_id:-1},{label:"Ж - 30 дней",v_id:6,q_id:-1},{label:"З - 25 дней",v_id:7,q_id:-1},{label:"И - 20 дней",v_id:8,q_id:0}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Размер скидки",q_id:0}],variants:[{label:"A - 0%",v_id:0,q_id:-1},{label:"Б - 1%",v_id:1,q_id:-1},{label:"В - 2%",v_id:2,q_id:-1},{label:"Г - 3%",v_id:3,q_id:-1},{label:"Д - 4%",v_id:4,q_id:0},{label:"Е - 5%",v_id:5,q_id:-1},{label:"Ж - 6%",v_id:6,q_id:-1},{label:"З - 7%",v_id:7,q_id:-1},{label:"И - 8%",v_id:8,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Условия оплаты",q_id:0}],variants:[{label:"A - 1 платеж",v_id:0,q_id:-1},{label:"Б - 2 платежа",v_id:1,q_id:-1},{label:"В - 3 платежа",v_id:2,q_id:-1},{label:"Г - 4 платежа",v_id:3,q_id:-1},{label:"Д - 5 платежей",v_id:4,q_id:0},{label:"Е - 6 платежей",v_id:5,q_id:-1},{label:"Ж - 7 платежей",v_id:6,q_id:-1},{label:"З - 8 платежей",v_id:7,q_id:-1},{label:"И - 9 платежей",v_id:8,q_id:-1}]}}],defaultLabel:"Выберите ответ",messages:["Абсолютно правильно! <br/><p>Вам удалось найти наиболее выгодный вариант для обеих сторон.</p>","Вы ошиблись. <br/><p>Соглашение на подобных условиях вряд ли можно назвать взаимовыгодным.</p>","Подумайте еще. <br/><p>Посчитайте внимательнее выгоды каждой из сторон.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:30,title:"Взаимосвязь интересов сторон: совпадающие интересы",location:"page30",hasSound:!1,type:"simple_page",messages:[""]},{page_id:31,title:"Цена и ценность уступок",location:"page31",hasSound:!1,type:"simple_page",messages:[""]},{page_id:32,title:"Задание 18",location:"page32",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Какие параметры переговоров имеют наиболее низкую цену для поставщиков одноразовой посуды? ",taskType:"multi",questionList:[{label:"Цена товара.",right:0},{label:"Доставка (за счет поставщика).",right:1},{label:"Сроки поставки.",right:1},{label:"Объемы поставки.",right:0}]},{taskText:"Какие параметры переговоров имеют наибольшую ценность для покупателя одноразовой посуды?",taskType:"multi",questionList:[{label:"Цена товара.",right:1},{label:"Доставка (за счет поставщика).",right:0},{label:"Сроки поставки.",right:1},{label:"Объемы поставки.",right:0}]},{taskText:"Какой параметр переговоров продавцам одноразовой посуды следует использовать как уступку?",taskType:"single",questionList:[{label:"Цена товара.",right:0},{label:"Доставка (за счет поставщика).",right:0},{label:"Сроки поставки.",right:1},{label:"Объемы поставки.",right:0}]}],messages:["Абсолютно правильно! <br/><p>Вы верно определили параметры, важные для каждой из сторон.</p>","Вы ошиблись. <br/><p>Попробуйте выполнить задание снова.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ. Сроки поставки крайне важны для покупателя, а для поставщика имеют низкую цену, поэтому этот параметр и стоит использовать продавцу как уступку.</p>"]}},{page_id:33,title:"Задание 19",location:"page33",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,markers:[{id:0,label:"Высокая "},{id:1,label:"Низкая"}],questionList:[{label:"Поставить логотип поставщика в меню баров гостиницы",right:1},{label:"Рецептура приготовления кофе",right:0},{label:"Минимальные сроки поставки обжаренного кофе",right:0}],questionList1:[{label:"Поставить логотип поставщика в меню баров гостиницы",right:0},{label:"Рецептура приготовления кофе",right:1},{label:"Минимальные сроки поставки обжаренного кофе",right:1}],messages:["Это правильный ответ! <br/><p>Вам удалось точно определить, какую ценность имеет та или иная уступка для каждой стороны.</p>","Вы ошиблись. <br/><p>Ценность уступок для каждой из сторон будет несколько иной.</p>","Подумайте еще. <br/><p>Прочитайте внимательно исходные условия.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:34,title:"Записная книжка. Задание 9",location:"page34",hasSound:!1,type:"note_page",data:{task_fields:12,showTitle:!0,maxlength:120,titles:["Уступка","Ценность для партнера","Цена для вас"],messages:[""]}},{page_id:35,title:"Шаг 6. Продумывание вариантов соглашения",location:"page35",hasSound:!1,type:"simple_page",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",questionList:[{phrase:"Открывающая часть",label:"Привлечь внимание, завоевать эмоциональное расположение аудитории.",order:0},{phrase:"Введение",label:"Пробудить содержательный интерес аудитории, ответить на вопрос «зачем мне это надо?»",order:1},{phrase:"Основная часть",label:"Донести главное содержание и решить основные задачи презентации.",order:2},{phrase:"Обзор",label:"Повторить главные выводы, подвести итог сказанному, чтобы усилить убеждение.",order:3},{phrase:"Заключение",label:"Подтолкнуть к действиям, оставить благоприятное впечатление.",order:4}]}],
messages:["Абсолютно правильно! <br/><p>Вы знаете, какие цели соответствуют каждому из этапов презентации.</p>","Вы ошиблись. <br/><p>Какие-то цели соответствуют другим этапам презентации.</p>","Подумайте еще. <br/><p>Вспомните, чего необходимо добиться на каждом этапе презентации.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ. Не забывайте, что у каждого этапа презентации есть своя определенная цель.</p>"]}},{page_id:36,title:"Задание 20",location:"page36",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0,limits:{inDropItems:2}},taskText:"",questionList:[{cost:"15 долларов",conditions:"xx",concessions:"ba"},{cost:"14 долларов",conditions:"xx",concessions:"ca"},{cost:"13 долларов",conditions:"de",concessions:"ax"},{cost:"12 долларов",conditions:"de",concessions:"xx"}],messages:["Совершенно верно! <br/><p>Вы определили оптимальный набор дополнительных условий и уступок для каждого из вариантов цены.</p>","Ответ неверный. <br/><p>В каких-то случаях более выгодным был бы другой дополнительных условий и уступок.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:37,title:"Задание 21",location:"page37",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",taskTitle:["",""],questionList:[{phrase:"Начальная позиция:",label:"9-10 $ за кг, объем 300-400 кг",order:0},{phrase:"Требование 1:",label:"15 $ за кг, объем 300-400 кг",order:1},{phrase:"Уступка и встречная просьба:",label:"10 $ за кг, объем 300-400 кг, поставка оборудования бесплатно",order:2},{phrase:"Требование 2:",label:"14 $ за кг, объем 300-400 кг, оборудование с минимальной платой",order:3},{phrase:"Уступка и встречная просьба:",label:"13 $ за кг, объем 300-400 кг, оборудование с минимальной платой, разработка меню для бара",order:4},{phrase:"Требование 3:",label:"13 $ за кг, объем 300-400 кг, оборудование с минимальной платой,  логотип в меню/аренда конференц-зала",order:5}]}],messages:["Совершенно верно! <br/><p>Вы определили обмен уступками в ходе переговоров.</p>","Ответ неверный. <br/><p>Порядок обмена уступками в ходе переговоров был другой.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:38,title:"Комментарии",location:"page38",hasSound:!1,type:"simple_page",messages:[""]},{page_id:39,title:"Записная книжка. Задание 10",location:"page39",hasSound:!1,type:"note_page",data:{task_fields:6,showTitle:!0,maxlength:120,titles:["Наша начальная позиция","Требование партнера 1","Наша уступка и что мы просим взамен","Требование партнера 2","Наша уступка и что мы просим взамен","Требование партнера 3"],messages:[""]}},{page_id:40,title:"Шаг 7. Подготовка сути вашего предложения. Разработка аргументов",location:"page40",hasSound:!1,type:"simple_page",messages:[""]},{page_id:41,title:"Вопросы при подборе аргументов",location:"page41",hasSound:!1,type:"simple_page"},{page_id:42,title:"Задание 22",location:"page42",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,qCount:-1,taskText:"Как партнеры обосновывают заявленные позиции по цене?",questionList:[{label:"Голословные утверждения о тенденциях на всемирном рынке ",right:[1,0]},{label:"Голословные утверждения о тенденциях на российском рынке",right:[0,0]},{label:"Опубликованные статистические данные по ценам крупных поставщиков на всемирном рынке",right:[0,1]},{label:"Опубликованные статистические данные по ценам крупных поставщиков на российском рынке",right:[0,1]},{label:"Выгоды от сотрудничества с данным партнером",right:[1,1]},{label:"Демонстрация качества товара",right:[0,1]},{label:"Возможность удовлетворить заявленные потребности партнера",right:[0,1]}],messages:["Совершенно верно! <br/><p>Вы правильно определили список аргументов каждой из сторон при обосновании цены.</p>","Вы ошиблись. <br/><p>Аргументы какой-то из сторон были иными.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:43,title:"Задание 23",location:"page43",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!1,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"Владимир обосновал предложение (сделать обзор рынка и сослаться на средние цифры) на основе:",q_id:0}],variants:[{label:"Общепринятых стандартов обслуживания",v_id:0,q_id:-1},{label:"Текущей рыночной ситуации ",v_id:1,q_id:0},{label:"Долгих партнерских отношений",v_id:2,q_id:-1},{label:"Угрозы перехода к конкурентам",v_id:3,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"Дмитрий обосновал предложение (описать недостатки и просить снижения платы) на основе:",q_id:0}],variants:[{label:"Общепринятых стандартов обслуживания ",v_id:0,q_id:0},{label:"Текущей рыночной ситуации",v_id:1,q_id:-1},{label:"Долгих партнерских отношений",v_id:2,q_id:-1},{label:"Угрозы перехода к конкурентам",v_id:3,q_id:-1}]}}],defaultLabel:"Выберите ответ",messages:["Это правильный ответ! <br/><p>Вы отлично разобрались в ситуации.</p>","Ответ неверный. <br/><p>Соотношение обоснований было несколько иным.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:44,title:"Записная книжка. Задание 11",location:"page44",hasSound:!1,type:"note_page",data:{task_fields:12,showTitle:!0,maxlength:120,titles:["Мои аргументы","Контраргумент","Ответ"],messages:[""]}},{page_id:45,title:"НАОС – наилучшая альтернатива обсуждаемому соглашению",location:"page45",hasSound:!1,type:"simple_page"},{page_id:46,title:"НАОС и ожидаемые результаты переговоров",location:"page46",hasSound:!1,type:"simple_page"},{page_id:47,title:"НАОС как последний аргумент",location:"page47",hasSound:!1,type:"simple_page"},{page_id:48,title:"Задание 24",location:"page48",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Заключить договор с компанией «Кофе» на условиях 9 $ за кг.",right:0},{label:"Заключить договор с другим поставщиком кофе на условиях 13 за кг.",right:1},{label:"Заключить договор с компанией «Кофе» на условиях 13,5 $ за кг.",right:0},{label:"Отказаться от сотрудничества с компанией кофе на их условиях.",right:0}],messages:["Абсолютно правильно! <br/><p>Вы верно определили НАОС для менеджеров гостиницы в этой ситуации.</p>","Ответ неверный. <br/><p>НАОС для менеджеров гостиницы был иным.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:49,title:"Записная книжка. Задание 12",location:"page49",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}},{page_id:50,title:"Тактика",location:"page50",hasSound:!1,type:"simple_page"},{page_id:51,title:"Резюме",location:"page51",hasSound:!1,type:"simple_page"},{page_id:52,title:"Начало переговоров",location:"page52",hasSound:!1,type:"simple_page"},{page_id:53,title:"Представление, формирование интереса",location:"page53",hasSound:!1,type:"simple_page"},{page_id:54,title:"Задание 25",location:"page54",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!1,showAnswer:!0,taskText:"",questionList:[{label:"Необычное представление себя, компании (проведение дегустации кофе)",right:1},{label:"Создание доброжелательной атмосферы (комплимент)",right:1},{label:"Краткое изложение вопроса",right:1},{label:"Изложение проблемы, которую предлагается решить",right:0},{label:"Изложение выгод от сотрудничества",right:1},{label:"Обзор событий, предшествующих встречей",right:0},{label:"Ссылки на достигнутые договоренности",right:0},{label:"Рекомендации",right:0},{label:"Уточняющие вопросы",right:1}],messages:["Это правильный ответ! <br/><p>Вам удалось выявить все способы начать переговоры, использованные в киноэпизоде.</p>","Вы ошиблись. <br/><p>Набор способов начать переговоры, который использовали поставщики кофе, был несколько другим.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:55,title:"Обозначение общей цели переговоров",location:"page55",hasSound:!1,type:"simple_page"},{page_id:56,title:"Согласование порядка проведения переговоров",location:"page56",hasSound:!1,type:"simple_page"},{page_id:57,title:"Демонстрируйте уверенность!",location:"page57",hasSound:!1,type:"simple_page"},{page_id:58,title:"Записная книжка. Задание 13",location:"page58",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}},{page_id:59,title:"Резюме",location:"page59",hasSound:!1,type:"simple_page",messages:[""]},{page_id:60,title:"Изложение позиций и их обсуждение",location:"page60",hasSound:!1,type:"simple_page"},{page_id:61,title:"Формулирование позиций и выявление интересов сторон",location:"page61",hasSound:!1,type:"simple_page"},{page_id:62,title:"Вопросы на прояснение позиций и интересов",location:"page62",hasSound:!1,type:"simple_page"},{page_id:63,title:"Формулирование интересов партнера и проверка",location:"page63",hasSound:!1,type:"simple_page"},{page_id:64,title:"Обозначение собственных позиций",location:"page64",hasSound:!1,type:"simple_page",messages:[""]},{page_id:65,title:"Задание 26",location:"page65",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Насколько я понял, вам необходимо 300-400 кг кофе ежемесячно?",right:0},{label:"Под какой вид заварки вам необходим кофе и в каких объемах?",right:0},{label:"У вас есть желающие на этот вид заварки?",right:0},{label:"Что для вас является главным, по каким критериям вы собираетесь оценивать своего поставщика?",right:1}],messages:["Именно так! <br/><p>Вопрос о критериях оценки поставщика – наилучший способ продолжить переговоры в этой ситуации.</p>","Ответ неверный. <br/><p>В этой ситуации оказался бы более полезным другой вопрос.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:66,title:"Рекомендации",location:"page66",hasSound:!1,type:"simple_page"},{page_id:67,title:"Записная книжка. Задание 14",location:"page67",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}},{page_id:68,title:"Презентация сути предложения и обоснование его ценности",location:"page68",hasSound:!1,type:"simple_page"},{page_id:69,title:"Приведение фактов",location:"page69",hasSound:!1,type:"simple_page",messages:[""]},{page_id:70,title:"Выражение несогласия (речевая технология)",location:"page70",hasSound:!1,type:"simple_page"},{page_id:71,title:"Работа с возражениями. Ответ на контрпредложения",location:"page71",hasSound:!1,type:"simple_page"},{page_id:72,title:"Виды аргументов",location:"page72",hasSound:!1,type:"simple_page"},{page_id:73,title:"Задание 27",location:"page73",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:{questions:[{label:"110_1",q_id:0}],variants:[{label:"Подчеркивание плюсов товара",v_id:0,q_id:-1},{label:"Подчеркивание минусов при отказе от покупки ",v_id:1,q_id:0},{label:"Ссылка на внешние стандарты",v_id:2,q_id:-1},{label:"Аналогии, метафоры",v_id:3,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"110_2",q_id:0}],variants:[{label:"Подчеркивание плюсов товара",v_id:0,q_id:0},{label:"Подчеркивание минусов при отказе от покупки ",v_id:1,q_id:-1},{label:"Ссылка на внешние стандарты",v_id:2,q_id:-1},{label:"Аналогии, метафоры",v_id:3,q_id:-1}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"110_3",q_id:0}],variants:[{label:"Подчеркивание плюсов товара",v_id:0,q_id:-1},{label:"Подчеркивание минусов при отказе от покупки ",v_id:1,q_id:-1},{label:"Ссылка на внешние стандарты",v_id:2,q_id:-1},{label:"Аналогии, метафоры",v_id:3,q_id:0}]}},{taskText:"",sameQ:!0,questionList:{questions:[{label:"110_4",q_id:0}],variants:[{label:"Подчеркивание плюсов товара",v_id:0,q_id:-1},{label:"Подчеркивание минусов при отказе от покупки ",v_id:1,q_id:-1},{label:"Ссылка на внешние стандарты",v_id:2,q_id:0},{label:"Аналогии, метафоры",v_id:3,q_id:-1}]}}],defaultLabel:"Не выбран",messages:["Совершенно верно! <br/><p>Вы правильно установили виды аргументации, которые используются в киноэпизодах.</p>","Вы ошиблись. <br/><p>В каких-то случаях использовался другой вид аргументации.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизоды.</p>","Закройте это окно и посмотрите правильный ответ."]}},{page_id:74,title:"Записная книжка. Задание 15",location:"page74",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}},{page_id:75,title:"Резюме",location:"page75",hasSound:!1,type:"simple_page"},{page_id:76,title:"Поиск решения и выработка соглашения",location:"page76",hasSound:!1,type:"simple_page"},{page_id:77,title:"Согласование интересов, условий, обмен уступками",location:"page77",hasSound:!1,type:"simple_page"},{page_id:78,title:"Задание 28",location:"page78",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Имейте несколько вариантов соглашений, но выдвигайте предложения по одному.",right:0},{label:"Пробуйте вести разведку в разных направлениях, не бойтесь испытать  позиции партнера фразами, начинающимися с «А что если…».",right:1},{label:"Начальные условия – большие, начальная уступка – маленькая.",right:1},{label:"Не просите абстрактно о снижении цены – выдвигайте встречное предложение.",right:1},{label:"Ничего не отдавайте безвозмездно: добровольные уступки делают реакцию другой стороны более жесткой.",right:1},{label:"Не просто говорите о том, что вас не устраивает, а ведите переговоры о компенсации.",right:0}],messages:["Абсолютно правильно! <br/><p>Вы обнаружили все правила, которые нарушил Дмитрий на этапе выработки соглашения.</p>","Ответ неверный. <br/><p>Дмитрий нарушил много правил, попытайтесь установить точно, какие именно.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:79,title:"Техника выдвижения предложений",location:"page79",hasSound:!1,type:"simple_page",messages:[""]},{page_id:80,title:"Задание 29",location:"page80",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"Владеют ли  технологиями представители компании «Кофе»?",questionList:[{label:"да ",right:1},{label:"нет",right:0}]},{taskText:"Владеют ли технологиями выдвижения предложений представители гостиницы?",questionList:[{label:"да ",right:1},{label:"нет",right:0}]}],messages:["Именно так! <br/><p>В данном примере переговорными технологиями владеют обе стороны.</p>","Вы ошиблись. <br/><p>Видимо, вы недооценили переговорное мастерство сторон.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","Закройте это окно и посмотрите правильный ответ. "]}},{page_id:81,title:"Техника ответа на предложение и ведения торга",location:"page81",hasSound:!1,type:"simple_page"},{page_id:82,title:"Задание 30",location:"page82",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",taskTitle:["Название приема","Речь продавца"],questionList:[{phrase:"Предоставление партнеру тех выгод, которые ему необходимы",label:"Если договоримся, то завтра вы сможете забрать посуду",order:0},{phrase:"Подчеркивание цены уступки",label:"Если вы сможете поставлять нам по 2 кг кофе ежемесячно, мы могли бы подумать, чтобы сделать поставку за наш счет, хотя для нас это будет довольно хлопотно, придется арендовать автотранспорт",order:1},{phrase:"Объяснение, какие потери понесет компания, идя на уступку",label:"Чтобы пойти вам навстречу, нам придется партию посуды, которая предназначается для другого клиента, передать вам, нам придется платить неустойку",order:2}]}],messages:["Абсолютно  правильно! <br/><p>Вам удалось найти в речи продавца все приемы, использованные для повышения ценности уступок.</p>","Вы ошиблись. <br/><p>В каких-то случаях название приема было иным.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:83,title:"Как повышать ценность уступки?",location:"page83",hasSound:!1,type:"simple_page"},{page_id:84,title:"Как реагировать на просьбу о нежелательной уступке?",location:"page84",hasSound:!1,type:"simple_page",messages:[""]},{page_id:85,title:"Задание 31",location:"page85",hasSound:!1,type:"exercise",data:{attempts:3,shuffle:!0,showAnswer:!0,qCount:-1,taskText:"",questionList:[{label:"Свести к минимуму для клиента важность данной уступки.",right:0},{label:"Показать, что эта уступка поставит клиента в невыгодное положение.",right:0},{label:"Предложить альтернативные уступки или другое пакетное соглашение. ",right:1},{label:"Убедить клиента, что выгоды от сделки при отсутствии уступки не изменятся.",right:0}],messages:["Совершенно верно! <br/><p>Поставщики одноразовой посуды решили предложить альтернативные уступки.</p>","Вы ошиблись. <br/><p>Тактика поставщиков посуды была другой.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизод.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:86,title:"Как снижать ценность уступки партнера?",location:"page86",hasSound:!1,type:"simple_page"},{page_id:87,title:"Пробное заключение сделки",location:"page87",hasSound:!1,type:"simple_page"},{page_id:88,title:"Советы о тактике переговоров",location:"page88",hasSound:!1,type:"simple_page"},{page_id:89,title:"Записная книжка. Задание 16",location:"page89",hasSound:!1,type:"note_page",data:{task_fields:10,showTitle:!0,maxlength:300,titles:["Повышение ценности ваших уступок","Снижение ценности уступок партнера"],messages:[""]}},{page_id:90,title:"Достижение договоренностей",location:"page90",hasSound:!1,type:"simple_page"},{page_id:91,title:"Записная книжка. Задание 17",location:"page91",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}},{page_id:92,title:"Выработка окончательного варианта соглашения, подписание контракта",location:"page92",hasSound:!1,type:"simple_page"},{page_id:93,title:"Завершение переговоров: пример",location:"page93",hasSound:!1,type:"simple_page"},{page_id:94,title:"Взаимовыгодное решение найдено: что дальше?",location:"page94",hasSound:!1,type:"simple_page",messages:[""]},{page_id:95,title:"Утверждение проекта соглашения",location:"page95",hasSound:!1,type:"simple_page"},{page_id:96,title:"Альтернативы окончательному соглашению",location:"page96",hasSound:!1,type:"simple_page"},{page_id:97,title:"Как достичь частичного соглашения?",location:"page97",hasSound:!1,type:"simple_page"},{page_id:98,title:"Резюме",location:"page98",hasSound:!1,type:"simple_page"},{page_id:99,title:"Записная книжка. Задание 18",location:"page99",hasSound:!1,type:"note_page",data:{task_fields:5,showTitle:!1,maxlength:300,titles:[""],messages:[""]}}]},{chapter_id:5,chapter_location:"chapter05",title:"Глава 4",description:"Глава 4. Преодоление уловок и манипуляций",pages:[{page_id:1,title:"Преодоление уловок и манипуляций",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Преодоление уловок",location:"page02",hasSound:!1,type:"simple_page",messages:[""]},{page_id:3,title:"Задание 32",location:"page03",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",sameQ:!0,questionList:[{label:2,right:"r13"},{label:3,right:"r14"},{label:1,right:"r15"},{label:6,right:"r16"},{label:4,right:"r17"},{label:5,right:"r18"}]}],defaultLabel:"Не выбран",messages:["Это правильный ответ! <br/><p>Вы верно определили все уловки, которые были использованы в каждом киноэпизоде.</p>","Ответ неверный. <br/><p>В каком-то случае использовался другой тип уловок.</p>","Подумайте еще. <br/><p>Пересмотрите киноэпизоды.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:4,title:"Комментарии",location:"page04",hasSound:!1,type:"simple_page",messages:[""]},{page_id:5,title:"Задание 33",location:"page05",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",taskTitle:["Прием","Ответ"],questionList:[{phrase:"«Сомнительные обязательства»",modInfo:"<p>Нет гарантии, что партнер выполнит обещания.</p>",label:"Перед подписанием контракта четко сформулируйте, что произойдет, если одна из сторон не выполнит его. Занесите это в договор.",order:0},{phrase:"«Стесняющие условия»",modInfo:"<p>Переговоры проходят в неприятной шумной обстановке. Они прерываются телефонными звонками, приемом посетителей… Вас могут посадить на низкое кресло или лицом к свету…</p>",label:"Спокойно выразите недовольство. Предложите изменить условия.",order:1},{phrase:"«Личные нападки»",modInfo:"<p>Прерывание, повышение тона голоса, сознательное понижение статуса собеседника.</p>",label:"Проведите «переговоры о переговорах». Обсудите «правила игры», уверенно отметьте, что личные нападки недопустимы.",order:2},{phrase:"«Позиционное давление»",modInfo:"<p>Вы послали на подпись согласованный контракт. Получаете его назад подписанным, но с вычеркнутыми и исправленными пунктами.</p>",label:"Выскажите несогласие. Напомните, о чем договорились ранее.",order:3}]}],messages:["Совершенно верно! <br/><p>Вы знаете, как реагировать на описанные приемы манипулирования.</p>","Вы ошиблись. <br/><p>В каком-то случае реакция на приемы манипулирования должна быть иной.</p>","Подумайте еще. <br/><p>Прочитайте внимательно, в чем заключается суть каждого из приемов.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:6,title:"Задание 34",location:"page06",hasSound:!1,type:"exercise",data:{options:{attempts:3,shuffle:!0,showAnswer:!0},exs:[{taskText:"",taskTitle:["Прием","Ответ"],questionList:[{phrase:"«Салями»",modInfo:"<p>Как от большого батона колбасы отрезают по маленькому кружочку, так и ваши оппоненты выдают вам необходимую информацию маленькими порциями или вытягивают из вас маленькие уступки, одна за другой.</p>",label:"Вернитесь к обсуждению целей переговоров, подчеркните общие интересы. Объясните свою установку на «выиграл – выиграл» и скажите, что ожидаете такого же открытого поведения от партнеров.",order:0},{phrase:"«Максимальное завышение начального уровня»",modInfo:"<p>Ваш партнер стремится как можно дольше сохранять свои позиции. Часто его начальные условия включают пункты, от которых можно безболезненно отказаться, выдавая это за уступку.</p>",label:"Докажите необоснованность требований, сославшись на цены и условия на рынке и т.д. Подтвердите свои доводы фактами из независимых источников.",order:1},{phrase:"«Давление с изображением собственного бессилия»",modInfo:"<p>Партнер упирает на безвыходность его ситуации, пытаясь вызвать у вас сочувствие своим «бедственным положением».</p>",label:"Не поддавайтесь. Выразите сочувствие, но твердо объясните, почему не можете изменить свои условия.",order:2},{phrase:"«Ультиматум» или «Отказ от переговоров»",modInfo:"<p>Ваш партнер угрожает вам или выдвигает неприемлемые для вас условия в резкой и бескомпромиссной манере.</p>",label:"Не отвечайте грубостью на грубость. Вернитесь к принципам проведения переговоров: предложите разделить проблему на составные части. Возьмите паузу, подключите к проблеме других специалистов вашей компании.",order:3}]}],messages:["Абсолютно правильно! <br/><p>Вы отлично подготовились к переговорам и не позволите манипулировать собой.</p>","Это неправильный ответ. <br/><p>Некоторые приемы манипулирования требуют иной реакции.</p>","Подумайте еще. <br/><p>Прочитайте внимательно описание каждого из приемов.</p>","И снова ошибка. <br/><p>Закройте это окно и посмотрите правильный ответ.</p>"]}},{page_id:7,title:"Резюме",location:"page07",hasSound:!1,type:"simple_page",messages:[""]},{page_id:8,title:"Записная книжка. Задание 19",location:"page08",hasSound:!1,type:"note_page",data:{task_fields:10,showTitle:!0,maxlength:120,titles:["Уловка","Как противостоять"],messages:[""]}}]},{chapter_id:6,chapter_location:"chapter06",title:"Глава 5",description:"Глава 5. Итоговый тест",pages:[{page_id:1,title:"Итоговый тест",location:"page01",hasSound:!1,type:"simple_page",messages:[""]},{page_id:2,title:"Вопросы итогового теста",location:"page02",hasSound:!1,type:"test",messages:[""]},{page_id:3,title:"Заключение",location:"page03",hasSound:!1,type:"simple_page",messages:[""]}]}]},testStructure={tests:[{testId:0,caption:"final_test",type:"section",groups:[{id:5,caption:"group1",qUse:"all",questions:[{question:"Клиент заявляет, что цена на ваш товар слишком высока. В ответ на это вы соглашаетесь снизить цену на 5%.\nВ данном случае предложенная скидка – это… \n",score:-1,status:"notanswered",type:"single",answers:[{label:"аргумент  в процессе продажи",right:!0},{label:"элемент переговорного процесса",right:!1}]},{question:"Суть переговоров заключается в том, чтобы…",score:-1,status:"notanswered",type:"single",answers:[{label:"давать и брать",right:!1},{label:"совместно принимать решения",right:!0},{label:"добиваться компромисса",right:!1},{label:"создавать положительный имидж честного переговорщика",right:!1}]},{question:"В ситуации коммерческих переговоров стратегия соперничества («наша сторона должна выиграть, а ваша – проиграть») является оптимальной?",score:-1,status:"notanswered",type:"single",answers:[{label:"да, всегда",right:!1},{label:"нет, не всегда",right:!0}]},{question:"У вас есть всего три часа на проведение переговорного процесса, включая подготовку к нему. Как вы распределите свое время?",score:-1,status:"notanswered",type:"single",answers:[{label:"1 час – на подготовку, 2 часа – на ведение переговоров",right:!1},{label:"1,5 часа – на подготовку, 1,5 часа – на ведение переговоров",right:!1},{label:"2 часа на подготовку, 1 час – на переговоры",right:!0}]},{question:"К вам для переговоров приехала руководительница отдела продаж фирмы, производящей и поставляющей офисное оборудование. Вы заметили, что она подъехала к вашему офису на автомобиле представительского класса, на ней надет шикарный костюм от «Chanel», в руках у нее модная деловая сумка от «Vuitton». Какой вы сделаете вывод?",score:-1,status:"notanswered",type:"single",answers:[{label:"Будете уверены, что имеете дело с первоклассной фирмой",right:!1},{label:"Сочтете, что услуги этой компании будут стоить очень дорого",right:!1},{label:"Не будете обращать внимания на то, какая у нее машина и как она одета, поскольку это не имеет отношения к предстоящим переговорам",right:!0}]},{question:"Согласны ли вы с утверждением: \n«Для проведения успешных переговоров необходимо жесткое следование заранее намеченной тактике»?\n",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!1},{label:"нет",right:!0}]},{question:"Определение области торга и ценности уступок относится к следующему этапу переговоров…",score:-1,status:"notanswered",type:"single",answers:[{label:"изложение точек зрения и обсуждение",right:!1},{label:"подготовка",right:!0},{label:"поиск решения и выработка соглашения",right:!1},{label:"начало переговоров",right:!1}]},{question:"К параметрам торга относятся:",score:-1,status:"notanswered",type:"multi",answers:[{label:"цена",right:!0},{label:"объем сделки в натуральном и денежном выражении",right:!0},{label:"срок поставки",right:!0},{label:"срок оплаты",right:!0}]},{question:"Вы для себя решили, что нижний предел цены, до которого вы можете опуститься при продаже своего автомобиля, составляет 500 000 рублей. В результате переговоров вы достигли именно этого, минимального для вас, уровня цены. Можно ли считать, что такой итог переговоров выгоден для вас?",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!0},{label:"нет",right:!1}]},{question:"Ваш бизнес – консультации и проведение обучения по переговорному процессу. Вы получили запрос по электронной почте о проведении однодневного семинара для членов Городской Думы. Тема семинара полностью соответствует той, что вы традиционно проводите, и специальной подготовки вам не потребуется. Что вы сделаете?",score:-1,status:"notanswered",type:"single",answers:[{label:"назовете стандартную цену за семинар, которая заявлена на вашем сайте",right:!1},{label:"назовете цену на 15% ниже стандартной",right:!1},{label:"назовете цену на 50% выше стандартной и попросите отдельно оплатить  подготовку",right:!1},{label:"запросите список участников",right:!0}]},{question:"Назовите область обсуждения (или «арену переговоров»).\nПокупатель готов приобрести товар максимум за 1000 рублей. Его желаемой ценой является 500 рублей. Для продавца желаемая цена продажи – 1300 рублей. Минимальная цена, за которую продавец готов отдать товар, составляет 900 рублей.\n",score:-1,status:"notanswered",type:"single",answers:[{label:"500 – 1000 рублей",right:!1},{label:"500 – 900 рублей",right:!1},{label:"900 – 1000 рублей",right:!0},{label:"900– 1300 рублей",right:!1}]},{question:"Наиболее выгодные варианты уступок, которые вы можете сделать,  возможны в случае (-ях):",score:-1,status:"notanswered",type:"multi",answers:[{label:"низкой цены уступки для вас (низкие затраты, незначительные усилия)",right:!0},{label:"низкой ценности уступки для партнера",right:!1},{label:"высокой ценности вашей уступки для партнера",right:!0}]},{question:"Вы достали билет на концерт вашего любимого исполнителя и попросили няню задержаться сверх положенного времени с вашим трехлетним сыном. Обычно вы оплачиваете каждый сверхурочный час по ставке на 30% выше обычной. Но на этот раз няня сказала, что вряд ли сможет вас выручить. Однако отказ не был категоричным, и вам показалось, что она ждет от вас повышения оплаты. Что вы сделаете?",score:-1,status:"notanswered",type:"single",answers:[{label:"предложите более высокую цену, но оговорите, что это касается лишь данного случая",right:!1},{label:"скажете, что у вас есть очень веские причины, чтобы просить ее об этой услуге",right:!1},{label:"спросите, какие у нее есть идеи о разрешении этой ситуации",right:!0}]},{question:"Вы ведете переговоры с поставщиком комплектующих для вашего производства. Вы уже получили альтернативное предложение от другого поставщика. \nКак вы поступите, если настоящие переговоры пойдут трудно?\n",score:-1,status:"notanswered",type:"single",answers:[{label:"сразу заявите об альтернативном предложении, чтобы снизить аппетиты другой стороны",right:!1},{label:"не будете вообще об этом говорить в ходе переговоров",right:!1},{label:"используете этот факт как последний аргумент в защиту своей позиции",right:!0}]},{question:"Согласны ли вы с утверждением?\nОсновные приемы ведения торга – повышение видимой стоимости и ценности уступки, которую вы делаете партнеру, и снижение видимой стоимости и ценности уступки, которую делает партнер.\n",score:-1,status:"notanswered",type:"single",answers:[{label:"да",right:!0},{label:"нет",right:!1}]},{question:"Как лучше всего поступить, если партнер в условиях цейтнота использует прием «выдвижение требований в последний момент»?",score:-1,status:"notanswered",type:"single",answers:[{label:"согласиться с требованием, чтобы спасти сделку",right:!1},{label:"выдвинуть встречное требование",right:!1},{label:"напомнить, что об этом условии речь не шла, и что его надо обсуждать отдельно, если партнер на нем настаивает",right:!0}]},{question:"Как лучше всего поступить, если в процессе переговоров партнер прерывает вас, повышает тон голоса?",score:-1,status:"notanswered",type:"single",answers:[{label:"сделать вид, что вы ничего не замечаете и спокойно продолжать обсуждение",right:!1},{label:"поступить так же, как он",right:!1},{
label:"в твердой форме высказать свое мнение о недопустимости использования личных нападок",right:!0}]},{question:"Как лучше всего поступить, если в процессе переговоров ваш партнер стремится максимально завышать требования и как можно дольше отстаивать свою крайнюю позицию?",score:-1,status:"notanswered",type:"single",answers:[{label:"сообщить, что вы понимаете, что партнер сознательно стремится вас прессинговать",right:!1},{label:"доказать необоснованность требований, подтвердить свои доводы фактами из независимых источников",right:!0},{label:"играть роль «робкого ягненка», а затем «показать клыки» ",right:!1},{label:"предупредить, что если партнер не изменит свою позицию, то вы прекратите переговоры",right:!1}]},{question:"Как лучше всего поступить, если в процессе переговоров ваш партнер упирает на безвыходность своей ситуации, пытаясь вызвать у вас сочувствие своим «бедственным положением»?",score:-1,status:"notanswered",type:"multi",answers:[{label:"сообщить, что вы понимаете, что партнер сознательно стремится ввести вас в заблуждение",right:!1},{label:"выразите сочувствие его ситуации",right:!0},{label:"твердо объяснить, почему не можете изменить свои условия",right:!0}]}]}]},{testId:1,caption:"final_test",type:"section",groups:[{id:2,caption:"group2",qUse:"all",questions:[{question:"Какие высказывания относятся к переговорному процессу?",score:-1,status:"notanswered",type:"multi",answers:[{label:"Я убеждаю клиента, что предлагаемый мной товар полностью соответствует его потребностям.",right:!1},{label:"Я строю презентацию продукта на основе выявленной потребности.",right:!1},{label:"Я договариваюсь с клиентом о сокращении сроков поставки на условиях 100% предоплаты. ",right:!0},{label:"Я убеждаю клиента, что цена продукта соответствует его качеству.",right:!1},{label:"Я обсуждаю с клиентом сроки сервисного обслуживания и соглашаюсь снизить цену в обмен на отказ от гарантийного обслуживания.",right:!0}]},{question:"Отметьте обязательные условия для ведения переговорного процесса (без этих условий процесс переговоров невозможен).",score:-1,status:"notanswered",type:"multi",answers:[{label:"Обе стороны заинтересованы в сделке",right:!0},{label:"Обе стороны имеют альтернативные предложения",right:!1},{label:"Обе стороны настроены на поиск взаимовыгодного решения",right:!1},{label:"Обе стороны уполномочены менять условия соглашения",right:!0},{label:"Цель одной из сторон – заставить другую сторону принять ее условия в неизменном виде",right:!1}]},{question:"Что является «золотым правилом» переговорного процесса? ",score:-1,status:"notanswered",type:"single",answers:[{label:"У вас не будет второго шанса произвести первое благоприятное впечатление.",right:!1},{label:"Не вступайте в переговоры, пока вас к этому не вынудили.",right:!0},{label:"Не «дарите» уступки: отдавайте уступку в обмен на уступку другой стороны.",right:!1},{label:"Ориентируясь на долгосрочное сотрудничество, стремитесь к взаимовыгодному решению.",right:!1}]},{question:"В каких случаях целесообразен компромисс?",score:-1,status:"notanswered",type:"single",answers:[{label:"Если ведутся переговоры по одному параметру сделки",right:!0},{label:"Если ведутся переговоры по нескольким параметрам одновременно",right:!1},{label:"В любой ситуации",right:!1},{label:"Ни при каких условиях",right:!1}]},{question:"Как лучше всего поступить, если переговоры проходят в неприятной шумной обстановке? Они прерываются телефонными звонками, приемом посетителей… Вас могут посадить на низкое кресло или лицом к свету…",score:-1,status:"notanswered",type:"single",answers:[{label:"сделать вид, что ничего страшного не происходит",right:!1},{label:"предложить изменить условия проведения переговоров",right:!0},{label:"высказать свою неудовлетворенность",right:!1},{label:"прекратить переговоры",right:!1}]},{question:"Какой из этапов переговорного процесса в наибольшей степени определяет его успех?",score:-1,status:"notanswered",type:"single",answers:[{label:"подготовка",right:!0},{label:"начало переговоров",right:!1},{label:"изложение точек зрения и обсуждение",right:!1},{label:"поиск решения и выработка соглашения",right:!1}]},{question:"Какие  элементы подготовки к переговорам в условиях острой нехватки времени можно проигнорировать?",score:-1,status:"notanswered",type:"multi",answers:[{label:"Формулирование моих целей и интересов («я их и так знаю»)",right:!1},{label:"Анализ предполагаемых целей другой стороны («их можно выявить в начале переговоров»)",right:!1},{label:"Составление различных вариантов соглашения («в ходе переговоров их предложит другая сторона, и я их проанализирую»)",right:!1},{label:"Закупка шампанского и сувениров в честь удачно подписанного соглашения («это успеется»)",right:!0},{label:"Подбор фактов, подтверждающих легитимность моих заявлений («они и так всем известны»)",right:!1},{label:"Подготовка НАОС («если переговоры закончатся провалом, тогда и буду думать, что делать дальше»)",right:!1},{label:"Проект будущего договора с банковскими реквизитами сторон",right:!0}]},{question:"Положительная область обсуждения на переговорах возникает в том случае, когда:",score:-1,status:"notanswered",type:"single",answers:[{label:"точка сопротивления продавца находится выше точки сопротивления покупателя.",right:!1},{label:"точка сопротивления продавца находится ниже точки сопротивления покупателя.",right:!0}]},{question:"Назовите область обсуждения (или «арену переговоров»). Минимальная цена, за которую продавец готов отдать товар, составляет 170 руб. Его желаемой ценой является 210 руб. Точка сопротивления покупателя – 160 руб. Его целевая точка – 120 руб. ",score:-1,status:"notanswered",type:"single",answers:[{label:"120–210 руб.",right:!1},{label:"120–160 руб.",right:!1},{label:"120–170 руб.",right:!1},{label:"160–170 руб.",right:!1},{label:"Область обсуждения отсутствует",right:!0}]},{question:"Ваша компания производит механические узлы для металлообрабатывающих станков. В лучшие годы вам удавалось продать не более 3 тыс. комплектов различным производителям.  Благодаря значительным усилиям вам удалось получить согласие на 10-минутную встречу с руководителем крупнейшего в стране станкостроительного холдинга. Вам пришлось ждать более 20 минут в приемной, затем вас пригласили к нему в кабинет. Без должных элементов делового этикета руководитель холдинга заявляет: «Я очень занят, поэтому давайте сразу к делу. Какова ваша лучшая цена за поставку  5 тысяч комплектов узлов нашему холдингу в следующем году?» Что вы сделаете?",score:-1,status:"notanswered",type:"single",answers:[{label:"Назовете низшую цену, поскольку у вас вряд ли будет второй шанс получить такое предложение.",right:!1},{label:"Назовете высокую цену.",right:!1},{label:"Оставите свою визитку, сказав: «Пожалуйста, позвоните мне, когда у Вас будет возможность для более продолжительного обсуждения этого вопроса».",right:!1},{label:"Назовете низшую цену плюс 5%.",right:!0}]},{question:"В ходе предстоящих переговоров планируется обсудить девять вопросов, в том числе условия оплаты. Вы ожидаете, что именно по этому вопросу вам будет труднее всего найти взаимоприемлемое решение. <br/>Как вы построите переговорный процесс?",score:-1,status:"notanswered",type:"single",answers:[{label:"Начнете переговоры с обсуждения условий оплаты.",right:!1},{label:"Перенесете этот вопрос на  середину переговорного процесса.",right:!1},{label:"Будете обсуждать его последним.",right:!0}]},{question:"Закончите предложение: <br/>В процессе переговоров в ответ на требование уступки надо… ",score:-1,status:"notanswered",type:"single",answers:[{label:"Безмятежно улыбаться",right:!1},{label:"Обосновывать  вашу позицию",right:!1},{label:"Напоминать правила ведения переговорного процесса",right:!1},{label:"Выдвигать встречное требование ",right:!0}]},{question:"Обмен уступками наиболее эффективен, когда интересы сторон…",score:-1,status:"notanswered",type:"single",answers:[{label:"противоположны – максимальный выигрыш для одного партера означает максимальный проигрыш для другого.",right:!1},{label:"совпадают – максимальный выигрыш для одного партнера означает максимальный выигрыш для другого.",right:!1},{label:"разнонаправлены – выигрыши, которые могут получить партнеры по разным параметрам, значительно  отличаются.",right:!0}]},{question:"Вас поставили в известность, что стоимость предлагаемых вами услуг по разработке нового дизайна и оборудованию офиса клиента превышает выделенный на это  бюджет. Что вы сделаете?",score:-1,status:"notanswered",type:"single",answers:[{label:"Будете настаивать на этой стоимости, утверждая, что это не затраты, а инвестиции, и они себя обязательно окупятся.",right:!1},{label:"Проанализируете смету на переоборудование офиса и определите, где можно использовать более дешевые материалы.",right:!0},{label:"Выясните, каков точный размер бюджета, и согласитесь с ним, если он отличается от вашего предложения не более чем на 5-7%.",right:!1}]},{question:"Как лучше всего поступить, если партнер использует позиционное давление?",score:-1,status:"notanswered",type:"multi",answers:[{label:"разобраться в причинах возникновения спорных моментов",right:!0},{label:"сообщить, что вы считаете такое поведение партнера недопустимым",right:!1},{label:"разорвать отношения",right:!1},{label:"объяснить, почему вы не можете принять условия партнера в таком виде",right:!0}]},{question:"На этапе подготовки вы сформировали 3 варианта соглашения. Как вы поступите в ходе переговорного процесса?",score:-1,status:"notanswered",type:"single",answers:[{label:"Изложите сразу все три варианта, чтобы сэкономить время и партнер смог быстро оценить, что для него предпочтительне.",right:!1},{label:"Предложите для рассмотрения 2 варианта, а 3-й оставите «про запас».",right:!1},{label:"Будете выдвигать предложения по одном.",right:!0}]},{question:"Какую речевую технологию вы выберете на стадии выдвижения предложений (этап «Поиск решения»)?",score:-1,status:"notanswered",type:"single",answers:[{label:"«Мы сможем вам поставить оборудование в течение 5 рабочих дней»",right:!1},{label:"«Если вы оплатите завтра, то мы, вероятно, сможем поставить оборудование в течение 5 рабочих дней»",right:!0},{label:"«Мы сможем вам поставить оборудование в течение 5 рабочих дней, если вы оплатите завтра»",right:!1}]},{question:"Вы ожидали, что партнер назовет цену 20 долларов за единицу продукции. Однако он сразу же сделал вам очень выгодное предложение – 15 долларов. Как будет правильно?",score:-1,status:"notanswered",type:"single",answers:[{label:"Согласиться с этой ценой ",right:!1},{label:"Не принимать это предложение",right:!0}]},{question:"Как лучше всего поступить, если есть вероятность, что партнер не собирается выполнять взятые на себя обязательства?",score:-1,status:"notanswered",type:"multi",answers:[{label:"отказаться от сотрудничества с данным партнером",right:!1},{label:"перенести подписание контракта «до лучших времен» ",right:!1},{label:"перед тем как подписать договор, четко сформулировать, что произойдет, если одна из сторон его не выполнит",right:!0},{label:"занести в договор штрафные санкции за невыполнение взятых на себя обязательства",right:!0}]}]}]}]},manifest=["img/01-01.png"];!function(){function t(t,e,s){t.state("page",{url:"/chapter/:chapter/page/:page",views:{header:{templateUrl:"js/components/header/headerTmpl.html",controller:"HeaderCtrl",controllerAs:"$ctrl"},content:{templateUrl:function(t){return"pages/"+s.chapters[t.chapter-1].chapter_location+"/"+s.chapters[t.chapter-1].pages[t.page-1].location+"/index.html"},controller:"PageCtrl",controllerAs:"$ctrl"},footer:{templateUrl:"js/components/footer/footerTmpl.html",controller:"FooterCtrl",controllerAs:"$ctrl"}}})}function e(t,e,s,a,i,r,o,n){var l=function(){l=new createjs.LoadQueue(!1),l.on("fileload",u,this),l.on("progress",c,this),l.on("complete",p,this),l.on("error",h,this),l.loadManifest(manifest)},u=function(){},c=function(){},p=function(){t.go("page",{chapter:o.bookmark.chapter,page:o.bookmark.chapterPage})},h=function(t){};if(l(),r.setAPIVersion("1.2"),r.doLMSInitialize(),r.LMSIsInitialized()){console.info("<:: Load from LMS ::>");var d=r.doLMSGetValue("cmi.completion_status");console.info("Course completion status » "+d),"not attempted"===d&&r.doLMSSetValue("cmi.suspend_data","");var g=r.doLMSGetValue("cmi.suspend_data").replace(/\*\#/g,"[").replace(/\#\*/g,"]"),m=r.doLMSGetValue("cmi.core.score.raw");if(console.log("%c LMS score -> ","color:#C0FFEE;",m),o.testScore=m,console.log("%c courseInfo testScore -> ","color:#BADA55;",o.testScore),g.length>0)try{o=JSON.parse(g),window.bookmark=o.bookmark,window.bookmark.loaded=!1,window.exercises=o.exercises,window.exercises.loaded=!1,i.loadExs(o.exercises),i.loadNotes(o.notes)}catch(t){console.error("Что-то пошло не так... \n",t)}console.info("main:: courseInfo",o)}e.$on("$stateChangeStart",function(t,e,s,r){a.stopAudio(!0),a.setAudioTime(0),a.setBookmark(Number(s.page),Number(s.chapter)),i.sendToLMS()}),e.$on("$stateChangeSuccess",function(t,e,i,r,o,n){s(function(){a.stopAudio(!1)},100)})}t.$inject=["$stateProvider","$urlRouterProvider","courseDataObj"],e.$inject=["$state","$rootScope","$timeout","staticService","userService","scormWrapper","courseInfo","courseDataObj"],angular.module("courseApp",["ui.router","ngAnimate","ngSanitize","vjs.video"]).constant("courseDataObj",courseStructure).constant("testDataObj",testStructure).constant("courseInfo",{bookmark:{page:1,chapterPage:1,chapter:1},exercises:[],notes:[],testScore:0}).directive("compile",["$compile",function(t){return function(e,s,a){e.$watch(function(t){return t.$eval(a.compile)},function(a){s.html(a),t(s.contents())(e)})}}]).config(t).run(e)}(),function(){function t(){var t="Auto",e=!1,s=["Auto","1.2","2004"];this.setAPIVersion=function(e){e=e||"Auto",console.log("set SCORM ver:",e);var a=s.indexOf(e.toString());return a>-1?t=s[a]:console.log("Not found, default to Auto"),t},this.getAPIVersion=function(){return t},this.isAvailable=function(){return!0},this.doLMSInitialize=function(){return this.cmiBooleanToJs(this.getAPICall("LMSInitialize","Initialize")(""))},this.doLMSFinish=function(){return this.cmiBooleanToJs(this.getAPICall("LMSFinish","Terminate")(""))},this.doLMSGetValue=function(t){return this.getAPICall("LMSGetValue","GetValue")(t)},this.doLMSSetValue=function(t,e){return this.cmiBooleanToJs(this.getAPICall("LMSSetValue","SetValue")(t,e))},this.doLMSCommit=function(){return this.cmiBooleanToJs(this.getAPICall("LMSCommit","Commit")(""))},this.doLMSGetLastError=function(){return this.getAPICall("LMSGetLastError","GetLastError")()},this.doLMSGetErrorString=function(t){return this.getAPICall("LMSGetErrorString","GetErrorString")(t.toString())},this.doLMSGetDiagnostic=function(t){return this.getAPICall("LMSGetDiagnostic","GetDiagnostic")(t.toString())},this.LMSIsInitialized=function(){return e},this.ErrorHandler=function(){return this.getAPICall("LMSGetLastError","GetLastError")()},this.cmiBooleanToJs=function(t){return"1"===t||1===t||"true"===t||!0===t},this.getAPIHandle=function(){var t=window;t.parent&&t.parent!=t&&this.findAPI(t.parent),!e&&t.top.opener?this.findAPI(t.top.opener):e||console.log("Unable to find API adapter")},this.findAPI=function(s){var a=0;for(a;a<500;a++){if(s.API&&("1.2"===t||"Auto"===t)){e=s.API,t="1.2";break}if(s.API_1484_11&&("2004"===t||"Auto"===t)){e=s.API_1484_11,t="2004";break}s.parent&&s.parent!=s&&(a++,s=s.parent)}},this.getAPICall=function(s,a){if(!e&&(this.getAPIHandle(),!e))return function(){console.log("No API found, can't execute: "+s+" or "+a)};switch(t){case"2004":return function(){return e[a].apply(e,arguments)};case"1.2":return function(){return e[s].apply(e,arguments)}}}}angular.module("courseApp").service("scormWrapper",t)}(),function(){function t(t,e,s){var a=this,i=arguments,r={menu:{state:!1},stats:{state:!1},about:{state:!1},notes:{state:!1},help:{state:!1},exercise:{state:!1},video:{state:!1},cloak:{state:!1},addInfo:{state:!1}};this.getModalState=function(t){return r[t].state},this.showModal=function(t,e,s,i,o){r[t].state?r[t].state=!1:(a.closeModals(),"exercise"==t&&(document.getElementsByClassName("modal_head")[0].innerHTML=e,document.getElementsByClassName("modal_body")[0].innerHTML=s,"final"!=o&&(document.getElementById("pie-chart").style.display="none"),r.exercise.content=s,r.exercise.answer=i,r.exercise.heading=e),r[t].state=!0,r.cloak.state=!0)},this.closeModals=function(t){for(var e in r){if("video"==e&&1==r[e].state){var s=document.querySelector(".my-home-video");videojs(s).dispose()}r[e].state=!1}},this.getCourseName=function(){return{course:t.course,description:t.description}},this.getChapterObj=function(e){return t.chapters[e]},this.getChaptersTotal=function(){return t.chapters},this.getPageTotal=function(){for(var e=0,s=0;s<t.chapters.length;s++)e+=t.chapters[s].pages.length;return e},this.getBookmark=function(){return e.bookmark},this.setBookmark=function(s,a){if(console.warn("staticService:: try to setBookmark:",s,a),e.bookmark.chapterPage=s,e.bookmark.chapter=a,1==a)e.bookmark.page=s;else{for(var i=0,r=0;r<a-1;r++)i+=t.chapters[r].pages.length;e.bookmark.page=i+s}console.log("staticService:: setBookmark ChP: %d, Ch: %d, Page: %d",s,a,e.bookmark.page)},this.getData=function(e,s){return"data"==s?t.chapters[e.chapter-1].pages[e.page-1].data:t.chapters[e.chapter-1].pages[e.page-1].data[s]},this.getTitle=function(e){return t.chapters[e.chapter-1].pages[e.page-1].title},this.getMessage=function(e,s){return t.chapters[e.chapter-1].pages[e.page-1].messages[s]},this.setMarkerNote=function(e,s,a){return t.chapters[e.chapter-1].pages[e.page-1].data.questionList[s].marker=a};var o=0,n=!1;this.setAudioTime=function(t){o=t},this.getAudioTime=function(){return o},this.stopAudio=function(t){n=t},this.getStopAudio=function(){return n};var l=!1;this.startAudio=function(t){if(0===i.length)return l;l=t},this.addInfo=function(t,e,s){document.getElementsByClassName("modal__content_add-info")[0].innerHTML=t,r.addInfo.content=t,r.addInfo.state=e,r.addInfo.heading=s,r.cloak.state=!0},this.getAddInfo=function(){return r.addInfo},this.getExercise=function(){return r.exercise},$(s).keydown(function(t){9==t.keyCode&&console.warn(r.exercise)})}t.$inject=["courseDataObj","courseInfo","$document"],angular.module("courseApp").service("staticService",t)}(),function(){function t(t,e,s,a,i){var r=this;t.chapters.map(function(t){return{id:t.id,visited:1,completed:!1,pages:t.pages.map(function(t,e){return{id:t.id,type:t.type,title:t.title,visited:0===e,completed:""}})}});this.exs=[],this.notes=[],this.notes1=[],this.complex_ex1=[],this.start_date||(this.start_date=new Date),t.chapters.forEach(function(t,e){t.pages.map(function(t,s){if("exercise"==t.type&&r.exs.push({id:t.page_id,chapter_id:e,page_id:s,score:0,status:-1,title:t.title}),"note_page"==t.type){for(var a=[],i=0;i<t.data.task_fields;i++)a.push({id:i,text:""});r.notes.push({id:t.page_id,chapter_id:e,page_id:s,note_type:t.typeNote,title:t.title,fields_num:t.data.task_fields,fields:a})}if("note_exercise"==t.type){r.exs.push({id:t.page_id,chapter_id:e,page_id:s,score:0,status:-1,title:t.title});for(var o=[],n=0;n<t.data.task_fields;n++)o.push({id:n,text:""});r.notes1.push({id:t.page_id,chapter_id:e,page_id:s,note_type:t.typeNote,title:t.title,fields_num:t.data.task_fields,fields:o})}})}),this.ConvertMilliSecondsIntoSCORM2004Time=function(t){var e,s,a,i,r,o,n,l="";return e=Math.floor(t/10),n=Math.floor(e/315576e4),e-=315576e4*n,o=Math.floor(e/26298e4),e-=26298e4*o,r=Math.floor(e/864e4),e-=864e4*r,i=Math.floor(e/36e4),e-=36e4*i,a=Math.floor(e/6e3),e-=6e3*a,s=Math.floor(e/100),e-=100*s,n>0&&(l+=n+"Y"),o>0&&(l+=o+"M"),r>0&&(l+=r+"D"),e+s+a+i>0&&(l+="T",i>0&&(l+=i+"H"),a>0&&(l+=a+"M"),e+s>0&&(l+=s,e>0&&(l+="."+e),l+="S")),""==l&&(l="0S"),l="P"+l},this.loadExs=function(t){0!=t.length&&(r.exs=t),i.exercises=JSON.parse(JSON.stringify(r.exs))},this.loadNotes=function(t){console.log("load saved notes!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:",t),0!=t.length&&(r.notes=t),i.notes=JSON.parse(JSON.stringify(r.notes))},this.loadNotes1=function(t){console.log("load saved notes!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!:",t),0!=t.length&&(r.notes=t),i.notes1=JSON.parse(JSON.stringify(r.notes))},this.currentTestQuestion={},this.setCurrentTestQuestion=function(t,e){r.currentTestQuestion.question=t,r.currentTestQuestion.answers=e},this.getExs=function(){return r.exs},this.getPageType=function(e,s){return"test"==t.chapters[e].pages[s].type},this.getPageVisit=function(){},this.setPageVisit=function(t,e){},this.setUserProgress=function(t,e,s,a){r.exs.forEach(function(i){i.chapter_id==s&&i.page_id==a&&(i.score=t,i.status=e,console.log("userService:: setUserProgress----------------------------------------------:",i.score,i.status,s,a))}),i.exercises=JSON.parse(JSON.stringify(r.exs)),r.sendToLMS()},this.getUserNotes=function(){return r.notes},this.getUserNotes1=function(){return r.notes1},this.setUserNotes=function(t,e,s){console.log("userService:: setNotes-------------------------------------------------------:",t,e,s),r.notes.forEach(function(a){a.chapter_id==e&&a.page_id==s&&(a=t)}),console.log("this.notes-------------------------------------------------------:",r.notes),i.notes=JSON.parse(JSON.stringify(r.notes)),console.warn("courseInfo.notes",i.notes),r.sendToLMS()},this.sendToLMS=function(){var t;t=new Date-r.start_date,t=r.ConvertMilliSecondsIntoSCORM2004Time(t),r.dataCourse=i,r.dataCourse.exercises.forEach(function(t){delete t.title}),r.dataCourse.notes.forEach(function(t){delete t.title});var e=JSON.stringify(r.dataCourse,function(t,e){if("$$hashKey"!==t)return e}).replace(/\[/g,"*#").replace(/\]/g,"#*");console.info("sendToLMS suspendData: ",e),console.info("sendToLMS suspendData.length: ",e.length),console.warn("Put => session_time: "+t),a.doLMSSetValue("cmi.suspend_data",e),a.doLMSSetValue("cmi.session_time",t),a.doLMSSetValue("cmi.core.session_time",t),a.doLMSSetValue("cmi.core.score.raw",i.testScore),i.testScore>=60?a.doLMSSetValue("cmi.core.lesson_status","completed"):a.doLMSSetValue("cmi.core.lesson_status","incomplete"),a.doLMSCommit()},$(s).keydown(function(e){9==e.keyCode&&(console.warn(t),console.warn(i),console.warn(r.exs),console.warn(window.window))}),window.onbeforeunload=function(t){a.doLMSSetValue("cmi.exit","suspend");var t=t||window.event;a.doLMSFinish()},this.closeCourse=function(){a.doLMSSetValue("cmi.exit","suspend"),r.sendToLMS(),a.doLMSFinish(),confirm("Вы уверены, что хотите закончить прохождение курса?")&&(document.getElementsByClassName("course-wrapper")[0].innerHTML='<p class="close-msg">Работа с модулем курса завершена.</p>')}}t.$inject=["courseDataObj","testDataObj","$document","scormWrapper","courseInfo"],angular.module("courseApp").service("userService",t)}(),function(){function t(t,e,s,a,i){}t.$inject=["$http","$sce","$stateParams","staticService","userService"],angular.module("courseApp").controller("CourseCtrl",t)}(),function(){function t(t,e,s,a){this.tabNum=1,s.getModalState=function(t){return e.getModalState(t)},s.closeModals=function(){return e.closeModals()},this.time=function(){return e.getAudioTime()}}t.$inject=["$document","staticService","$scope","courseInfo"],angular.module("courseApp").controller("PageCtrl",t)}(),function(){function t(t,e,s){var a=this,i=[];a.addPanel=function(t){return console.warn("arguments.length: ",arguments.length),0===arguments.length?(console.warn("panels(if (arguments.length === 0)): ",i),{index:i.length-1,firstOpen:s.firstOpen}):(i.push(t),console.warn("panels(panels.push(panel);): ",arguments.length),"true"!==s.firstOpen||t!==i[0])},a.selectPanel=function(t,e){for(var s in i)t===i[s]&&e?i[s].turnOn():i[s].turnOff()}}function e(t,e,s,a){var i=this;t.isCollapsed=!0,i.hintShow=0!==$(s).index()&&1!==$(s).index()&&"visited",e(function(){i.hintShow=!1===i.hintShow||i.hintShow},1e4),i.$onInit=function(){var e={};t.isCollapsed=i.parent.addPanel(i),e=i.parent.addPanel(),"true"===e.firstOpen&&1===e.index?i.hintShow=!1:"false"===e.firstOpen&&0===e.index?i.hintShow=!1:i.hintShow="visited"},i.turnOn=function(){t.isCollapsed=!1},i.turnOff=function(){t.isCollapsed=!0},t.toggle=function(){i.hintShow="visited",i.parent.selectPanel(i,t.isCollapsed)}}function s(t,e,s,a){function i(){var t=r();o.style.height="auto";var e=r();return o.style.height=t,r(),e}function r(){return o.offsetHeight}var o=s[0],n=0;e.$watch(a.collapse,function(t){var e=t?0:1;if(1===e){if(0!==n)return o.style.height=i()+"px";n=1,function(t){setTimeout(function(){return o.style.height=i()+"px"},460)}()}return o.style.height=e+"px"})}t.$inject=["$scope","$element","$attrs"],e.$inject=["$scope","$timeout","$element","$attrs"],s.$inject=["$document","$scope","$element","$attrs"],angular.module("courseApp").component("accordion",{transclude:!0,template:'<div class="accordion" ng-transclude></div>',controller:"AccordionCtrl",controllerAs:"$ctrl"}).controller("AccordionCtrl",t).component("accordionPanel",{require:{parent:"^accordion"},bindings:{heading:"@"},transclude:!0,templateUrl:"js/components/accordion/accordionPanelTmpl.html",controller:"AccordionPanelCtrl",controllerAs:"$ctrl"}).controller("AccordionPanelCtrl",e).controller("AccordionContentCtrl",s)}(),function(){function t(t,e,s){this.getAddInfo=function(){console.warn(document.querySelectorAll("ng-transclude")),s.addInfo(t.find("ng-transclude").prop("innerHTML"),!0,e.heading)}}t.$inject=["$element","$attrs","staticService"],angular.module("courseApp").component("addInfo",{bindings:{heading:"@"},transclude:!0,templateUrl:"./js/components/add-info/addInfoTmpl.html",controller:"AddInfoCtrl",controllerAs:"$ctrl"}).controller("AddInfoCtrl",t)}(),function(){function t(t,e,s){var a=this;this.play="#play",this.mute="#unmute",this.volume=1,this.seekPos=0,this.$onInit=function(){"false"!=a.hassound&&i()};var i=function(){console.warn("customAudio:: init"),a.audio=t[0].createElement("audio"),a.audio.src="pages/"+a.chapter+"/"+a.page+"/audio/page-"+a.chapter+"-"+a.page+".mp3",a.audio.oncanplaythrough=function(){a.changePlayPause=function(){a.audio.paused?(a.audio.play(),a.play="#pause"):(a.audio.pause(),a.play="#play")},a.updateSeekSlider=function(){var t=a.audio.currentTime*(100/a.audio.duration),e=Math.floor(a.audio.currentTime/60),s=Math.floor(a.audio.currentTime-60*e),i=Math.floor(a.audio.duration/60),r=Math.floor(a.audio.duration-60*i);a.seekPos=Math.floor(t),e<10&&(e="0"+e),s<10&&(s="0"+s),i<10&&(i="0"+i),r<10&&(r="0"+r),a.curTime=e+":"+s,a.durTime=i+":"+r,a.audio.currentTime===a.audio.duration&&(a.play="#play")},a.changeSeekPos=function(){a.audio.currentTime=a.audio.duration*(a.seekPos/100)},e(function(){if(a.audio)return a.updateSeekSlider(),s.setAudioTime(a.audio.currentTime),s.getStopAudio()?(a.audio.pause(),void(a.audio=null)):void 0},100),a.changeMuteState=function(){a.mute="#unmute",a.audio.muted?(a.audio.muted=!1,a.mute="#unmute"):(a.audio.muted=!0,a.mute="#mute")},a.changeVolume=function(){a.audio.volume=a.volume},a.restart=function(){a.audio.currentTime=0,a.audio.play(),a.play="#pause"}}}}t.$inject=["$document","$interval","staticService"],angular.module("courseApp").component("customAudio",{bindings:{chapter:"@",page:"@",hassound:"@"},templateUrl:"js/components/custom-audio/customAudioTmpl.html",controller:"CustomAudioCtrl",controllerAs:"$ctrl"}).controller("CustomAudioCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.play="#play",this.mute="#unmute",this.volume=1,this.seekPos=0,this.$onInit=function(){"false"!=i.hasSound&&r()};var r=function(){console.warn("customAudio:: init"),i.audio=e[0].createElement("audio"),i.audio.src=i.src,console.log("SRC ",i.audio.src),i.audio.autoplay=!1,i.audio.oncanplaythrough=function(){i.changePlayPause=function(){i.audio.paused?(i.audio.play(),i.play="#pause"):(i.audio.pause(),i.play="#play")},s(function(){if(i.audio)return a.setAudioTime(i.audio.currentTime),a.getStopAudio()?(i.audio.pause(),void(i.audio=null)):void 0},100)}}}t.$inject=["$attrs","$document","$interval","staticService"],angular.module("courseApp").component("customMiniAudio",{bindings:{chapter:"@",page:"@",hasSound:"@",src:"@"},templateUrl:"js/components/custom-mini-audio/customMiniAudioTmpl.html",controller:"CustomMiniAudioCtrl",controllerAs:"$ctrl"}).controller("CustomMiniAudioCtrl",t)}(),function(){function t(t,e,s){var a=this;a.play="play",a.mute="unmute",a.volume=1,a.seekPos=0,a.$onInit=function(){var s=$(t).find(".custom-video__video")[0];s.oncanplaythrough=function(){function t(){var t=s.currentTime*(100/s.duration),i=(Math.floor(s.currentTime/3600),Math.floor(s.currentTime/60)),r=Math.floor(s.currentTime-60*i),o=(Math.floor(s.duration/3600),Math.floor(s.duration/60)),n=Math.floor(s.duration-60*o);a.seekPos=Math.floor(t),s.currentTime===s.duration&&(a.play="play"),i<10&&(i="0"+i||"00"),r<10&&(r="0"+r||"00"),o<10&&(o="0"+o||"00"),n<10&&(n="0"+n||"00"),e(function(){a.curtimetext=i+":"+r,a.durtimetext=o+":"+n})}console.log("here"),$(s).on("timeupdate",t),t(),a.changePlayPause=function(){s.paused?(s.play(),a.play="pause"):(s.pause(),a.play="play")},a.changeSeekPos=function(){s.currentTime=s.duration*(a.seekPos/100)},a.changeMuteState=function(){s.muted?(s.muted=!1,a.mute="unmute"):(s.muted=!0,a.mute="mute")},a.changeVolume=function(){s.volume=a.volume}}}}t.$inject=["$document","$timeout","staticService"],angular.module("courseApp").component("customVideo",{bindings:{src:"@"},templateUrl:"js/components/custom-video/customVideoTmpl.html",controller:"CustomVideoCtrl",controllerAs:"$ctrl"}).controller("CustomVideoCtrl",t)}(),function(){function t(t,e,s,a,i,r,o,n){var l=this,u=-1;1==a.chapter?u=0:6==a.chapter&&(u=1),this.questionList=_.shuffle(JSON.parse(JSON.stringify(i.tests[u].groups[0].questions))),this.currentQuest=0,this.startTest=0,this.state=0,t.$on("myTestState",function(t,e){l.state=e}),this.testScore=0,this.testRight=0,this.testTask=document.getElementsByClassName("test-task")[0],this.buildQuestion=function(){l.questionList[l.currentQuest].answers=_.shuffle(l.questionList[l.currentQuest].answers),o.setCurrentTestQuestion(l.questionList[l.currentQuest].question,l.questionList[l.currentQuest].answers);var e="";switch(l.questionList[l.currentQuest].type){case"single":e='<task-single-choice test="true"></task-single-choice>';break;case"multi":e='<task-multi-choice test="true"></task-multi-choice>'}l.testTask.appendChild(s(e)(t)[0])},this.nextQuestion=function(t){t.target.classList.contains("btn_disabled")||(l.checkAnswer(),l.currentQuest++,l.currentQuest<l.questionList.length?(l.state=0,l.testTask.innerHTML="",l.buildQuestion()):(l.state=2,l.startTest=1,l.currentQuest--,n.testScore=Math.round(l.testScore/l.questionList.length),n.testRight=l.testRight,o.sendToLMS(),n.testScore<75?l.chartTitle="Тест не пройден.":l.chartTitle="Тест пройден!",console.log("this.chartTitle",l.chartTitle),Chart.defaults.global.defaultFontFamily="Arial",Chart.defaults.global.defaultFontSize=22,Chart.defaults.global.defaultFontColor="#000",r.showModal("exercise",r.getTitle(a),l.chartTitle,"","final"),new Chart(document.getElementById("pie-chart"),{type:"pie",data:{labels:["Правильных ответов","Неправильных ответов"],datasets:[{label:"",backgroundColor:["#c5edff","#fe9f39"],data:[n.testRight,l.questionList.length-n.testRight]}]},options:{legend:{labels:{}},plugins:{fillter:{propagate:!1}},title:{display:!0,text:"Ваш результат – "+n.testScore+" %"}}})))},this.checkAnswer=function(){for(var t=document.getElementsByClassName("task-question"),e=0;e<t.length;e++){if(l.questionList[l.currentQuest].answers[e].right!==t[e].classList.contains("radio-selected"))return}l.testScore+=100,l.testRight+=1},this.removeRestart=function(){l.startTest=0,l.state=0,l.testScore=0,l.testRight=0,l.currentQuest=0,l.questionList=_.shuffle(JSON.parse(JSON.stringify(i.tests[u].groups[0].questions))),l.testTask.innerHTML="",l.buildQuestion()},angular.element(document).ready(function(){l.buildQuestion()})}t.$inject=["$scope","$state","$compile","$stateParams","testDataObj","staticService","userService","courseInfo"],
angular.module("courseApp").component("finalTest",{templateUrl:"js/components/final-test/finalTestTmpl.html",controller:"TestCtrl",controllerAs:"$ctrl"}).controller("TestCtrl",t)}(),function(){function t(t,e,s,a,i,r){var o=this;window.bookmark&&!window.bookmark.loaded?(window.bookmark.loaded=!0,document.getElementsByClassName("paginator")[0].innerHTML=window.bookmark.page+" / "+s.getPageTotal(),s.setBookmark(window.bookmark.chapterPage,window.bookmark.chapter)):document.getElementsByClassName("paginator")[0].innerHTML=i.bookmark.page+" / "+s.getPageTotal(),this.bookmark=s.getBookmark(),this.coursePage=document.querySelector(".page-wrapper"),this.curChapterNum=Number(e.chapter),this.curPageNum=Number(e.page),this.pageAmountTotal=""+s.getPageTotal(),this.pageAmountChapter=s.getChapterObj(this.curChapterNum-1).pages.length;var n=r.chapters[this.curChapterNum-1];this.chapterLocation=n.chapter_location,this.pageLocation=n.pages[this.curPageNum-1].location,this.pageHasSound=n.pages[this.curPageNum-1].hasSound,console.warn("FooterCtrl:: locs: %s, %s, sound: %s",this.chapterLocation,this.pageLocation,this.pageHasSound),this.toBack=function(){1==o.curChapterNum&&1==o.curPageNum||(1==o.curPageNum?(o.curPageNum=s.getChapterObj(o.curChapterNum-2).pages.length,o.curChapterNum--):o.curPageNum--,s.setBookmark(o.curPageNum,o.curChapterNum),o.coursePage.classList.add("backward"),t.go("page",{chapter:o.curChapterNum,page:o.curPageNum}))},this.toForward=function(){o.curChapterNum==s.getChaptersTotal().length&&o.curPageNum==o.pageAmountChapter||(o.curPageNum==o.pageAmountChapter?(o.curChapterNum++,o.curPageNum=1):o.curPageNum++,s.setBookmark(o.curPageNum,o.curChapterNum),a.setPageVisit(o.curChapterNum-1,o.curPageNum),o.coursePage.classList.remove("backward"),t.go("page",{chapter:o.curChapterNum,page:o.curPageNum}))},this.toggleAbout=function(){},this.toggleHelp=function(){}}t.$inject=["$state","$stateParams","staticService","userService","courseInfo","courseDataObj"],angular.module("courseApp").controller("FooterCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.chapters=s.getChaptersTotal(),this.exercises=a.exs,this.getExs=function(){return a.getExs()},this.getPageType=function(){return a.getPageType(Number(e.chapter)-1,Number(e.page)-1)},this.getNotes=function(){return a.getUserNotes()},this.countExs=function(){return a.getExs().length},this.countDoneExs=function(){var t=a.getExs(),e=0;return t.forEach(function(t,s,a){1==t.status&&e++}),e},this.addInfo=function(){return s.getAddInfo()},this.exerciseData=function(){return s.getExercise()},this.title={course:s.getCourseName().course,chapter:s.getChapterObj(Number(e.chapter)-1).title,exercise:this.chapters[Number(e.chapter)-1].pages[Number(e.page)-1].title},this.getModalState=function(t){return s.getModalState(t)},this.menuPagesCounter=1,this.countPages=function(){return i.menuPagesCounter++},this.coursePage=document.querySelector(".page-wrapper"),this.goFromMenu=function(a,r){console.log("HeaderCtrl:: goFromMenu, page: %d, chapter: %d, SP: %s, SC: %s",a.page_id,r.chapter_id,e.page,e.chapter),r.chapter_id>Number(e.chapter)?i.coursePage.classList.remove("backward"):r.chapter_id==Number(e.chapter)&&a.page_id>Number(e.page)?i.coursePage.classList.remove("backward"):i.coursePage.classList.add("backward"),t.go("page",{chapter:r.chapter_id,page:a.page_id}),s.closeModals()},this.getCurrent=function(){return s.getBookmark().page},this.toggleMenu=function(){s.showModal("menu"),scrollMenu()},this.scrollMenu=function(){i.curChapterNum=Number(e.chapter),i.curPageNum=Number(e.page);var t=document.querySelector("#page_"+i.curChapterNum+"_"+i.curPageNum),s=document.querySelector(".modal_nav-menu");setTimeout(function(){s.scrollTop=t.offsetTop-300},30)},this.toggleStat=function(){s.showModal("stats")},this.toggleModal=function(t){s.showModal(t)},this.closeModals=function(){s.closeModals()},this.closeCourse=function(){a.closeCourse()},this.curChapterNum=Number(e.chapter),this.curPageNum=Number(e.page),this.coursePage=document.querySelector(".page-wrapper"),this.pageAmountChapter=s.getChapterObj(this.curChapterNum-1).pages.length,this.toForward=function(e){e&&(i.curChapterNum==s.getChaptersTotal().length&&i.curPageNum==i.pageAmountChapter||(i.curPageNum==i.pageAmountChapter?(i.curChapterNum++,i.curPageNum=1):i.curPageNum++,s.setBookmark(i.curPageNum,i.curChapterNum),a.setPageVisit(i.curChapterNum-1,i.curPageNum),i.coursePage.classList.remove("backward"),t.go("page",{chapter:i.curChapterNum,page:i.curPageNum})))}}t.$inject=["$state","$stateParams","staticService","userService"],angular.module("courseApp").controller("HeaderCtrl",t)}(),function(){function t(t,e,s){}t.$inject=["$element","$attrs","userService"],angular.module("courseApp").component("makeLine",{bindigs:{lineTo:"@"},controller:"LeaderLineCtrl"}).controller("LeaderLineCtrl",t)}(),function(){function t(t){var e=this;this.openVideo=function(){var s=document.querySelector(".modal_video__body"),a='<video class="video-js vjs-default-skin video-element my-home-video" controls preload="auto"\n                               width="'+e.videowidth+'" height="'+e.videoheight+'" poster="'+e.videoposter+'" vjs-video>\n                            <source src="'+e.videourl+'" type="video/mp4">\n                            <track enabled kind="captions" src="'+e.suburl+'" srclang="ru" label="Russian Subtitles" default />\n                        </video>';t.showModal("video"),s.innerHTML=a}}t.$inject=["staticService"],angular.module("courseApp").component("pageVideo",{bindings:{videourl:"@",videoposter:"@",suburl:"@",videowidth:"@",videoheight:"@"},templateUrl:"js/components/page-video/pageVideoTmpl.html",controller:"pageVideoCtrl",controllerAs:"$ctrl"}).controller("pageVideoCtrl",t)}(),function(){function t(t){var e=this;this.currentScreen=0,this.nextScreen=function(){e.currentScreen=e.currentScreen+1,console.log(e.currentScreen)},this.previousScreen=function(){e.currentScreen=e.currentScreen-1}}t.$inject=["$scope"],angular.module("courseApp").component("screens",{templateUrl:"js/components/screens/screensTmpl.html",controller:"ScreensCtrl",controllerAs:"$ctrl"}).controller("ScreensCtrl",t)}(),function(){function t(){}function e(t,e,s,a,i){this.items=[]}e.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("tabs",{transclude:!0,templateUrl:"js/components/tabs/tabsTmpl.html",controller:"TabsCtrl",controllerAs:"$ctrl"}).controller("TabsCtrl",t).component("tabsItem",{require:{parent:"^tabs"},bindings:{item:"="},transclude:!0,templateUrl:"js/components/tabs/tabsTmpl.html",controller:"TabsItemCtrl",controllerAs:"$ctrl"}).controller("TabsItemCtrl",e)}(),function(){function t(t,e,s,a,i){var r=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.state=0,this.test?(this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle&&this.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),r.active[e]=t.questionList.map(function(t,e){return{selected:0}})})),this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(e,s){if(2!=r.state){switch(r.taskExs[e].taskType){case"multi":!function(t){t.selected=!t.selected}(r.active[e][s]);break;case"single":!function(t){t.forEach(function(t){t.selected=!1}),t[s].selected=!0}(r.active[e])}for(var a=0,i=!1,o=0;o<r.active.length;o++){for(var n=0;n<r.active[o].length;n++)r.active[o][n].selected&&(i=!0);i&&(a++,i=!1)}a==r.active.length?(r.test&&t.$emit("myTestState",1),r.state=1):(r.test&&t.$emit("myTestState",0),r.state=0)}},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var o=0;o<r.taskExs.length;o++)for(var n=r.taskExs[o].questionList,l=0;l<n.length;l++)if(n[l].right!=r.active[o][l].selected)return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){r.state=0,r.taskOptions.shuffle&&r.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),r.active[e]=t.questionList.map(function(t,e){return{selected:0}})})};var s=function(){for(var t=0;t<r.taskExs.length;t++)for(var e=0;e<r.taskExs[t].questionList.length;e++)r.active[t][e].selected=r.taskExs[t].questionList[e].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskComboChoice",{templateUrl:"js/components/task-combo-choice/taskComboChoiceTmpl.html",controller:"ComboChoiceCtrl",controllerAs:"$ctrl"}).controller("ComboChoiceCtrl",t)}(),function(){function t(){return function(t,e){var s=e[0];s.draggable=!0,s.addEventListener("dragstart",function(t){return t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("Text",this.id),this.classList.add("drag"),!1},!1),s.addEventListener("dragend",function(t){return this.classList.remove("drag"),!1},!1)}}function e(){return function(t,e){var s=e[0];s.addEventListener("dragover",function(t){return t.dataTransfer.dropEffect="move",t.preventDefault(),this.classList.add("over"),!1},!1),s.addEventListener("dragenter",function(t){return this.classList.add("over"),!1},!1),s.addEventListener("dragleave",function(t){return this.classList.remove("over"),!1},!1),s.addEventListener("drop",function(t){var e=document.getElementsByClassName("task__drag-container")[0];this.classList.remove("over"),this.firstChild&&e.appendChild(this.firstChild);var s=document.getElementById(t.dataTransfer.getData("Text"));return this.appendChild(s),t.preventDefault(),!1},!1)}}function s(t,e,s,a,i){var r=this;this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.questionList,this.state=1,this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle?this.questionList=_.shuffle(a.getData(e,"questionList")):this.questionList=this.taskData.questionList,this.showRight=0,angular.element(document).ready(function(){r.checkAnswer=function(t){var s=document.getElementsByClassName("task__drop-item");r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var n=0;n<s.length;n++)if(!s[n].firstChild||s[n].firstChild&&s[n].getAttribute("order")!==s[n].firstChild.getAttribute("order"))return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&o(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}}),this.removeRestart=function(){for(var t=document.getElementsByClassName("task__drop-item"),e=0;e<t.length;e++)t[e].firstChild&&t[e].removeChild(t[e].firstChild);r.state=1,r.taskOptions.shuffle&&(r.questionList=_.shuffle(r.questionList))};var o=function(){console.log("why not?"),r.showRight=1}}s.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskDrag",{templateUrl:"js/components/task-drag/taskDragTmpl.html",controller:"taskDragCtrl",controllerAs:"$ctrl"}).directive("draggable",t).directive("droppable",e).controller("taskDragCtrl",s)}(),function(){function t(){return function(t,e){var s=e[0];s.draggable=!0,s.addEventListener("dragstart",function(t){return t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("Text",this.id),this.classList.add("drag"),!1},!1),s.addEventListener("drag",function(t){return this.style.pointerEvents="none",this.querySelector(".task__drag-item-pic").style.pointerEvents="none",this.querySelector(".image").style.pointerEvents="none",!1},!1),s.addEventListener("dragend",function(t){return this.classList.remove("drag"),this.style.pointerEvents="auto",this.querySelector(".task__drag-item-pic").style.pointerEvents="auto",this.querySelector(".image").style.pointerEvents="auto",!1},!1)}}function e(){return function(t,e){var s=e[0];s.addEventListener("dragover",function(t){return t.dataTransfer.dropEffect="move",t.preventDefault(),this.classList.add("over"),!1},!1),s.addEventListener("dragenter",function(t){return this.classList.add("over"),!1},!1),s.addEventListener("dragleave",function(t){return this.classList.remove("over"),!1},!1),s.addEventListener("drop",function(t){var e=document.getElementsByClassName("task__drag-container")[0];this.classList.remove("over"),this.firstChild&&e.appendChild(this.firstChild);var s=document.getElementById(t.dataTransfer.getData("Text"));return this.appendChild(s),t.preventDefault(),!1},!1)}}function s(t,e,s,a,i){var r=this;this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.questionList,this.state=1,this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle?this.questionList=_.shuffle(a.getData(e,"questionList")):this.questionList=this.taskData.questionList,this.showRight=0,this.projectorImage=this.taskData.questionList[0].projectorImage[1],this.projectorImageMobile=this.taskData.questionList[0].projectorImage[3],this.projectorOrder=this.taskData.questionList[0].order[1],this.rotateProjector=function(t){2===t?(r.projectorImage=r.taskData.questionList[0].projectorImage[1],r.projectorImageMobile=r.taskData.questionList[0].projectorImage[3],r.projectorOrder=r.taskData.questionList[0].order[1]):(r.projectorImage=r.taskData.questionList[0].projectorImage[0],r.projectorImageMobile=r.taskData.questionList[0].projectorImage[2],r.projectorOrder=r.taskData.questionList[0].order[0])},this.setProjectorOrder=function(t){return r.projectorOrder==t?t:-1},angular.element(document).ready(function(){r.checkAnswer=function(t){var s=document.getElementsByClassName("task__drop-item");r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var n=0;n<s.length;n++)if(!s[n].firstChild&&"-1"!==s[n].getAttribute("order")||s[n].firstChild&&s[n].getAttribute("order")!==s[n].firstChild.getAttribute("order"))return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&o(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}}),this.removeRestart=function(){for(var t=document.getElementsByClassName("task__drop-item"),e=document.getElementsByClassName("task__drag-container")[0],s=0;s<t.length;s++)t[s].firstChild&&e.appendChild(t[s].firstChild);r.state=1,r.taskOptions.shuffle&&(r.questionList=_.shuffle(r.questionList))};var o=function(){r.showRight=1}}s.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskDragAlongYax",{templateUrl:"js/components/task-drag-along-yax/taskDragAlongYaxTmpl.html",controller:"taskDragAlongYaxCtrl",controllerAs:"$ctrl"}).directive("draggable",t).directive("droppable",e).controller("taskDragAlongYaxCtrl",s)}(),function(){function t(t,u,c,p,h,d){function g(){1==r&&(e=-1),2==r&&(e=80),3==r&&(e=239),$("#drag1").animate({left:e})}function m(){4==o&&(s=0),3==o&&(s=-141),2==o&&(s=-300),$("#drag2").animate({left:s})}function f(){1==r&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),4==o&&($(".task__drop-container1").addClass("vol_bg"),$(".task__drop-container2").addClass("vol_bg")),3==o&&($(".task__drop-container1").addClass("vol_md"),$(".task__drop-container2").addClass("vol_bg")),2==o&&($(".task__drop-container1").addClass("vol_sm"),$(".task__drop-container2").addClass("vol_bg"))),1==r&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),4==o&&($(".task__drop-container1").addClass("vol_bg"),$(".task__drop-container2").addClass("vol_bg")),3==o&&($(".task__drop-container1").addClass("vol_md"),$(".task__drop-container2").addClass("vol_bg")),2==o&&($(".task__drop-container1").addClass("vol_sm"),$(".task__drop-container2").addClass("vol_bg"))),2==r&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),4==o&&($(".task__drop-container1").addClass("vol_bg"),$(".task__drop-container2").addClass("vol_md")),3==o&&($(".task__drop-container1").addClass("vol_md"),$(".task__drop-container2").addClass("vol_md"))),3==r&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),$(".task__drop-container1").addClass("vol_bg"),$(".task__drop-container2").addClass("vol_sm"))}function b(){4==o&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),1==r&&($(".task__drop-container1").addClass("vol_bg"),$(".task__drop-container2").addClass("vol_bg")),2==r&&($(".task__drop-container1").addClass("vol_bg"),$(".task__drop-container2").addClass("vol_md")),3==r&&($(".task__drop-container2").addClass("vol_sm"),$(".task__drop-container1").addClass("vol_bg"))),3==o&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),1==r&&($(".task__drop-container2").addClass("vol_bg"),$(".task__drop-container1").addClass("vol_md")),2==r&&($(".task__drop-container1").addClass("vol_md"),$(".task__drop-container2").addClass("vol_md"))),2==o&&($(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),$(".task__drop-container1").addClass("vol_sm"),$(".task__drop-container2").addClass("vol_bg"))}var v=this;this.taskData=h.getData(u,"data"),this.attemptNum=this.taskData.attempts,this.state=1,this.showRight=0,this.userAttempt=0,this.showRight=0,$("#drag1").draggable({axis:"x",containment:".task__drop-container1",snap:"#snapper0,#snapper1,#snapper2, .droppable",snapMode:"inner",snapTolerance:22,revert:n,start:function(){l=!1},stop:function(){n=!1,$("#drag1").css("top","0")}}),$("#drag2").draggable({axis:"x",containment:".task__drop-container2",snap:"#snapper1,#snapper2,#snapper3, .droppable",snapMode:"inner",snapTolerance:22,revert:n,start:function(){l=!0},stop:function(){$("#drag2").css("top","0")}}),$("#snapper0").droppable({hoverClass:"hover",drop:function(){r=1,!1===l?(a=!1,f()):b()},activate:function(){},deactivate:function(){},over:function(){},out:function(){}}),$("#snapper01").droppable({drop:function(){!1===l?g():m()}}),$("#snapper1").droppable({hoverClass:"hover",drop:function(){!1===l?(r=2,a=!0,f()):(i=!1,o=2,b())},activate:function(){},deactivate:function(){},over:function(){},out:function(){}}),$("#snapper12").droppable({drop:function(){!1===l?g():m()}}),$("#snapper2").droppable({hoverClass:"hover",drop:function(){!1===l?(a=!1,r=3,f()):(i=!0,o=3,b())},activate:function(){},deactivate:function(){},over:function(){},out:function(){}}),$("#snapper13").droppable({drop:function(){!1===l?g():m()}}),$("#snapper3").droppable({hoverClass:"hover",drop:function(){!1===l?(a=!1,r=4,f()):(i=!1,o=4,b())},activate:function(){},deactivate:function(){},over:function(){},out:function(){}}),this.removeRestart=function(){v.state=1,$(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),$(".task__drop-container").addClass("vol_bg"),a=!1,i=!1,e=0,s=0,r=1,o=4,g(),m()},angular.element(document).ready(function(){v.checkAnswer=function(e){if(v.userAttempt===v.attemptNum&&(v.userAttempt=0),v.userAttempt++,v.state=2,0==a||0==i)return v.userAttempt==v.attemptNum&&v.taskData.showAnswer&&t(),d.setUserProgress(0,0,Number(u.chapter)-1,Number(u.page)-1),void h.showModal("exercise","Ваш результат",v.taskData.messages[v.userAttempt],!1);d.setUserProgress(100,1,Number(u.chapter)-1,Number(u.page)-1),h.showModal("exercise","Ваш результат",v.taskData.messages[0],!0)};var t=function(){v.state=2,$(".task__drop-container").removeClass("vol_bg vol_md vol_sm"),$(".task__drop-container").addClass("vol_bg"),r=2,o=3,g(),m()}})}t.$inject=["$scope","$stateParams","$attrs","$document","staticService","userService"],angular.module("courseApp").component("taskDragAlongYax",{templateUrl:"js/components/task-drag-along-yax/taskDragAlongYaxTmpl.html",controller:"taskDragAlongYaxCtrl",controllerAs:"$ctrl"}).controller("taskDragAlongYaxCtrl",t);var e=0,s=0,a=!1,i=!1,r=1,o=4,n=!1,l=!1}(),function(){function t(){return function(t,e){var s=e[0];s.draggable=!0,s.addEventListener("dragstart",function(t){return t.dataTransfer.effectAllowed="move",t.dataTransfer.setData("Text",this.id),this.classList.add("drag"),!1},!1),s.addEventListener("dragend",function(t){return this.classList.remove("drag"),!1},!1)}}function e(){return function(t,e){var s=e[0];s.addEventListener("dragover",function(t){return t.dataTransfer.dropEffect="move",t.preventDefault(),this.classList.add("over"),!1},!1),s.addEventListener("dragenter",function(t){return this.classList.add("over"),!1},!1),s.addEventListener("dragleave",function(t){return this.classList.remove("over"),!1},!1),s.addEventListener("drop",function(t){var e=document.getElementsByClassName("task__drag-container")[0];this.classList.remove("over"),this.firstChild&&e.appendChild(this.firstChild);var s=document.getElementById(t.dataTransfer.getData("Text"));return this.appendChild(s),t.preventDefault(),!1},!1)}}function s(t,e,s,a,i){var r=this;this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.questionList,this.state=1,this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle?this.questionList=_.shuffle(a.getData(e,"questionList")):this.questionList=this.taskData.questionList,this.showRight=0,angular.element(document).ready(function(){r.checkAnswer=function(t){var s=document.getElementsByClassName("task__drop-item");r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var n=0;n<s.length;n++)if(!s[n].firstChild||s[n].firstChild&&s[n].getAttribute("order")!==s[n].firstChild.getAttribute("order"))return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&o(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}}),this.removeRestart=function(){for(var t=document.getElementsByClassName("task__drop-item"),e=0;e<t.length;e++)t[e].firstChild&&t[e].removeChild(t[e].firstChild);r.state=1,r.taskOptions.shuffle&&(r.questionList=_.shuffle(r.questionList))};var o=function(){console.log("why not?"),r.showRight=1}}s.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskDrag",{templateUrl:"js/components/task-drag/taskDragTmpl.html",controller:"taskDragCtrl",controllerAs:"$ctrl"}).directive("draggable",t).directive("droppable",e).controller("taskDragCtrl",s)}(),function(){function t(t,e,s,a,i){var r=this;this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options;this.state=1,this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,window.inDropItemsLimit=this.taskOptions.limits.inDropItems?this.taskOptions.limits.inDropItems:1,this.taskOptions.shuffle?this.questionList=_.shuffle(a.getData(e,"questionList")):this.questionList=this.taskData.questionList,angular.element(document).ready(function(){r.checkAnswer=function(t){var s=document.getElementsByClassName("task__drop-item");r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var n=0;n<s.length;n++)for(var l=0;l<2;l++){if(s[n].childNodes[l])var u=s[n].childNodes[l].getAttribute("order");else var u="x";var c=s[n].getAttribute("order"),p=c.indexOf(u);if(-1==p)return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&o(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1)}i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}}),this.removeRestart=function(){for(var t=document.getElementsByClassName("task__drop-item"),e=0;e<t.length;e++)for(;t[e].lastChild;)t[e].removeChild(t[e].lastChild);r.showRight=0,r.state=1,r.taskOptions.shuffle&&(r.questionList=_.shuffle(r.questionList))};var o=function(){r.showRight=1,r.state=2;for(var t=document.getElementsByClassName("task__drop-item"),e=(document.getElementsByClassName("draggable"),0);e<t.length;e++){for(;t[e].lastChild;)t[e].removeChild(t[e].lastChild);for(var s=t[e].getAttribute("order"),a=0;a<2;a++)if("x"!==s[a]){var i="img[order="+s[a]+"]",o=document.querySelector(i);t[e].appendChild(o.cloneNode())}}};angular.element(document).ready(function(){$(".draggable").draggable({connectToSortable:".sortable",helper:"clone",stop:function(t,e){this.state=1}}),$(".sortable").sortable({connectWith:".sortable",update:function(t,e){var s=window.inDropItemsLimit;document.querySelector(".over");t.target.childNodes.length>s&&(console.warn(t,e),e.item[0].parentNode.removeChild(e.item[0]))},stop:function(t,e){this.state=1},helper:"original"});for(var t=0;t<5;t++)!function(t){var e="#cond"+t,s="#conc"+t;$(e).sortable({over:function(t,s){$(e).addClass("over")},out:function(t,s){$(e).removeClass("over")}}),$(s).sortable({over:function(t,e){$(s).addClass("over")},out:function(t,e){$(s).removeClass("over")}})}(t)})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskDragTable",{templateUrl:"js/components/task-drag-table/taskDragTableTmpl.html",controller:"taskDragTableCtrl",controllerAs:"$ctrl"}).controller("taskDragTableCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.state=0,this.test?(this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle?this.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),r.active[e]=t.questionList.map(function(t,e){return{selected:0}})}):this.taskExs.forEach(function(t,e){r.active[e]=t.questionList.map(function(t,e){return{selected:0}})})),this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(e,s){if(2!=r.state){r.active[e][s].selected=!r.active[e][s].selected;for(var a=0,i=!1,o=0;o<r.active.length;o++){for(var n=0;n<r.active[o].length;n++)r.active[o][n].selected&&(i=!0);i&&(a++,i=!1)}a==r.active.length?(r.test&&t.$emit("myTestState",1),r.state=1):(r.test&&t.$emit("myTestState",0),r.state=0)}},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var o=0;o<r.taskExs.length;o++)for(var n=r.taskExs[o].questionList,l=0;l<n.length;l++)if(n[l].right!=r.active[o][l].selected)return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){r.state=0,r.taskOptions.shuffle?r.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),r.active[e]=t.questionList.map(function(t,e){return{selected:0}})}):r.taskExs.forEach(function(t,e){r.active[e]=t.questionList.map(function(t,e){return{selected:0}})})};var s=function(){for(var t=0;t<r.taskExs.length;t++)for(var e=0;e<r.taskExs[t].questionList.length;e++)r.active[t][e].selected=r.taskExs[t].questionList[e].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskManyMultiChoice",{templateUrl:"js/components/task-many-multi-choice/taskManyMultiChoiceTmpl.html",controller:"ManyMultiChoiceCtrl",controllerAs:"$ctrl"}).controller("ManyMultiChoiceCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.active=[],this.state=0,this.test?(this.attemptNum=-1,this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.attemptNum=this.taskOptions.attempts,this.taskOptions.shuffle?this.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),r.active[e]=t.questionList.map(function(){return{selected:0}})}):this.taskExs.forEach(function(t,e){r.active[e]=t.questionList.map(function(){return{selected:0}})})),this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(e,s){if(2!=r.state){if(1==r.active[e][s].selected)return a--,void(r.active[e][s].selected=!1);r.active[e].forEach(function(t){t.selected=!1}),r.active[e][s].selected=!0;for(var a=0,i=!1,o=0;o<r.active.length;o++){for(var n=0;n<r.active[o].length;n++)r.active[o][n].selected&&(i=!0);i&&(a++,i=!1)}a==r.active.length?(r.test&&t.$emit("myTestState",1),r.state=1):(r.test&&t.$emit("myTestState",0),r.state=0)}},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var o=0;o<r.taskExs.length;o++)for(var n=r.taskExs[o].questionList,l=0;l<n.length;l++)if(n[l].right!=r.active[o][l].selected)return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){r.state=0,r.taskOptions.shuffle?r.taskExs.forEach(function(t,e){t.questionList=_.shuffle(t.questionList),r.active[e]=t.questionList.map(function(t,e){return{selected:0}})}):r.taskExs.forEach(function(t,e){r.active[e]=t.questionList.map(function(t,e){return{selected:0}})})};var s=function(){for(var t=0;t<r.taskExs.length;t++)for(var e=0;e<r.taskExs[t].questionList.length;e++)r.active[t][e].selected=r.taskExs[t].questionList[e].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskManySingleChoice",{templateUrl:"js/components/task-many-single-choice/taskManySingleChoiceTmpl.html",controller:"ManySingleChoiceCtrl",controllerAs:"$ctrl"}).controller("ManySingleChoiceCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.taskData=s.getData(e,"data"),this.taskText=this.taskData.taskText,this.markers=this.taskData.markers;var r=this.taskData.qCount;if(this.taskData.qCount>this.taskData.questionList.length){this.taskData.questionList.length}if(this.taskData.shuffle){var o=angular.fromJson(angular.toJson(_.shuffle(this.taskData.questionList))),n=[];this.questionList=[];for(var l=0;l<this.markers.length;l++)for(var u=0;u<o.length;u++)if(this.markers[l].id==o[u].right){this.questionList.push(o[u]),n.push(u);break}for(var c=0;c<o.length;c++){for(var p=!1,h=0;h<n.length;h++)if(c==n[h]){p=!0;break}if(!p&&(this.questionList.push(o[c]),this.questionList.length>=r))break}this.questionList=_.shuffle(this.questionList)}else this.questionList=this.taskData.questionList;this.useVideo=s.getData(e,"useVideo"),this.videoPoster=s.getData(e,"videoPoster"),this.active=[],this.state=0,this.marker=-1,this.attemptNum=s.getData(e,"attempts"),this.userAttempt=0
;for(var d=0;d<this.questionList.length;d++)this.active[d]={},this.active[d].selected=0,this.active[d].marker=-1;angular.element(document).ready(function(){i.useVideo&&(document.getElementsByClassName("btn_task-video")[0].style.background="url("+i.videoPoster+")"),i.selectMarker=function(t){i.marker=t},i.selectAnswer=function(t,e){-1!=i.marker&&2!=i.state&&(i.active[t].selected=1,i.active[t].marker=i.marker,e.currentTarget.setAttribute("data","marker"+i.marker),i.state=1)}}),this.checkAnswer=function(t){i.userAttempt===i.attemptNum&&(i.userAttempt=0),i.userAttempt++,i.state=2;for(var r=0;r<i.questionList.length;r++)if(i.questionList[r].right!=i.active[r].marker)return 3===i.userAttempt&&g(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void s.showModal("exercise","Ваш результат",i.taskData.messages[i.userAttempt],!1);a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[0],!0)},this.removeRestart=function(){for(var t=document.getElementsByClassName("task__marker-choice-item"),e=0;e<i.active.length;e++)i.active[e].selected=!1,i.active[e].marker=-1,t[e].setAttribute("data","marker");i.state=0,i.marker=-1,i.questionList=_.shuffle(i.questionList)},this.showVideo=function(){var t=document.querySelector(".modal_video__body");i.videoUrl=s.getData(e,"videoUrl"),i.videoPoster=s.getData(e,"videoPoster"),i.videoWidth=s.getData(e,"videoWidth"),i.videoHeight=s.getData(e,"videoHeight"),s.showModal("video");var a='<video class="video-js vjs-default-skin video-element" controls preload="auto"\n                               width="'+i.videoWidth+'" height="'+i.videoHeight+'" poster="'+i.videoPoster+'" vjs-video>\n                            <source src="'+i.videoUrl+'" type="video/mp4">\n                        </video>';t.innerHTML=a};var g=function(){for(var t=document.querySelectorAll(".task__marker-choice-item"),e=0;e<t.length;e++)t[e].setAttribute("data","marker"+i.questionList[e].right)}}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskMarkerChoice",{templateUrl:"js/components/task-marker-choice/taskMarkerChoiceTmpl.html",controller:"MarkerChoiceCtrl",controllerAs:"$ctrl"}).controller("MarkerChoiceCtrl",t)}(),function(){function t(t,e,s,a){function i(){for(var t=0;t<6;t++)console.info("i - ",t,"  this.active[i].selected - ",n[t].selected)}var r=this;this.taskData=s.getData(e,"data"),this.taskText=this.taskData.taskText,this.markers=this.taskData.markers;this.taskData.qCount;if(this.taskData.qCount>this.taskData.questionList.length){this.taskData.questionList.length}var o=[];this.questionList=[],this.questionList1=[],this.questionList=angular.fromJson(angular.toJson(_.shuffle(this.taskData.questionList))),this.questionList1=angular.fromJson(angular.toJson(_.shuffle(this.taskData.questionList1))),console.log("randomList *-*-*-*---1-",this.questionList),console.log("randomList1 *-*-*-*---2-",this.questionList1),this.active=[];var n=[];this.state=0,this.marker=-1,this.attemptNum=s.getData(e,"attempts"),this.userAttempt=0;for(var l=(this.questionList.length,0);l<this.questionList.length;l++)o[l]={},o[l].right=this.questionList[l].right,console.info("i - ",l,"  _questionList[i].right - ",o[l].right);for(var u=0;u<this.questionList.length;u++){var c=u+3;o[c]={},o[c].right=this.questionList1[u].right,console.info("j - ",c,"  _questionList[j].right - ",o[c].right)}for(var p=0;p<2*this.questionList.length;p++)this.active[p]={},this.active[p].selected=0,this.active[p].marker=-1,n[p]={},n[p].selected=0,n[p].marker=-1;angular.element(document).ready(function(){r.useVideo&&(document.getElementsByClassName("btn_task-video")[0].style.background="url("+r.videoPoster+")"),r.selectMarker=function(t){r.marker=t},r.selectAnswer=function(t,e){-1!=r.marker&&2!=r.state&&(r.active[t].selected=1,r.active[t].marker=r.marker,n[t].selected=1,n[t].marker=r.marker,i(),e.currentTarget.setAttribute("data","marker"+r.marker),r.state=1)},r.selectAnswer1=function(t,e){var s=t+3;-1!=r.marker&&2!=r.state&&(r.active[s].selected=1,r.active[s].marker=r.marker,n[s].selected=1,n[s].marker=r.marker,e.currentTarget.setAttribute("data","marker"+r.marker),r.state=1,i())}}),this.checkAnswer=function(t){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var i=0;i<2*r.questionList.length;i++)if(o[i].right!=r.active[i].marker)return 3===r.userAttempt&&h(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void s.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);r.userAttempt=0,a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)},this.removeRestart=function(){for(var t=document.getElementsByClassName("task__marker-choice-item"),e=0;e<r.active.length;e++)r.active[e].selected=!1,r.active[e].marker=-1,t[e].setAttribute("data","marker");for(var s=0;s<2*r.questionList.length;s++)r.active[s]={},r.active[s].selected=0,r.active[s].marker=-1,n[s]={},n[s].selected=0,n[s].marker=-1;r.state=0,r.marker=-1,r.questionList=_.shuffle(r.questionList),r.questionList1=_.shuffle(r.questionList1);for(var a=0;a<r.questionList.length;a++)o[a].right=r.questionList[a].right;for(var i=0;i<r.questionList.length;i++){o[i+3].right=r.questionList1[i].right}},this.showVideo=function(){var t=document.querySelector(".modal_video__body");r.videoUrl=s.getData(e,"videoUrl"),r.videoPoster=s.getData(e,"videoPoster"),r.videoWidth=s.getData(e,"videoWidth"),r.videoHeight=s.getData(e,"videoHeight"),s.showModal("video");var a='<video class="video-js vjs-default-skin video-element" controls preload="auto"\n                               width="'+r.videoWidth+'" height="'+r.videoHeight+'" poster="'+r.videoPoster+'" vjs-video>\n                            <source src="'+r.videoUrl+'" type="video/mp4">\n                        </video>';t.innerHTML=a};var h=function(){for(var t=document.querySelectorAll(".task__marker-choice-item1"),e=0;e<t.length;e++)t[e].setAttribute("data","marker"+o[e].right);for(var s=document.querySelectorAll(".task__marker-choice-item2"),a=0;a<s.length;a++){var i=a+3;s[a].setAttribute("data","marker"+o[i].right)}}}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskMarkerChoiceDouble",{templateUrl:"js/components/task-marker-choice-double/taskMarkerChoiceDoubleTmpl.html",controller:"MarkerChoiceDoubleCtrl",controllerAs:"$ctrl"}).controller("MarkerChoiceDoubleCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.taskData=s.getData(e,"data"),this.taskText=this.taskData.taskText,this.markers=this.taskData.markers,this.questionList=this.taskData.questionList,this.active=[],this.marker=-1;for(var r=0;r<this.questionList.length;r++)this.active[r]={},this.active[r].marker=this.questionList[r].marker,-1==this.active[r].marker?this.active[r].selected=0:this.active[r].selected=1;angular.element(document).ready(function(){i.selectMarker=function(t){i.marker=t},i.selectAnswer=function(t,e){1==i.active[t].selected?(i.active[t].selected=0,i.active[t].marker=-1,e.currentTarget.setAttribute("data","marker-1")):(i.active[t].selected=1,i.active[t].marker=i.marker,e.currentTarget.setAttribute("data","marker"+i.marker))},i.saveNote=function(){for(var t=0;t<i.questionList.length;t++)s.setMarkerNote(e,t,i.active[t].marker);s.showModal("exercise","Записная книжка","Записи сохранены")}})}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskMarkerNote",{controller:"MarkerNoteCtrl",controllerAs:"$ctrl"}).controller("MarkerNoteCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this,o=[[0,0,0,0,0,1,1],[0,0,0,0,0,1,1]];this.active=[[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],this.state=0,this.taskData=a.getData(e,"data"),this.attemptNum=3,this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(t,e){if(2!=r.state){r.active[e][t]=!r.active[e][t];for(var s=!1,a=0;a<r.active.length;a++)for(var i=0;i<r.active[a].length;i++)if(r.active[a][i]){s=!0;break}r.state=s?1:0}},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var s=0;s<r.active.length;s++)for(var l=0;l<r.active[s].length;l++)if(r.active[s][l]!=o[s][l])return 3===r.userAttempt&&n(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){r.active=[[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]],r.state=0}});var n=function(){r.active=o}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskMultiBox",{templateUrl:"js/components/task-multi-box/taskMultiBoxTmpl.html",controller:"MultiBoxCtrl",controllerAs:"$ctrl"}).controller("MultiBoxCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data");var o=0;this.test||(o=-1==this.taskData.qCount?this.taskData.questionList.length:this.taskData.qCount),this.test?(this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers):(this.taskText=this.taskData.taskText,this.taskData.shuffle?this.questionList=_.sample(this.taskData.questionList,o):this.questionList=this.taskData.questionList),this.active=[],this.state=0,this.test?this.attemptNum=-1:this.attemptNum=this.taskData.attempts,this.userAttempt=0;for(var n=0;n<this.questionList.length;n++)this.active[n]={},this.active[n].selected=0;this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(e){if(2!=r.state){r.active[e].selected=!r.active[e].selected;for(var s=!1,a=0;a<r.active.length;a++)if(r.active[a].selected){s=!0;break}s?(r.test&&t.$emit("myTestState",1),r.state=1):(r.test&&t.$emit("myTestState",0),r.state=0)}},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var o=0;o<r.questionList.length;o++)if(r.questionList[o].right!=r.active[o].selected)return r.userAttempt==r.attemptNum&&r.taskData.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){for(var t=0;t<r.active.length;t++)r.active[t].selected=!1;r.state=0,r.taskData.shuffle&&(r.questionList=_.sample(r.taskData.questionList,o))};var s=function(){for(var t=0;t<r.questionList.length;t++)r.active[t].selected=r.questionList[t].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskMultiChoice",{templateUrl:"js/components/task-multi-choice/taskMultiChoiceTmpl.html",controller:"MultiChoiceCtrl",controllerAs:"$ctrl"}).controller("MultiChoiceCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.active=[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],this.state=0,this.taskData=a.getData(e,"data");for(var o=[],n=0;n<this.taskData.questionList.length;n++)o[n]=this.taskData.questionList[n].right;this.attemptNum=3,this.userAttempt=0,this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(t,e){if(2!=r.state){r.active[e][t]=!r.active[e][t];for(var s=!1,a=0;a<r.active.length;a++)for(var i=0;i<r.active[a].length;i++)if(r.active[a][i]){s=!0;break}r.state=s?1:0}},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var s=0;s<r.active.length;s++)for(var n=0;n<r.active[s].length;n++)if(r.active[s][n]!=o[s][n])return 3===r.userAttempt&&l(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){r.active=[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],r.state=0}});var l=function(){r.active=o}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskMultiChoiceTable",{templateUrl:"js/components/task-multi-choice-table/taskMultiChoiceTableTmpl.html",controller:"MultiChoiceTableCtrl",controllerAs:"$ctrl"}).controller("MultiChoiceTableCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.items=[];var o=Number(e.chapter)-1,n=Number(e.page)-1;this.taskData=a.getData(e,"data"),this.titles=this.taskData.titles,this.showTitle=this.taskData.showTitle;var l=this.taskData.task_fields/this.titles.length;this.range=function(t){for(var e=[],s=t*l,a=(t+1)*l,i=s;i<a;i++)e.push(r.items.fields[i]);return e},function(){i.getUserNotes().forEach(function(t){t.chapter_id==o&&t.page_id==n&&(r.items=t)})}(),this.saveNote=function(){for(var t=document.getElementsByClassName("task-note_item_input"),e=0;e<t.length;e++)r.items.fields[e].text=t[e].value;i.setUserNotes(r.items,o,n),a.showModal("exercise","Записная книжка","Записи сохранены")}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskNote",{templateUrl:"js/components/task-note/taskNoteTmpl.html",controller:"NoteCtrl",controllerAs:"$ctrl"}).controller("NoteCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=JSON.parse(angular.toJson(this.taskData.exs)),this.taskExs1=this.taskExs[0];for(var o=0;o<this.taskExs.length;o++)this.taskExs[o].questionList.questions=this.taskExs[o].questionList.questions.map(function(t){return t.default=r.taskData.defaultLabel,t.v_id=-1,t.open=0,t}),this.taskExs[o].questionList.variants=this.taskExs[o].questionList.variants.map(function(t){return t.selected=-1,t.connectedTo=-1,t});if(this.state=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle)for(var n=0;n<this.taskExs.length;n++)this.taskExs[n].questionList.variants=_.shuffle(this.taskExs[n].questionList.variants);this.showComment=!1,this.selectChange=function(t,e,s,a){if(-1!=e&&2!=r.state){if(-1!=r.taskExs[a].questionList.questions[s].v_id)for(var i=r.taskExs[a].questionList.questions[s].v_id,o=0;o<r.taskExs[a].questionList.variants.length;o++){r.taskExs[a].questionList.variants[o].v_id==i&&(r.taskExs[a].questionList.variants[o].selected=-1);break}r.taskExs[a].questionList.questions[s].v_id=e;for(var n=0;n<r.taskExs[a].questionList.variants.length;n++)r.taskExs[a].questionList.variants[n].v_id==e&&(r.taskExs[a].questionList.variants[n].selected=1,r.taskExs[a].questionList.questions[s].default=r.taskExs[a].questionList.variants[n].label);for(var l=!0,u=0;u<r.taskExs.length;u++)for(var c=0;c<r.taskExs[u].questionList.questions.length;c++)if(-1==r.taskExs[u].questionList.questions[c].v_id){l=!1;break}l&&(r.state=1),r.taskExs[a].sameQ||(r.filteredList=r.getNotSelected(a)),r.toggleSelect(t,s,a),t.stopPropagation()}},this.checkAnswer=function(){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var t=0;t<r.taskExs.length;t++)for(var s=0;s<r.taskExs[t].questionList.questions.length;s++){var o=r.taskExs[t].questionList.questions[s];if(r.taskData.exs[t].questionList.variants[o.v_id].q_id!=o.q_id)return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&l(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1)}r.userAttempt=0,i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)},this.removeRestart=function(){if(r.state=0,r.taskOptions.shuffle)for(var t=0;t<r.taskExs.length;t++)r.taskExs[t].questionList.variants=_.shuffle(r.taskExs[t].questionList.variants);for(var e=0;e<r.taskExs.length;e++){for(var s=0;s<r.taskExs[e].questionList.questions.length;s++)r.taskExs[e].questionList.questions[s].default=r.taskData.defaultLabel,r.taskExs[e].questionList.questions[s].open=0,r.taskExs[e].questionList.questions[s].v_id=-1;for(var a=0;a<r.taskExs[e].questionList.variants.length;a++)r.taskExs[e].questionList.variants[a].selected=-1}r.filteredList=r.getNotSelected(-1)};var l=function(){console.log("SelectCtrl:: showAnswer:");for(var t=0;t<r.taskExs.length;t++)for(var e=0;e<r.taskExs[t].questionList.questions.length;e++)for(var s=0;s<r.taskExs[t].questionList.variants.length;s++)if(r.taskExs[t].questionList.questions[e].q_id==r.taskExs[t].questionList.variants[s].q_id){r.taskExs[t].questionList.questions[e].default=r.taskExs[t].questionList.variants[s].label;break}};this.toggleSelect=function(t,e,s){r.taskExs[s].questionList.questions[e].open=!r.taskExs[s].questionList.questions[e].open,t.stopPropagation()},this.getNotSelected=function(t){for(var e=[],s=0;s<r.taskExs.length;s++)if(e[s]=[],s==t)for(var a=0;a<r.taskExs[s].questionList.variants.length;a++)r.taskExs[s].questionList.variants[a].selected<0&&e[s].push(r.taskExs[s].questionList.variants[a]);else e[s]=angular.fromJson(angular.toJson(r.taskExs[s].questionList.variants));return e},this.filteredList=this.getNotSelected(-1)}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskSelect",{templateUrl:"js/components/task-select/taskSelectTmpl.html",controller:"SelectCtrl",controllerAs:"$ctrl"}).controller("SelectCtrl",t)}(),function(){function t(t,e,s,a,i){function r(t,e,s){var a=_.shuffle(e.filter(function(t,e){return e!==s})),i=_.random(0,n);return a.splice(i,0,e[s]),a.length=n+1,o.userAnswer.forEach(function(e){e[t+"Num"]=i}),a}var o=this,n=3,l=0;o.taskData=a.getData(t,"exs"),o.showVariant=!1,o.show=!1,o.end=!1,o.btnDisabledState={restart:!0,answer:!0},o.userAnswer=[],o.userAnswer.length=n+1;for(var u=0;u<o.userAnswer.length;u++)o.userAnswer[u]={},o.userAnswer[u].character="",o.userAnswer[u].characterNum="",o.userAnswer[u].question="",o.userAnswer[u].questionNum="";o.getVariantList=function(t,e){return e<=l},o.orderByQuest=function(t,e){return e===l},o.getAnswer=function(t,e){"character"===t?(o.userAnswer.forEach(function(t){return t.character=""}),o.userAnswer[e].character=e===o.userAnswer[e].characterNum):(o.userAnswer.forEach(function(t){return t.question=""}),o.userAnswer[e].question=e===o.userAnswer[e].questionNum),o.userAnswer.filter(function(t){return""!==t.character}).length&&o.userAnswer.filter(function(t){return""!==t.question}).length&&(o.btnDisabledState.answer=!1)},o.checkAnswer=function(){return o.userAnswer.filter(function(t){return!0===t.character}).length&&o.userAnswer.filter(function(t){return!0===t.question}).length?!1===o.show&&l+1!==o.taskData.variant.length?(o.show=!0,a.showModal("exercise","Результат","Верно! Следующая цель: "+o.taskData.variant[l+1].final+' Закройте окно и нажмите кнопку "Далее".',!0)):(o.show=!1,l+1===o.taskData.variant.length?(o.btnDisabledState.answer=!0,o.show=!0,o.end=!0,i.setUserProgress(100,1,Number(t.chapter)-1,Number(t.page)-1),a.showModal("exercise","Ваш результат","Верный ответ!",!0)):(l++,o.userAnswer.forEach(function(t){return t.character=""}),o.userAnswer.forEach(function(t){return t.question=""}),o.characterList=r("character",o.taskData.characterList,o.taskData.variant[l].characterNum),o.questionList=r("question",o.taskData.questionList,o.taskData.variant[l].questionNum),o.btnDisabledState.answer=!0,void 0)):(o.show=!0,o.btnDisabledState.answer=!0,o.btnDisabledState.restart=!1,a.showModal("exercise","Ваш результат","Неверно! Начните заново.",!1))},o.removeRestart=function(){o.show=!1,o.btnDisabledState.answer=!0,o.btnDisabledState.restart=!0,o.userAnswer.forEach(function(t){return t.character=""}),o.userAnswer.forEach(function(t){return t.question=""}),o.characterList=r("character",o.taskData.characterList,o.taskData.variant[l].characterNum),o.questionList=r("question",o.taskData.questionList,o.taskData.variant[l].questionNum)},o.removeRestart()}t.$inject=["$stateParams","$document","$element","staticService","userService"],angular.module("courseApp").controller("TaskSequenceQuestCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.test=s.test,this.currentTestQuestion=i.currentTestQuestion,this.taskData=a.getData(e,"data"),this.test?(this.taskText=this.currentTestQuestion.question,this.questionList=this.currentTestQuestion.answers,console.log("SingleCCtrl:: Answers:",this.questionList)):(this.taskText=a.getData(e,"taskText"),this.taskData.shuffle?this.questionList=_.shuffle(a.getData(e,"questionList")):this.questionList=a.getData(e,"questionList")),this.active=[],this.state=0,this.test?this.attemptNum=-1:this.attemptNum=this.taskData.attempts,this.userAttempt=0;for(var o=0;o<this.questionList.length;o++)this.active[o]={},this.active[o].selected=0;this.showComment=!1,angular.element(document).ready(function(){r.selectAnswer=function(e){2!=r.state&&(r.active.forEach(function(t){t.selected=0}),r.active[e].selected=1,r.test&&t.$emit("myTestState",1),r.state=1)},r.checkAnswer=function(t){if(!t.target.classList.contains("btn_disabled")){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var o=0;o<r.questionList.length;o++)if(r.questionList[o].right!==r.active[o].selected)return r.userAttempt==r.attemptNum&&r.taskData.showAnswer&&s(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},r.removeRestart=function(){for(var t=0;t<r.active.length;t++)r.active[t].selected=!1;r.state=0,r.taskData.shuffle&&(r.questionList=_.shuffle(r.questionList))};var s=function(){for(var t=0;t<r.questionList.length;t++)r.active[t].selected=r.questionList[t].right}})}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskSingleChoice",{templateUrl:"js/components/task-single-choice/taskSingleChoiceTmpl.html",controller:"SingleChoiceCtrl",controllerAs:"$ctrl"}).controller("SingleChoiceCtrl",t)}(),function(){function t(t,e,s,a){var i=this;i.taskData=JSON.parse(angular.toJson(s.getData(e,"data")));var r=i.taskData.options.attempts,o=0;i.taskText=i.taskData.exs.taskText,i.end=!1,i.btnDisabledState={restart:!0,answer:!1},angular.element(document).ready(function(){var n=$(t).find(".sortable-box__item"),l=$(t).find(".sortable-box");$(t).find(".sortable-box__item").draggable({containment:".sortable-container",refreshPositions:!0,revert:!0}),$(t).find(".sortable-box").droppable({drop:function(t,e){var s=$(t.target).find(".sortable-box__item"),a=s.html(),i=e.draggable.attr("data-number");s.attr("data-number"),$(l[i]).position().top,s.position().top,$(l[i]).position().left,s.position().left;s.html(e.draggable.html()).css({"z-index":1e4}),e.draggable.html(a)}}),i.checkAnswer=function(){var n=$(t).find(".sortable-box__item");i.btnDisabledState.restart=!1,i.btnDisabledState.answer=!0,o===r?o=0:o++;for(var l=0;l<n.length;l++)$.trim($(n[l]).html().replace(/'/g,'"'))!==$.trim(i.taskData.exs.variant[l].content.replace(/'/g,'"'))?i.taskData.exs.variant[l].answer=!1:i.taskData.exs.variant[l].answer=!0;return console.log("=>",o),i.taskData.exs.variant.filter(function(t){return!0===t.answer}).length===i.taskData.exs.variant.length?(a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[0],!0)):(o===r&&u(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[o],!1))},i.removeRestart=function(){i.btnDisabledState.restart=!0,i.btnDisabledState.answer=!1;for(var t=_.shuffle(_.range(l.length)),e=0;e<n.length;e++)$(n[e]).html(i.taskData.exs.variant[t[e]].content);i.taskData.exs.variant.forEach(function(t){return t.answer=""})},i.removeRestart();var u=function(){for(var t=0;t<n.length;t++)$(n[t]).html(i.taskData.exs.variant[t].content),i.taskData.exs.variant[t].answer=!0}})}t.$inject=["$element","$stateParams","staticService","userService"],angular.module("courseApp").controller("TaskStrictSortableCtrl",t)}(),function(){function t(t,e,s,a){var i=this;this.taskData=s.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=angular.fromJson(angular.toJson(this.taskData.exs)),this.state=1,this.left_questions=[];for(var r=0;r<this.taskExs[0].questionList.length;r++)this.left_questions[r]=this.taskExs[0].questionList[r].phrase,console.log("this.left_questions[i] -***********************",this.left_questions[r]);if(console.log("this.left_questions -***********************",this.left_questions),this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle)for(var o=0;o<this.taskExs.length;o++)this.taskExs[o].questionList=_.shuffle(this.taskExs[o].questionList);this.checkAnswer=function(){i.userAttempt===i.attemptNum&&(i.userAttempt=0),i.userAttempt++,i.state=2,$(".task-swap-list_item").draggable("disable");for(var t=document.querySelectorAll(".task-swap-list"),r=0;r<i.taskData.exs.length;r++)for(var o=t[r].querySelectorAll(".task-swap-list_item"),l=0;l<i.taskData.exs[r].questionList.length;l++)if(o[l].getAttribute("data-order")!=i.taskData.exs[r].questionList[l].order)return i.userAttempt==i.attemptNum&&i.taskOptions.showAnswer&&n(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void s.showModal("exercise","Ваш результат",i.taskData.messages[i.userAttempt],!1);a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",i.taskData.messages[0],!0)},this.removeRestart=function(){if(i.state=1,i.showRight=0,$(".task-swap-list_item").draggable("enable"),i.taskOptions.shuffle)for(var t=0;t<i.taskExs.length;t++)i.taskExs[t].questionList=_.shuffle(i.taskExs[t].questionList)};var n=function(){i.showRight=1};angular.element(document).ready(function(){function t(t,e){if(!t.classList.contains("task-swap-list_item__fixed")){var s=t.parentNode,a=t.nextSibling===e?t:t.nextSibling;e.parentNode.insertBefore(t,e),s.insertBefore(e,a),e.style.left="0px",e.style.top="0px"}}$(function(){$(".task-swap-list_item").draggable({zIndex:2,start:function(t,e){},stop:function(t,e){e.helper[0].style.top="0px",e.helper[0].style.left="0px"}}).droppable({drop:function(e,s){if(2==this.state)return!1;t($(this).get(0),$(s.draggable).get(0))}})})})}t.$inject=["$scope","$stateParams","staticService","userService"],angular.module("courseApp").component("taskSwapList",{templateUrl:"js/components/task-swap-list/taskSwapListTmpl.html",controller:"SwapListCtrl",controllerAs:"$ctrl"}).controller("SwapListCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.taskData=s.getData(e,"data"),this.taskOptions=this.taskData.options,this.taskExs=angular.fromJson(angular.toJson(this.taskData.exs)),this.state=1,this.left_questions=[];for(var o=0;o<this.taskExs[0].questionList.length;o++)this.left_questions[o]=this.taskExs[0].questionList[o].phrase;if(this.showRight=0,this.attemptNum=this.taskOptions.attempts,this.userAttempt=0,this.taskOptions.shuffle)for(var n=0;n<this.taskExs.length;n++)this.taskExs[n].questionList=_.shuffle(this.taskExs[n].questionList);this.checkAnswer=function(){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2,$(".sortable").sortable("option","disabled",!0);for(var t=document.querySelectorAll(".task-swap-list__label-container"),i=0;i<r.taskData.exs.length;i++)for(var o=t[i].querySelectorAll(".task-swap-list__label-item"),n=0;n<r.taskData.exs[i].questionList.length;n++)if(o[n].getAttribute("data-order")!=r.taskData.exs[i].questionList[n].order)return r.userAttempt==r.attemptNum&&r.taskOptions.showAnswer&&l(),a.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void s.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);a.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),s.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)},this.removeRestart=function(){if(r.state=1,r.showRight=0,i(function(){$(".sortable").sortable({placeholder:"empty-space",start:function(t,e){console.log(e.item),e.item[0].classList.add("active")},stop:function(t,e){console.log(e.item),e.item[0].classList.remove("active")}})},1),$(".sortable").sortable("option","disabled",!1),r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.taskOptions.shuffle)for(var t=0;t<r.taskExs.length;t++)r.taskExs[t].questionList=_.shuffle(r.taskExs[t].questionList)};var l=function(){r.showRight=1};angular.element(document).ready(function(){$(function(){$(".sortable").sortable({axis:"y",placeholder:"empty-space",start:function(t,e){console.log(e.item),e.item[0].classList.add("active")},stop:function(t,e){console.log(e.item),i(function(){e.item[0].classList.remove("active")},0)}})})})}t.$inject=["$scope","$stateParams","staticService","userService","$timeout"],angular.module("courseApp").component("taskSwapListSortable",{templateUrl:"js/components/task-swap-list-sortable/taskSwapListSortableTmpl.html",controller:"SwapListSortableCtrl",controllerAs:"$ctrl"}).controller("SwapListSortableCtrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.state=1,this.taskData=a.getData(e,"data"),this.taskExs=JSON.parse(angular.toJson(this.taskData.exs))[0],this.userAttempt=0,this.attemptNum=this.taskData.options.attempts,this.checkAnswer=function(){if(2!=r.state){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;for(var t=document.getElementsByClassName("task-input"),s=0;s<r.taskExs.questionList.length;s++)if(t[s].value!=r.taskExs.questionList[s].label)return r.userAttempt==r.attemptNum&&o(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);r.userAttempt=0,i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},this.removeRestart=function(){r.state=1;for(var t=document.getElementsByClassName("task-input"),e=0;e<t.length;e++)t[e].value=""};var o=function(){for(var t=document.getElementsByClassName("task-input"),e=0;e<r.taskExs.questionList.length;e++)t[e].value=r.taskExs.questionList[e].label}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskTextInput1",{templateUrl:"js/components/task-text-input/task-text-input-1/taskTextInput1Tmpl.html",controller:"taskTextInput1Ctrl",controllerAs:"$ctrl"}).controller("taskTextInput1Ctrl",t)}(),function(){function t(t,e,s,a,i){var r=this;this.state=0,this.taskData=a.getData(e,"data"),this.taskExs=JSON.parse(angular.toJson(this.taskData.exs))[0];var o=document.getElementsByClassName("task-input"),n=o.length,n=6;this.myValue=[];for(var l=0;l<this.taskExs.questionList.length;l++)this.myValue[l]="";this.userAttempt=0,this.attemptNum=this.taskData.options.attempts,this.checkAnswer=function(){if(2!=r.state){r.userAttempt===r.attemptNum&&(r.userAttempt=0),r.userAttempt++,r.state=2;var t=document.getElementsByClassName("task-input");console.log(" inputs =>",t[0].value);for(var s=0;s<r.taskExs.questionList.length;s++)if(console.log("j - ",s," inputs[j].value =>",t[s].value),t[s].value!=r.taskExs.questionList[s].label)return r.userAttempt==r.attemptNum&&u(),i.setUserProgress(0,0,Number(e.chapter)-1,Number(e.page)-1),void a.showModal("exercise","Ваш результат",r.taskData.messages[r.userAttempt],!1);r.userAttempt=0,
i.setUserProgress(100,1,Number(e.chapter)-1,Number(e.page)-1),a.showModal("exercise","Ваш результат",r.taskData.messages[0],!0)}},this.removeRestart=function(){r.state=0;for(var t=0;t<n;t++)o[t].value="",r.myValue[t]=""},this.checkA=function(){for(var t=0,e=0;e<n;e++)""!=r.myValue[e]&&t++;t==n&&(r.state=1)};var u=function(){for(var t=document.getElementsByClassName("task-input"),e=0;e<r.taskExs.questionList.length;e++)t[e].value=r.taskExs.questionList[e].label,r.myValue[e]=r.taskExs.questionList[e].label}}t.$inject=["$scope","$stateParams","$attrs","staticService","userService"],angular.module("courseApp").component("taskTextInput2",{templateUrl:"js/components/task-text-input/task-text-input-1/taskTextInput1Tmpl.html",controller:"taskTextInput2Ctrl",controllerAs:"$ctrl"}).controller("taskTextInput2Ctrl",t)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
